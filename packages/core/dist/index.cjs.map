{"version":3,"file":"index.cjs","sources":["../src/constants.ts","../../../node_modules/gl-matrix/esm/common.js","../../../node_modules/gl-matrix/esm/vec3.js","../src/utils/get-bounds.ts","../src/utils/buffer-utils.ts","../src/utils/color-utils.ts","../src/utils/image-utils.ts","../src/utils/file-utils.ts","../src/utils/is-plain-object.ts","../src/utils/logger.ts","../../../node_modules/gl-matrix/esm/mat4.js","../src/utils/math-utils.ts","../src/utils/property-utils.ts","../src/utils/uuid.ts","../src/utils/http-utils.ts","../src/properties/property.ts","../src/properties/extensible-property.ts","../src/properties/accessor.ts","../src/properties/animation.ts","../src/properties/animation-channel.ts","../src/properties/animation-sampler.ts","../src/properties/buffer.ts","../src/properties/camera.ts","../src/properties/extension-property.ts","../src/properties/texture-info.ts","../src/properties/material.ts","../src/properties/mesh.ts","../src/properties/node.ts","../src/properties/primitive.ts","../src/properties/primitive-target.ts","../src/properties/scene.ts","../src/properties/skin.ts","../src/properties/texture.ts","../src/properties/root.ts","../src/document.ts","../src/extension.ts","../src/io/reader-context.ts","../src/io/reader.ts","../src/io/writer-context.ts","../src/io/writer.ts","../src/io/platform-io.ts","../src/io/node-io.ts","../src/io/deno-io.ts","../src/io/web-io.ts"],"sourcesContent":["// Injected at compile time, from $npm_package_version.\ndeclare const PACKAGE_VERSION: string;\n\n/**\n * Current version of the package.\n * @hidden\n */\nexport const VERSION = `v${PACKAGE_VERSION}`;\n\n/** @internal */\nexport const NAME = '@gltf-transform/core';\n\n/**\n * Interface allowing Accessor setter/getter methods to be used interchangeably with gl-matrix\n * arrays or with three.js math objects' fromArray/toArray methods. For example, THREE.Vector2,\n * THREE.Vector3, THREE.Vector4, THREE.Quaternion, THREE.Matrix3, THREE.Matrix4, and THREE.Color.\n *\n * @internal\n */\nexport interface ArrayProxy {\n\t/** Sets the value of the object from an array of values. */\n\tfromArray(array: number[]): ArrayProxy;\n\t/** Writes the value of the object into the given array. */\n\ttoArray(array: number[]): number[];\n}\n\n/**\n * TypeScript utility for nullable types.\n * @hidden\n */\nexport type Nullable<T> = { [P in keyof T]: T[P] | null };\n\n/**\n * 2-dimensional vector.\n * @hidden\n */\nexport type vec2 = [number, number];\n\n/**\n * 3-dimensional vector.\n * @hidden\n */\nexport type vec3 = [number, number, number];\n\n/**\n * 4-dimensional vector, e.g. RGBA or a quaternion.\n * @hidden\n */\nexport type vec4 = [number, number, number, number];\n\n// prettier-ignore\n/**\n * 3x3 matrix, e.g. an affine transform of a 2D vector.\n * @hidden\n */\nexport type mat3 = [\n\tnumber, number, number,\n\tnumber, number, number,\n\tnumber, number, number,\n];\n\n// prettier-ignore\n/**\n * 4x4 matrix, e.g. an affine transform of a 3D vector.\n * @hidden\n */\nexport type mat4 = [\n\tnumber, number, number, number,\n\tnumber, number, number, number,\n\tnumber, number, number, number,\n\tnumber, number, number, number,\n];\n\n/** @hidden */\nexport type bbox = { min: vec3; max: vec3 };\n\n/** @hidden */\nexport const GLB_BUFFER = '@glb.bin';\n\n/**\n * Abstraction representing any one of the typed array classes supported by glTF and JavaScript.\n * @hidden\n */\nexport type TypedArray = Float32Array | Uint32Array | Uint16Array | Uint8Array | Int16Array | Int8Array;\n\n/**\n * Abstraction representing the typed array constructors supported by glTF and JavaScript.\n * @hidden\n */\nexport type TypedArrayConstructor =\n\t| Float32ArrayConstructor\n\t| Uint32ArrayConstructor\n\t| Uint16ArrayConstructor\n\t| Uint8ArrayConstructor\n\t| Int16ArrayConstructor\n\t| Int8ArrayConstructor;\n\n/** String IDs for core {@link Property} types. */\nexport enum PropertyType {\n\tACCESSOR = 'Accessor',\n\tANIMATION = 'Animation',\n\tANIMATION_CHANNEL = 'AnimationChannel',\n\tANIMATION_SAMPLER = 'AnimationSampler',\n\tBUFFER = 'Buffer',\n\tCAMERA = 'Camera',\n\tMATERIAL = 'Material',\n\tMESH = 'Mesh',\n\tPRIMITIVE = 'Primitive',\n\tPRIMITIVE_TARGET = 'PrimitiveTarget',\n\tNODE = 'Node',\n\tROOT = 'Root',\n\tSCENE = 'Scene',\n\tSKIN = 'Skin',\n\tTEXTURE = 'Texture',\n\tTEXTURE_INFO = 'TextureInfo',\n}\n\n/** Vertex layout method. */\nexport enum VertexLayout {\n\t/**\n\t * Stores vertex attributes in a single buffer view per mesh primitive. Interleaving vertex\n\t * data may improve performance by reducing page-thrashing in GPU memory.\n\t */\n\tINTERLEAVED = 'interleaved',\n\n\t/**\n\t * Stores each vertex attribute in a separate buffer view. May decrease performance by causing\n\t * page-thrashing in GPU memory. Some 3D engines may prefer this layout, e.g. for simplicity.\n\t */\n\tSEPARATE = 'separate',\n}\n\n/** Accessor usage. */\nexport enum BufferViewUsage {\n\tARRAY_BUFFER = 'ARRAY_BUFFER',\n\tELEMENT_ARRAY_BUFFER = 'ELEMENT_ARRAY_BUFFER',\n\tINVERSE_BIND_MATRICES = 'INVERSE_BIND_MATRICES',\n\tOTHER = 'OTHER',\n\tSPARSE = 'SPARSE',\n}\n\n/** Texture channels. */\nexport enum TextureChannel {\n\tR = 0x1000,\n\tG = 0x0100,\n\tB = 0x0010,\n\tA = 0x0001,\n}\n\nexport enum Format {\n\tGLTF = 'GLTF',\n\tGLB = 'GLB',\n}\n\nexport const ComponentTypeToTypedArray = {\n\t'5120': Int8Array,\n\t'5121': Uint8Array,\n\t'5122': Int16Array,\n\t'5123': Uint16Array,\n\t'5125': Uint32Array,\n\t'5126': Float32Array,\n};\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import { transformMat4 } from 'gl-matrix/vec3';\nimport { PropertyType, bbox, mat4, vec3 } from '../constants.js';\nimport type { Mesh, Node, Scene } from '../properties/index.js';\n\n/**\n * Computes bounding box (AABB) in world space for the given {@link Node} or {@link Scene}.\n *\n * Example:\n *\n * ```ts\n * const {min, max} = getBounds(scene);\n * ```\n */\nexport function getBounds(node: Node | Scene): bbox {\n\tconst resultBounds = createBounds();\n\tconst parents = node.propertyType === PropertyType.NODE ? [node] : node.listChildren();\n\n\tfor (const parent of parents) {\n\t\tparent.traverse((node) => {\n\t\t\tconst mesh = node.getMesh();\n\t\t\tif (!mesh) return;\n\n\t\t\t// Compute mesh bounds and update result.\n\t\t\tconst meshBounds = getMeshBounds(mesh, node.getWorldMatrix());\n\t\t\texpandBounds(meshBounds.min, resultBounds);\n\t\t\texpandBounds(meshBounds.max, resultBounds);\n\t\t});\n\t}\n\n\treturn resultBounds;\n}\n\n/** Computes mesh bounds in local space. */\nfunction getMeshBounds(mesh: Mesh, worldMatrix: mat4): bbox {\n\tconst meshBounds = createBounds();\n\n\t// We can't transform a local AABB into world space and still have a tight AABB in world space,\n\t// so we need to compute the world AABB vertex by vertex here.\n\tfor (const prim of mesh.listPrimitives()) {\n\t\tconst position = prim.getAttribute('POSITION');\n\t\tif (!position) continue;\n\n\t\tlet localPos: vec3 = [0, 0, 0];\n\t\tlet worldPos: vec3 = [0, 0, 0];\n\t\tfor (let i = 0; i < position.getCount(); i++) {\n\t\t\tlocalPos = position.getElement(i, localPos) as vec3;\n\t\t\tworldPos = transformMat4(worldPos, localPos, worldMatrix) as vec3;\n\t\t\texpandBounds(worldPos, meshBounds);\n\t\t}\n\t}\n\n\treturn meshBounds;\n}\n\n/** Expands bounds of target by given source. */\nfunction expandBounds(point: vec3, target: bbox): void {\n\tfor (let i = 0; i < 3; i++) {\n\t\ttarget.min[i] = Math.min(point[i], target.min[i]);\n\t\ttarget.max[i] = Math.max(point[i], target.max[i]);\n\t}\n}\n\n/** Creates new bounds with min=Infinity, max=-Infinity. */\nfunction createBounds(): bbox {\n\treturn {\n\t\tmin: [Infinity, Infinity, Infinity] as vec3,\n\t\tmax: [-Infinity, -Infinity, -Infinity] as vec3,\n\t};\n}\n","import type { TypedArray } from '../constants.js';\n\n/**\n * *Common utilities for working with Uint8Array and Buffer objects.*\n *\n * @category Utilities\n */\nexport class BufferUtils {\n\t/** Creates a byte array from a Data URI. */\n\tstatic createBufferFromDataURI(dataURI: string): Uint8Array {\n\t\tif (typeof Buffer === 'undefined') {\n\t\t\t// Browser.\n\t\t\tconst byteString = atob(dataURI.split(',')[1]);\n\t\t\tconst ia = new Uint8Array(byteString.length);\n\t\t\tfor (let i = 0; i < byteString.length; i++) {\n\t\t\t\tia[i] = byteString.charCodeAt(i);\n\t\t\t}\n\t\t\treturn ia;\n\t\t} else {\n\t\t\t// Node.js.\n\t\t\tconst data = dataURI.split(',')[1];\n\t\t\tconst isBase64 = dataURI.indexOf('base64') >= 0;\n\t\t\treturn Buffer.from(data, isBase64 ? 'base64' : 'utf8');\n\t\t}\n\t}\n\n\t/** Encodes text to a byte array. */\n\tstatic encodeText(text: string): Uint8Array {\n\t\tif (typeof TextEncoder !== 'undefined') {\n\t\t\treturn new TextEncoder().encode(text);\n\t\t}\n\t\treturn Buffer.from(text);\n\t}\n\n\t/** Decodes a byte array to text. */\n\tstatic decodeText(array: Uint8Array): string {\n\t\tif (typeof TextDecoder !== 'undefined') {\n\t\t\treturn new TextDecoder().decode(array);\n\t\t}\n\t\treturn Buffer.from(array).toString('utf8');\n\t}\n\n\t/**\n\t * Concatenates N byte arrays.\n\t */\n\tstatic concat(arrays: Uint8Array[]): Uint8Array {\n\t\tlet totalByteLength = 0;\n\t\tfor (const array of arrays) {\n\t\t\ttotalByteLength += array.byteLength;\n\t\t}\n\n\t\tconst result = new Uint8Array(totalByteLength);\n\t\tlet byteOffset = 0;\n\n\t\tfor (const array of arrays) {\n\t\t\tresult.set(array, byteOffset);\n\t\t\tbyteOffset += array.byteLength;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Pads a Uint8Array to the next 4-byte boundary.\n\t *\n\t * Reference: [glTF → Data Alignment](https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#data-alignment)\n\t */\n\tstatic pad(srcArray: Uint8Array, paddingByte = 0): Uint8Array {\n\t\tconst paddedLength = this.padNumber(srcArray.byteLength);\n\t\tif (paddedLength === srcArray.byteLength) return srcArray;\n\n\t\tconst dstArray = new Uint8Array(paddedLength);\n\t\tdstArray.set(srcArray);\n\n\t\tif (paddingByte !== 0) {\n\t\t\tfor (let i = srcArray.byteLength; i < paddedLength; i++) {\n\t\t\t\tdstArray[i] = paddingByte;\n\t\t\t}\n\t\t}\n\n\t\treturn dstArray;\n\t}\n\n\t/** Pads a number to 4-byte boundaries. */\n\tstatic padNumber(v: number): number {\n\t\treturn Math.ceil(v / 4) * 4;\n\t}\n\n\t/** Returns true if given byte array instances are equal. */\n\tstatic equals(a: Uint8Array, b: Uint8Array): boolean {\n\t\tif (a === b) return true;\n\n\t\tif (a.byteLength !== b.byteLength) return false;\n\n\t\tlet i = a.byteLength;\n\t\twhile (i--) {\n\t\t\tif (a[i] !== b[i]) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns a Uint8Array view of a typed array, with the same underlying ArrayBuffer.\n\t *\n\t * A shorthand for:\n\t *\n\t * ```js\n\t * const buffer = new Uint8Array(\n\t * \tarray.buffer,\n\t * \tarray.byteOffset + byteOffset,\n\t * \tMath.min(array.byteLength, byteLength)\n\t * );\n\t * ```\n\t *\n\t */\n\tstatic toView(a: TypedArray, byteOffset = 0, byteLength = Infinity): Uint8Array {\n\t\treturn new Uint8Array(a.buffer, a.byteOffset + byteOffset, Math.min(a.byteLength, byteLength));\n\t}\n\n\t/** @internal */\n\tstatic assertView(view: null): null;\n\tstatic assertView(view: Uint8Array): Uint8Array;\n\tstatic assertView(view: Uint8Array | null): Uint8Array | null;\n\tstatic assertView(view: Uint8Array | null): Uint8Array | null {\n\t\tif (view && !ArrayBuffer.isView(view)) {\n\t\t\tthrow new Error(`Method requires Uint8Array parameter; received \"${typeof view}\".`);\n\t\t}\n\t\treturn view as Uint8Array;\n\t}\n}\n","import type { vec3, vec4 } from '../constants.js';\n\n/**\n * *Common utilities for working with colors in vec3, vec4, or hexadecimal form.*\n *\n * Provides methods to convert linear components (vec3, vec4) to sRGB hex values. All colors in\n * the glTF specification, excluding color textures, are linear. Hexadecimal values, in sRGB\n * colorspace, are accessible through helper functions in the API as a convenience.\n *\n * ```typescript\n * // Hex (sRGB) to factor (linear).\n * const factor = ColorUtils.hexToFactor(0xFFCCCC, []);\n *\n * // Factor (linear) to hex (sRGB).\n * const hex = ColorUtils.factorToHex([1, .25, .25])\n * ```\n *\n * @category Utilities\n */\nexport class ColorUtils {\n\t/**\n\t * Converts sRGB hexadecimal to linear components.\n\t * @typeParam T vec3 or vec4 linear components.\n\t */\n\tstatic hexToFactor<T = vec3 | vec4>(hex: number, target: T): T {\n\t\thex = Math.floor(hex);\n\t\tconst _target = target as unknown as vec3;\n\t\t_target[0] = ((hex >> 16) & 255) / 255;\n\t\t_target[1] = ((hex >> 8) & 255) / 255;\n\t\t_target[2] = (hex & 255) / 255;\n\t\treturn this.convertSRGBToLinear<T>(target, target);\n\t}\n\n\t/**\n\t * Converts linear components to sRGB hexadecimal.\n\t * @typeParam T vec3 or vec4 linear components.\n\t */\n\tstatic factorToHex<T = vec3 | vec4>(factor: T): number {\n\t\tconst target = [...(factor as unknown as number[])] as unknown as T;\n\t\tconst [r, g, b] = this.convertLinearToSRGB(factor, target) as unknown as number[];\n\t\treturn ((r * 255) << 16) ^ ((g * 255) << 8) ^ ((b * 255) << 0);\n\t}\n\n\t/**\n\t * Converts sRGB components to linear components.\n\t * @typeParam T vec3 or vec4 linear components.\n\t */\n\tstatic convertSRGBToLinear<T = vec3 | vec4>(source: T, target: T): T {\n\t\tconst _source = source as unknown as vec3;\n\t\tconst _target = target as unknown as vec3;\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\t_target[i] =\n\t\t\t\t_source[i] < 0.04045\n\t\t\t\t\t? _source[i] * 0.0773993808\n\t\t\t\t\t: Math.pow(_source[i] * 0.9478672986 + 0.0521327014, 2.4);\n\t\t}\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts linear components to sRGB components.\n\t * @typeParam T vec3 or vec4 linear components.\n\t */\n\tstatic convertLinearToSRGB<T = vec3 | vec4>(source: T, target: T): T {\n\t\tconst _source = source as unknown as vec3;\n\t\tconst _target = target as unknown as vec3;\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\t_target[i] = _source[i] < 0.0031308 ? _source[i] * 12.92 : 1.055 * Math.pow(_source[i], 0.41666) - 0.055;\n\t\t}\n\t\treturn target;\n\t}\n}\n","import type { vec2 } from '../constants.js';\nimport { BufferUtils } from './buffer-utils.js';\n\n/** Implements support for an image format in the {@link ImageUtils} class. */\nexport interface ImageUtilsFormat {\n\tmatch(buffer: Uint8Array): boolean;\n\tgetSize(buffer: Uint8Array): vec2 | null;\n\tgetChannels(buffer: Uint8Array): number | null;\n\tgetVRAMByteLength?(buffer: Uint8Array): number | null;\n}\n\n/** JPEG image support. */\nclass JPEGImageUtils implements ImageUtilsFormat {\n\tmatch(array: Uint8Array): boolean {\n\t\treturn array.length >= 3 && array[0] === 255 && array[1] === 216 && array[2] === 255;\n\t}\n\tgetSize(array: Uint8Array): vec2 {\n\t\t// Skip 4 chars, they are for signature\n\t\tlet view = new DataView(array.buffer, array.byteOffset + 4);\n\n\t\tlet i: number, next: number;\n\t\twhile (view.byteLength) {\n\t\t\t// read length of the next block\n\t\t\ti = view.getUint16(0, false);\n\t\t\t// i = buffer.readUInt16BE(0);\n\n\t\t\t// ensure correct format\n\t\t\tvalidateJPEGBuffer(view, i);\n\n\t\t\t// 0xFFC0 is baseline standard(SOF)\n\t\t\t// 0xFFC1 is baseline optimized(SOF)\n\t\t\t// 0xFFC2 is progressive(SOF2)\n\t\t\tnext = view.getUint8(i + 1);\n\t\t\tif (next === 0xc0 || next === 0xc1 || next === 0xc2) {\n\t\t\t\treturn [view.getUint16(i + 7, false), view.getUint16(i + 5, false)];\n\t\t\t}\n\n\t\t\t// move to the next block\n\t\t\tview = new DataView(array.buffer, view.byteOffset + i + 2);\n\t\t}\n\n\t\tthrow new TypeError('Invalid JPG, no size found');\n\t}\n\n\tgetChannels(_buffer: Uint8Array): number {\n\t\treturn 3;\n\t}\n}\n\n/**\n * PNG image support.\n *\n * PNG signature: 'PNG\\r\\n\\x1a\\n'\n * PNG image header chunk name: 'IHDR'\n */\nclass PNGImageUtils implements ImageUtilsFormat {\n\t// Used to detect \"fried\" png's: http://www.jongware.com/pngdefry.html\n\tstatic PNG_FRIED_CHUNK_NAME = 'CgBI';\n\tmatch(array: Uint8Array): boolean {\n\t\treturn (\n\t\t\tarray.length >= 8 &&\n\t\t\tarray[0] === 0x89 &&\n\t\t\tarray[1] === 0x50 &&\n\t\t\tarray[2] === 0x4e &&\n\t\t\tarray[3] === 0x47 &&\n\t\t\tarray[4] === 0x0d &&\n\t\t\tarray[5] === 0x0a &&\n\t\t\tarray[6] === 0x1a &&\n\t\t\tarray[7] === 0x0a\n\t\t);\n\t}\n\tgetSize(array: Uint8Array): vec2 {\n\t\tconst view = new DataView(array.buffer, array.byteOffset);\n\t\tconst magic = BufferUtils.decodeText(array.slice(12, 16));\n\t\tif (magic === PNGImageUtils.PNG_FRIED_CHUNK_NAME) {\n\t\t\treturn [view.getUint32(32, false), view.getUint32(36, false)];\n\t\t}\n\t\treturn [view.getUint32(16, false), view.getUint32(20, false)];\n\t}\n\tgetChannels(_buffer: Uint8Array): number {\n\t\treturn 4;\n\t}\n}\n\n/**\n * *Common utilities for working with image data.*\n *\n * @category Utilities\n */\nexport class ImageUtils {\n\tstatic impls: Record<string, ImageUtilsFormat> = {\n\t\t'image/jpeg': new JPEGImageUtils(),\n\t\t'image/png': new PNGImageUtils(),\n\t};\n\n\t/** Registers support for a new image format; useful for certain extensions. */\n\tpublic static registerFormat(mimeType: string, impl: ImageUtilsFormat): void {\n\t\tthis.impls[mimeType] = impl;\n\t}\n\n\t/**\n\t * Returns detected MIME type of the given image buffer. Note that for image\n\t * formats with support provided by extensions, the extension must be\n\t * registered with an I/O class before it can be detected by ImageUtils.\n\t */\n\tpublic static getMimeType(buffer: Uint8Array): string | null {\n\t\tfor (const mimeType in this.impls) {\n\t\t\tif (this.impls[mimeType].match(buffer)) {\n\t\t\t\treturn mimeType;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/** Returns the dimensions of the image. */\n\tpublic static getSize(buffer: Uint8Array, mimeType: string): vec2 | null {\n\t\tif (!this.impls[mimeType]) return null;\n\t\treturn this.impls[mimeType].getSize(buffer);\n\t}\n\n\t/**\n\t * Returns a conservative estimate of the number of channels in the image. For some image\n\t * formats, the method may return 4 indicating the possibility of an alpha channel, without\n\t * the ability to guarantee that an alpha channel is present.\n\t */\n\tpublic static getChannels(buffer: Uint8Array, mimeType: string): number | null {\n\t\tif (!this.impls[mimeType]) return null;\n\t\treturn this.impls[mimeType].getChannels(buffer);\n\t}\n\n\t/** Returns a conservative estimate of the GPU memory required by this image. */\n\tpublic static getVRAMByteLength(buffer: Uint8Array, mimeType: string): number | null {\n\t\tif (!this.impls[mimeType]) return null;\n\n\t\tif (this.impls[mimeType].getVRAMByteLength) {\n\t\t\treturn this.impls[mimeType].getVRAMByteLength!(buffer);\n\t\t}\n\n\t\tlet uncompressedBytes = 0;\n\t\tconst channels = 4; // See https://github.com/donmccurdy/glTF-Transform/issues/151.\n\t\tconst resolution = this.getSize(buffer, mimeType);\n\t\tif (!resolution) return null;\n\n\t\twhile (resolution[0] > 1 || resolution[1] > 1) {\n\t\t\tuncompressedBytes += resolution[0] * resolution[1] * channels;\n\t\t\tresolution[0] = Math.max(Math.floor(resolution[0] / 2), 1);\n\t\t\tresolution[1] = Math.max(Math.floor(resolution[1] / 2), 1);\n\t\t}\n\t\tuncompressedBytes += 1 * 1 * channels;\n\t\treturn uncompressedBytes;\n\t}\n\n\t/** Returns the preferred file extension for the given MIME type. */\n\tpublic static mimeTypeToExtension(mimeType: string): string {\n\t\tif (mimeType === 'image/jpeg') return 'jpg';\n\t\treturn mimeType.split('/').pop()!;\n\t}\n\n\t/** Returns the MIME type for the given file extension. */\n\tpublic static extensionToMimeType(extension: string): string {\n\t\tif (extension === 'jpg') return 'image/jpeg';\n\t\tif (!extension) return '';\n\t\treturn `image/${extension}`;\n\t}\n}\n\nfunction validateJPEGBuffer(view: DataView, i: number): DataView {\n\t// index should be within buffer limits\n\tif (i > view.byteLength) {\n\t\tthrow new TypeError('Corrupt JPG, exceeded buffer limits');\n\t}\n\t// Every JPEG block must begin with a 0xFF\n\tif (view.getUint8(i) !== 0xff) {\n\t\tthrow new TypeError('Invalid JPG, marker table corrupted');\n\t}\n\n\treturn view;\n}\n","import { ImageUtils } from './image-utils.js';\n\n/**\n * *Utility class for working with file systems and URI paths.*\n *\n * @category Utilities\n */\nexport class FileUtils {\n\t/**\n\t * Extracts the basename from a file path, e.g. \"folder/model.glb\" -> \"model\".\n\t * See: {@link HTTPUtils.basename}\n\t */\n\tstatic basename(uri: string): string {\n\t\tconst fileName = uri.split(/[\\\\/]/).pop()!;\n\t\treturn fileName.substring(0, fileName.lastIndexOf('.'));\n\t}\n\n\t/**\n\t * Extracts the extension from a file path, e.g. \"folder/model.glb\" -> \"glb\".\n\t * See: {@link HTTPUtils.extension}\n\t */\n\tstatic extension(uri: string): string {\n\t\tif (uri.startsWith('data:image/')) {\n\t\t\tconst mimeType = uri.match(/data:(image\\/\\w+)/)![1];\n\t\t\treturn ImageUtils.mimeTypeToExtension(mimeType);\n\t\t} else if (uri.startsWith('data:model/gltf+json')) {\n\t\t\treturn 'gltf';\n\t\t} else if (uri.startsWith('data:model/gltf-binary')) {\n\t\t\treturn 'glb';\n\t\t} else if (uri.startsWith('data:application/')) {\n\t\t\treturn 'bin';\n\t\t}\n\t\treturn uri.split(/[\\\\/]/).pop()!.split(/[.]/).pop()!;\n\t}\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n// Reference: https://github.com/jonschlinkert/is-plain-object\n\nfunction isObject(o: any) {\n\treturn Object.prototype.toString.call(o) === '[object Object]';\n}\n\nexport function isPlainObject(o: any) {\n\tif (isObject(o) === false) return false;\n\n\t// If has modified constructor\n\tconst ctor = o.constructor;\n\tif (ctor === undefined) return true;\n\n\t// If has modified prototype\n\tconst prot = ctor.prototype;\n\tif (isObject(prot) === false) return false;\n\n\t// If constructor does not have an Object-specific method\n\tif (Object.prototype.hasOwnProperty.call(prot, 'isPrototypeOf') === false) {\n\t\treturn false;\n\t}\n\n\t// Most likely a plain Object\n\treturn true;\n}\n","/** Logger verbosity thresholds. */\nexport enum Verbosity {\n\t/** No events are logged. */\n\tSILENT = 4,\n\n\t/** Only error events are logged. */\n\tERROR = 3,\n\n\t/** Only error and warn events are logged. */\n\tWARN = 2,\n\n\t/** Only error, warn, and info events are logged. (DEFAULT) */\n\tINFO = 1,\n\n\t/** All events are logged. */\n\tDEBUG = 0,\n}\n\nexport interface ILogger {\n\tdebug(text: string): void;\n\tinfo(text: string): void;\n\twarn(text: string): void;\n\terror(text: string): void;\n}\n\n/**\n * *Logger utility class.*\n *\n * @category Utilities\n */\nexport class Logger implements ILogger {\n\t/** Logger verbosity thresholds. */\n\tstatic Verbosity = Verbosity;\n\n\t/** Default logger instance. */\n\tpublic static DEFAULT_INSTANCE = new Logger(Logger.Verbosity.INFO);\n\n\t/** Constructs a new Logger instance. */\n\tconstructor(private readonly verbosity: number) {}\n\n\t/** Logs an event at level {@link Logger.Verbosity.DEBUG}. */\n\tdebug(text: string): void {\n\t\tif (this.verbosity <= Logger.Verbosity.DEBUG) {\n\t\t\tconsole.debug(text);\n\t\t}\n\t}\n\n\t/** Logs an event at level {@link Logger.Verbosity.INFO}. */\n\tinfo(text: string): void {\n\t\tif (this.verbosity <= Logger.Verbosity.INFO) {\n\t\t\tconsole.info(text);\n\t\t}\n\t}\n\n\t/** Logs an event at level {@link Logger.Verbosity.WARN}. */\n\twarn(text: string): void {\n\t\tif (this.verbosity <= Logger.Verbosity.WARN) {\n\t\t\tconsole.warn(text);\n\t\t}\n\t}\n\n\t/** Logs an event at level {@link Logger.Verbosity.ERROR}. */\n\terror(text: string): void {\n\t\tif (this.verbosity <= Logger.Verbosity.ERROR) {\n\t\t\tconsole.error(text);\n\t\t}\n\t}\n}\n","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import { determinant, getRotation } from 'gl-matrix/mat4';\nimport { length } from 'gl-matrix/vec3';\nimport type { mat4, vec3, vec4 } from '../constants.js';\nimport type { GLTF } from '../types/gltf.js';\n\n/** @hidden */\nexport class MathUtils {\n\tpublic static identity(v: number): number {\n\t\treturn v;\n\t}\n\n\tpublic static eq(a: number[], b: number[], tolerance = 10e-6): boolean {\n\t\tif (a.length !== b.length) return false;\n\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tif (Math.abs(a[i] - b[i]) > tolerance) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// TODO(v4): Compare performance if we replace the switch with individual functions.\n\tpublic static decodeNormalizedInt(i: number, componentType: GLTF.AccessorComponentType): number {\n\t\t// Hardcode enums from accessor.ts to avoid a circular dependency.\n\t\tswitch (componentType) {\n\t\t\tcase 5126: // FLOAT\n\t\t\t\treturn i;\n\t\t\tcase 5123: // UNSIGNED_SHORT\n\t\t\t\treturn i / 65535.0;\n\t\t\tcase 5121: // UNSIGNED_BYTE\n\t\t\t\treturn i / 255.0;\n\t\t\tcase 5122: // SHORT\n\t\t\t\treturn Math.max(i / 32767.0, -1.0);\n\t\t\tcase 5120: // BYTE\n\t\t\t\treturn Math.max(i / 127.0, -1.0);\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Invalid component type.');\n\t\t}\n\t}\n\n\t// TODO(v4): Compare performance if we replace the switch with individual functions.\n\t// TODO(v4): Consider clamping to [0, 1] or [-1, 1] here.\n\tpublic static encodeNormalizedInt(f: number, componentType: GLTF.AccessorComponentType): number {\n\t\t// Hardcode enums from accessor.ts to avoid a circular dependency.\n\t\tswitch (componentType) {\n\t\t\tcase 5126: // FLOAT\n\t\t\t\treturn f;\n\t\t\tcase 5123: // UNSIGNED_SHORT\n\t\t\t\treturn Math.round(f * 65535.0);\n\t\t\tcase 5121: // UNSIGNED_BYTE\n\t\t\t\treturn Math.round(f * 255.0);\n\t\t\tcase 5122: // SHORT\n\t\t\t\treturn Math.round(f * 32767.0);\n\t\t\tcase 5120: // BYTE\n\t\t\t\treturn Math.round(f * 127.0);\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Invalid component type.');\n\t\t}\n\t}\n\n\t/**\n\t * Decompose a mat4 to TRS properties.\n\t *\n\t * Equivalent to the Matrix4 decompose() method in three.js, and intentionally not using the\n\t * gl-matrix version. See: https://github.com/toji/gl-matrix/issues/408\n\t *\n\t * @param srcMat Matrix element, to be decomposed to TRS properties.\n\t * @param dstTranslation Translation element, to be overwritten.\n\t * @param dstRotation Rotation element, to be overwritten.\n\t * @param dstScale Scale element, to be overwritten.\n\t */\n\tpublic static decompose(srcMat: mat4, dstTranslation: vec3, dstRotation: vec4, dstScale: vec3): void {\n\t\tlet sx = length([srcMat[0], srcMat[1], srcMat[2]]);\n\t\tconst sy = length([srcMat[4], srcMat[5], srcMat[6]]);\n\t\tconst sz = length([srcMat[8], srcMat[9], srcMat[10]]);\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = determinant(srcMat);\n\t\tif (det < 0) sx = -sx;\n\n\t\tdstTranslation[0] = srcMat[12];\n\t\tdstTranslation[1] = srcMat[13];\n\t\tdstTranslation[2] = srcMat[14];\n\n\t\t// scale the rotation part\n\t\tconst _m1 = srcMat.slice();\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1[0] *= invSX;\n\t\t_m1[1] *= invSX;\n\t\t_m1[2] *= invSX;\n\n\t\t_m1[4] *= invSY;\n\t\t_m1[5] *= invSY;\n\t\t_m1[6] *= invSY;\n\n\t\t_m1[8] *= invSZ;\n\t\t_m1[9] *= invSZ;\n\t\t_m1[10] *= invSZ;\n\n\t\tgetRotation(dstRotation, _m1 as mat4);\n\n\t\tdstScale[0] = sx;\n\t\tdstScale[1] = sy;\n\t\tdstScale[2] = sz;\n\t}\n\n\t/**\n\t * Compose TRS properties to a mat4.\n\t *\n\t * Equivalent to the Matrix4 compose() method in three.js, and intentionally not using the\n\t * gl-matrix version. See: https://github.com/toji/gl-matrix/issues/408\n\t *\n\t * @param srcTranslation Translation element of matrix.\n\t * @param srcRotation Rotation element of matrix.\n\t * @param srcScale Scale element of matrix.\n\t * @param dstMat Matrix element, to be modified and returned.\n\t * @returns dstMat, overwritten to mat4 equivalent of given TRS properties.\n\t */\n\tpublic static compose(srcTranslation: vec3, srcRotation: vec4, srcScale: vec3, dstMat: mat4): mat4 {\n\t\tconst te = dstMat;\n\n\t\tconst x = srcRotation[0],\n\t\t\ty = srcRotation[1],\n\t\t\tz = srcRotation[2],\n\t\t\tw = srcRotation[3];\n\t\tconst x2 = x + x,\n\t\t\ty2 = y + y,\n\t\t\tz2 = z + z;\n\t\tconst xx = x * x2,\n\t\t\txy = x * y2,\n\t\t\txz = x * z2;\n\t\tconst yy = y * y2,\n\t\t\tyz = y * z2,\n\t\t\tzz = z * z2;\n\t\tconst wx = w * x2,\n\t\t\twy = w * y2,\n\t\t\twz = w * z2;\n\n\t\tconst sx = srcScale[0],\n\t\t\tsy = srcScale[1],\n\t\t\tsz = srcScale[2];\n\n\t\tte[0] = (1 - (yy + zz)) * sx;\n\t\tte[1] = (xy + wz) * sx;\n\t\tte[2] = (xz - wy) * sx;\n\t\tte[3] = 0;\n\n\t\tte[4] = (xy - wz) * sy;\n\t\tte[5] = (1 - (xx + zz)) * sy;\n\t\tte[6] = (yz + wx) * sy;\n\t\tte[7] = 0;\n\n\t\tte[8] = (xz + wy) * sz;\n\t\tte[9] = (yz - wx) * sz;\n\t\tte[10] = (1 - (xx + yy)) * sz;\n\t\tte[11] = 0;\n\n\t\tte[12] = srcTranslation[0];\n\t\tte[13] = srcTranslation[1];\n\t\tte[14] = srcTranslation[2];\n\t\tte[15] = 1;\n\n\t\treturn te;\n\t}\n}\n","import type { GraphEdge } from 'property-graph';\nimport { isPlainObject } from './is-plain-object.js';\nimport type { BufferViewUsage } from '../constants.js';\nimport type { Property } from '../properties/index.js';\n\nexport type Ref = GraphEdge<Property, Property>;\nexport type RefMap = { [key: string]: Ref };\nexport type UnknownRef = Ref | Ref[] | RefMap | unknown;\n\nexport function equalsRef(refA: Ref, refB: Ref): boolean {\n\tif (!!refA !== !!refB) return false;\n\n\tconst a = refA.getChild();\n\tconst b = refB.getChild();\n\n\treturn a === b || a.equals(b);\n}\n\nexport function equalsRefList(refListA: Ref[], refListB: Ref[]): boolean {\n\tif (!!refListA !== !!refListB) return false;\n\tif (refListA.length !== refListB.length) return false;\n\n\tfor (let i = 0; i < refListA.length; i++) {\n\t\tconst a = refListA[i];\n\t\tconst b = refListB[i];\n\n\t\tif (a.getChild() === b.getChild()) continue;\n\n\t\tif (!a.getChild().equals(b.getChild())) return false;\n\t}\n\n\treturn true;\n}\n\nexport function equalsRefMap(refMapA: RefMap, refMapB: RefMap): boolean {\n\tif (!!refMapA !== !!refMapB) return false;\n\n\tconst keysA = Object.keys(refMapA);\n\tconst keysB = Object.keys(refMapB);\n\tif (keysA.length !== keysB.length) return false;\n\n\tfor (const key in refMapA) {\n\t\tconst refA = refMapA[key];\n\t\tconst refB = refMapB[key];\n\t\tif (!!refA !== !!refB) return false;\n\n\t\tconst a = refA.getChild();\n\t\tconst b = refB.getChild();\n\t\tif (a === b) continue;\n\n\t\tif (!a.equals(b)) return false;\n\t}\n\n\treturn true;\n}\n\nexport function equalsArray(a: ArrayLike<unknown> | null, b: ArrayLike<unknown> | null): boolean {\n\tif (a === b) return true;\n\n\tif (!!a !== !!b || !a || !b) return false;\n\n\tif (a.length !== b.length) return false;\n\n\tfor (let i = 0; i < a.length; i++) {\n\t\tif (a[i] !== b[i]) return false;\n\t}\n\n\treturn true;\n}\n\nexport function equalsObject(_a: unknown, _b: unknown): boolean {\n\tif (_a === _b) return true;\n\tif (!!_a !== !!_b) return false;\n\tif (!isPlainObject(_a) || !isPlainObject(_b)) {\n\t\treturn _a === _b;\n\t}\n\n\tconst a = _a as Record<string, unknown>;\n\tconst b = _b as Record<string, unknown>;\n\n\tlet numKeysA = 0;\n\tlet numKeysB = 0;\n\n\tlet key: string;\n\n\tfor (key in a) numKeysA++;\n\tfor (key in b) numKeysB++;\n\tif (numKeysA !== numKeysB) return false;\n\n\tfor (key in a) {\n\t\tconst valueA = a[key];\n\t\tconst valueB = b[key];\n\t\tif (isArray(valueA) && isArray(valueB)) {\n\t\t\tif (!equalsArray(valueA as [], valueB as [])) return false;\n\t\t} else if (isPlainObject(valueA) && isPlainObject(valueB)) {\n\t\t\tif (!equalsObject(valueA, valueB)) return false;\n\t\t} else {\n\t\t\tif (valueA !== valueB) return false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport type RefAttributes = Record<string, unknown>;\n\nexport interface AccessorRefAttributes extends RefAttributes {\n\t/** Usage role of an accessor reference. */\n\tusage: BufferViewUsage | string;\n}\n\nexport interface TextureRefAttributes extends RefAttributes {\n\t/** Bitmask for {@link TextureChannel TextureChannels} used by a texture reference. */\n\tchannels: number;\n\t/**\n\t * Specifies that the texture contains color data (base color, emissive, …),\n\t * rather than non-color data (normal maps, metallic roughness, …). Used\n\t * when tuning texture compression settings.\n\t */\n\tisColor?: boolean;\n}\n\nexport function isArray(value: unknown): boolean {\n\treturn Array.isArray(value) || ArrayBuffer.isView(value);\n}\n","const ALPHABET = '23456789abdegjkmnpqrvwxyzABDEGJKMNPQRVWXYZ';\nconst UNIQUE_RETRIES = 999;\nconst ID_LENGTH = 6;\n\nconst previousIDs = new Set();\n\nconst generateOne = function (): string {\n\tlet rtn = '';\n\tfor (let i = 0; i < ID_LENGTH; i++) {\n\t\trtn += ALPHABET.charAt(Math.floor(Math.random() * ALPHABET.length));\n\t}\n\treturn rtn;\n};\n\n/**\n * Short ID generator.\n *\n * Generated IDs are short, easy to type, and unique for the duration of the program's execution.\n * Uniqueness across multiple program executions, or on other devices, is not guaranteed. Based on\n * [Short ID Generation in JavaScript](https://tomspencer.dev/blog/2014/11/16/short-id-generation-in-javascript/),\n * with alterations.\n *\n * @category Utilities\n * @hidden\n */\nexport const uuid = function (): string {\n\tfor (let retries = 0; retries < UNIQUE_RETRIES; retries++) {\n\t\tconst id = generateOne();\n\t\tif (!previousIDs.has(id)) {\n\t\t\tpreviousIDs.add(id);\n\t\t\treturn id;\n\t\t}\n\t}\n\treturn '';\n};\n","import { FileUtils } from './file-utils.js';\n\n// Need a placeholder domain to construct a URL from a relative path. We only\n// access `url.pathname`, so the domain doesn't matter.\nconst NULL_DOMAIN = 'https://null.example';\n\n/**\n * *Utility class for working with URLs.*\n *\n * @category Utilities\n */\nexport class HTTPUtils {\n\tstatic readonly DEFAULT_INIT: RequestInit = {};\n\tstatic readonly PROTOCOL_REGEXP = /^[a-zA-Z]+:\\/\\//;\n\n\tstatic dirname(path: string): string {\n\t\tconst index = path.lastIndexOf('/');\n\t\tif (index === -1) return './';\n\t\treturn path.substring(0, index + 1);\n\t}\n\n\t/**\n\t * Extracts the basename from a URL, e.g. \"folder/model.glb\" -> \"model\".\n\t * See: {@link FileUtils.basename}\n\t */\n\tstatic basename(uri: string): string {\n\t\treturn FileUtils.basename(new URL(uri, NULL_DOMAIN).pathname);\n\t}\n\n\t/**\n\t * Extracts the extension from a URL, e.g. \"folder/model.glb\" -> \"glb\".\n\t * See: {@link FileUtils.extension}\n\t */\n\tstatic extension(uri: string): string {\n\t\treturn FileUtils.extension(new URL(uri, NULL_DOMAIN).pathname);\n\t}\n\n\tstatic resolve(base: string, path: string) {\n\t\tif (!this.isRelativePath(path)) return path;\n\n\t\tconst stack = base.split('/');\n\t\tconst parts = path.split('/');\n\t\tstack.pop();\n\t\tfor (let i = 0; i < parts.length; i++) {\n\t\t\tif (parts[i] === '.') continue;\n\t\t\tif (parts[i] === '..') {\n\t\t\t\tstack.pop();\n\t\t\t} else {\n\t\t\t\tstack.push(parts[i]);\n\t\t\t}\n\t\t}\n\t\treturn stack.join('/');\n\t}\n\n\t/**\n\t * Returns true for URLs containing a protocol, and false for both\n\t * absolute and relative paths.\n\t */\n\tstatic isAbsoluteURL(path: string) {\n\t\treturn this.PROTOCOL_REGEXP.test(path);\n\t}\n\n\t/**\n\t * Returns true for paths that are declared relative to some unknown base\n\t * path. For example, \"foo/bar/\" is relative both \"/foo/bar/\" is not.\n\t */\n\tstatic isRelativePath(path: string): boolean {\n\t\treturn !/^(?:[a-zA-Z]+:)?\\//.test(path);\n\t}\n}\n","import type { Nullable } from '../constants.js';\nimport {\n\t$attributes,\n\t$immutableKeys,\n\tGraph,\n\tGraphNode,\n\tGraphEdge,\n\tisRef,\n\tisRefList,\n\tisRefMap,\n\tLiteralKeys,\n} from 'property-graph';\nimport {\n\tequalsArray,\n\tequalsObject,\n\tequalsRef,\n\tequalsRefList,\n\tequalsRefMap,\n\tisArray,\n\tisPlainObject,\n} from '../utils/index.js';\nimport type { Ref, RefMap, UnknownRef } from '../utils/index.js';\n\nexport type PropertyResolver<T extends Property> = (p: T) => T;\nexport const COPY_IDENTITY = <T extends Property>(t: T): T => t;\n\nexport interface IProperty {\n\tname: string;\n\textras: Record<string, unknown>;\n}\n\nconst EMPTY_SET = new Set<string>();\n\n/**\n * *Properties represent distinct resources in a glTF asset, referenced by other properties.*\n *\n * For example, each material and texture is a property, with material properties holding\n * references to the textures. All properties are created with factory methods on the\n * {@link Document} in which they should be constructed. Properties are destroyed by calling\n * {@link Property.dispose}().\n *\n * Usage:\n *\n * ```ts\n * const texture = doc.createTexture('myTexture');\n * doc.listTextures(); // → [texture x 1]\n *\n * // Attach a texture to a material.\n * material.setBaseColorTexture(texture);\n * material.getBaseColortexture(); // → texture\n *\n * // Detaching a texture removes any references to it, except from the doc.\n * texture.detach();\n * material.getBaseColorTexture(); // → null\n * doc.listTextures(); // → [texture x 1]\n *\n * // Disposing a texture removes all references to it, and its own references.\n * texture.dispose();\n * doc.listTextures(); // → []\n * ```\n *\n * Reference:\n * - [glTF → Concepts](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#concepts)\n *\n * @category Properties\n */\nexport abstract class Property<T extends IProperty = IProperty> extends GraphNode<T> {\n\t/** Property type. */\n\tpublic abstract readonly propertyType: string;\n\n\t/**\n\t * Internal graph used to search and maintain references.\n\t * @override\n\t * @hidden\n\t */\n\tprotected declare readonly graph: Graph<Property>;\n\n\t/** @hidden */\n\tconstructor(graph: Graph<Property>, name = '') {\n\t\tsuper(graph);\n\t\t(this as Property)[$attributes]['name'] = name;\n\t\tthis.init();\n\t\tthis.dispatchEvent({ type: 'create' });\n\t}\n\n\t/**\n\t * Initializes instance data for a subclass. Because subclass constructors run after the\n\t * constructor of the parent class, and 'create' events dispatched by the parent class\n\t * assume the instance is fully initialized, it's best to do any initialization here.\n\t * @hidden\n\t */\n\tprotected abstract init(): void;\n\n\t/**\n\t * Returns the Graph associated with this Property. For internal use.\n\t * @hidden\n\t * @experimental\n\t */\n\tpublic getGraph(): Graph<Property> {\n\t\treturn this.graph;\n\t}\n\n\t/**\n\t * Returns default attributes for the property. Empty lists and maps should be initialized\n\t * to empty arrays and objects. Always invoke `super.getDefaults()` and extend the result.\n\t */\n\tprotected getDefaults(): Nullable<T> {\n\t\treturn Object.assign(super.getDefaults(), { name: '', extras: {} });\n\t}\n\n\t/** @hidden */\n\tprotected set<K extends LiteralKeys<T>>(attribute: K, value: T[K]): this {\n\t\tif (Array.isArray(value)) value = value.slice() as T[K]; // copy vector, quat, color …\n\t\treturn super.set(attribute, value);\n\t}\n\n\t/**********************************************************************************************\n\t * Name.\n\t */\n\n\t/**\n\t * Returns the name of this property. While names are not required to be unique, this is\n\t * encouraged, and non-unique names will be overwritten in some tools. For custom data about\n\t * a property, prefer to use Extras.\n\t */\n\tpublic getName(): string {\n\t\treturn (this as Property).get('name');\n\t}\n\n\t/**\n\t * Sets the name of this property. While names are not required to be unique, this is\n\t * encouraged, and non-unique names will be overwritten in some tools. For custom data about\n\t * a property, prefer to use Extras.\n\t */\n\tpublic setName(name: string): this {\n\t\treturn (this as Property).set('name', name) as this;\n\t}\n\n\t/**********************************************************************************************\n\t * Extras.\n\t */\n\n\t/**\n\t * Returns a reference to the Extras object, containing application-specific data for this\n\t * Property. Extras should be an Object, not a primitive value, for best portability.\n\t */\n\tpublic getExtras(): Record<string, unknown> {\n\t\treturn (this as Property).get('extras');\n\t}\n\n\t/**\n\t * Updates the Extras object, containing application-specific data for this Property. Extras\n\t * should be an Object, not a primitive value, for best portability.\n\t */\n\tpublic setExtras(extras: Record<string, unknown>): this {\n\t\treturn (this as Property).set('extras', extras) as this;\n\t}\n\n\t/**********************************************************************************************\n\t * Graph state.\n\t */\n\n\t/**\n\t * Makes a copy of this property, with the same resources (by reference) as the original.\n\t */\n\tpublic clone(): this {\n\t\tconst PropertyClass = this.constructor as new (g: Graph<Property>) => this;\n\t\treturn new PropertyClass(this.graph).copy(this, COPY_IDENTITY);\n\t}\n\n\t/**\n\t * Copies all data from another property to this one. Child properties are copied by reference,\n\t * unless a 'resolve' function is given to override that.\n\t * @param other Property to copy references from.\n\t * @param resolve Function to resolve each Property being transferred. Default is identity.\n\t */\n\tpublic copy(other: this, resolve: PropertyResolver<Property> = COPY_IDENTITY): this {\n\t\t// Remove previous references.\n\t\tfor (const key in this[$attributes]) {\n\t\t\tconst value = this[$attributes][key];\n\t\t\tif (value instanceof GraphEdge) {\n\t\t\t\tif (!this[$immutableKeys].has(key)) {\n\t\t\t\t\tvalue.dispose();\n\t\t\t\t}\n\t\t\t} else if (isRefList(value)) {\n\t\t\t\tfor (const ref of value as unknown as Ref[]) {\n\t\t\t\t\tref.dispose();\n\t\t\t\t}\n\t\t\t} else if (isRefMap(value)) {\n\t\t\t\tfor (const subkey in value) {\n\t\t\t\t\tconst ref = value[subkey] as Ref;\n\t\t\t\t\tref.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add new references.\n\t\tfor (const key in other[$attributes]) {\n\t\t\tconst thisValue = this[$attributes][key];\n\t\t\tconst otherValue = other[$attributes][key];\n\t\t\tif (otherValue instanceof GraphEdge) {\n\t\t\t\tif (this[$immutableKeys].has(key)) {\n\t\t\t\t\tconst ref = thisValue as unknown as Ref;\n\t\t\t\t\tref.getChild().copy(resolve(otherValue.getChild()), resolve);\n\t\t\t\t} else {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\t\tthis.setRef(key as any, resolve(otherValue.getChild()), otherValue.getAttributes());\n\t\t\t\t}\n\t\t\t} else if (isRefList(otherValue)) {\n\t\t\t\tfor (const ref of otherValue as unknown as Ref[]) {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\t\tthis.addRef(key as any, resolve(ref.getChild()), ref.getAttributes());\n\t\t\t\t}\n\t\t\t} else if (isRefMap(otherValue)) {\n\t\t\t\tfor (const subkey in otherValue) {\n\t\t\t\t\tconst ref = otherValue[subkey] as Ref;\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\t\tthis.setRefMap(key as any, subkey, resolve(ref.getChild()), ref.getAttributes());\n\t\t\t\t}\n\t\t\t} else if (isPlainObject(otherValue)) {\n\t\t\t\tthis[$attributes][key] = JSON.parse(JSON.stringify(otherValue));\n\t\t\t} else if (\n\t\t\t\tArray.isArray(otherValue) ||\n\t\t\t\totherValue instanceof ArrayBuffer ||\n\t\t\t\tArrayBuffer.isView(otherValue)\n\t\t\t) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\tthis[$attributes][key] = (otherValue as unknown as Uint8Array).slice() as any;\n\t\t\t} else {\n\t\t\t\tthis[$attributes][key] = otherValue;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns true if two properties are deeply equivalent, recursively comparing the attributes\n\t * of the properties. Optionally, a 'skip' set may be included, specifying attributes whose\n\t * values should not be considered in the comparison.\n\t *\n\t * Example: Two {@link Primitive Primitives} are equivalent if they have accessors and\n\t * materials with equivalent content — but not necessarily the same specific accessors\n\t * and materials.\n\t */\n\tpublic equals(other: this, skip = EMPTY_SET): boolean {\n\t\tif (this === other) return true;\n\t\tif (this.propertyType !== other.propertyType) return false;\n\n\t\tfor (const key in this[$attributes]) {\n\t\t\tif (skip.has(key)) continue;\n\n\t\t\tconst a = this[$attributes][key] as UnknownRef;\n\t\t\tconst b = other[$attributes][key] as UnknownRef;\n\n\t\t\tif (isRef(a) || isRef(b)) {\n\t\t\t\tif (!equalsRef(a as Ref, b as Ref)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (isRefList(a) || isRefList(b)) {\n\t\t\t\tif (!equalsRefList(a as Ref[], b as Ref[])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (isRefMap(a) || isRefMap(b)) {\n\t\t\t\tif (!equalsRefMap(a as RefMap, b as RefMap)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (isPlainObject(a) || isPlainObject(b)) {\n\t\t\t\tif (!equalsObject(a, b)) return false;\n\t\t\t} else if (isArray(a) || isArray(b)) {\n\t\t\t\tif (!equalsArray(a as [], b as [])) return false;\n\t\t\t} else {\n\t\t\t\t// Literal.\n\t\t\t\tif (a !== b) return false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic detach(): this {\n\t\t// Detaching should keep properties in the same Document, and attached to its root.\n\t\tthis.graph.disconnectParents(this, (n: Property) => n.propertyType !== 'Root');\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a list of all properties that hold a reference to this property. For example, a\n\t * material may hold references to various textures, but a texture does not hold references\n\t * to the materials that use it.\n\t *\n\t * It is often necessary to filter the results for a particular type: some resources, like\n\t * {@link Accessor}s, may be referenced by different types of properties. Most properties\n\t * include the {@link Root} as a parent, which is usually not of interest.\n\t *\n\t * Usage:\n\t *\n\t * ```ts\n\t * const materials = texture\n\t * \t.listParents()\n\t * \t.filter((p) => p instanceof Material)\n\t * ```\n\t */\n\tpublic listParents(): Property[] {\n\t\treturn this.graph.listParents(this);\n\t}\n}\n","import type { Nullable } from '../constants.js';\nimport type { ExtensionProperty } from './extension-property.js';\nimport { Property, IProperty } from './property.js';\n\nexport interface IExtensibleProperty extends IProperty {\n\textensions: { [key: string]: ExtensionProperty };\n}\n\n/**\n * *A {@link Property} that can have {@link ExtensionProperty} instances attached.*\n *\n * Most properties are extensible. See the {@link Extension} documentation for information about\n * how to use extensions.\n *\n * @category Properties\n */\nexport abstract class ExtensibleProperty<T extends IExtensibleProperty = IExtensibleProperty> extends Property<T> {\n\tprotected getDefaults(): Nullable<T> {\n\t\treturn Object.assign(super.getDefaults(), { extensions: {} });\n\t}\n\n\t/** Returns an {@link ExtensionProperty} attached to this Property, if any. */\n\tpublic getExtension<Prop extends ExtensionProperty>(name: string): Prop | null {\n\t\treturn (this as ExtensibleProperty).getRefMap('extensions', name) as Prop;\n\t}\n\n\t/**\n\t * Attaches the given {@link ExtensionProperty} to this Property. For a given extension, only\n\t * one ExtensionProperty may be attached to any one Property at a time.\n\t */\n\tpublic setExtension<Prop extends ExtensionProperty>(name: string, extensionProperty: Prop | null): this {\n\t\tif (extensionProperty) extensionProperty._validateParent(this as ExtensibleProperty);\n\t\treturn (this as ExtensibleProperty).setRefMap('extensions', name, extensionProperty) as this;\n\t}\n\n\t/** Lists all {@link ExtensionProperty} instances attached to this Property. */\n\tpublic listExtensions(): ExtensionProperty[] {\n\t\treturn (this as ExtensibleProperty).listRefMapValues('extensions');\n\t}\n}\n","import { Nullable, PropertyType, TypedArray } from '../constants.js';\nimport type { GLTF } from '../types/gltf.js';\nimport { MathUtils } from '../utils/index.js';\nimport type { Buffer } from './buffer.js';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property.js';\nimport { COPY_IDENTITY } from './property.js';\n\ninterface IAccessor extends IExtensibleProperty {\n\tarray: TypedArray | null;\n\ttype: GLTF.AccessorType;\n\tcomponentType: GLTF.AccessorComponentType;\n\tnormalized: boolean;\n\tsparse: boolean;\n\tbuffer: Buffer;\n}\n\n/**\n * *Accessors store lists of numeric, vector, or matrix elements in a typed array.*\n *\n * All large data for {@link Mesh}, {@link Skin}, and {@link Animation} properties is stored in\n * {@link Accessor}s, organized into one or more {@link Buffer}s. Each accessor provides data in\n * typed arrays, with two abstractions:\n *\n * *Elements* are the logical divisions of the data into useful types: `\"SCALAR\"`, `\"VEC2\"`,\n * `\"VEC3\"`, `\"VEC4\"`, `\"MAT3\"`, or `\"MAT4\"`. The element type can be determined with the\n * {@link Accessor.getType getType}() method, and the number of elements in the accessor determine its\n * {@link Accessor.getCount getCount}(). The number of components in an element — e.g. 9 for `\"MAT3\"` — are its\n * {@link Accessor.getElementSize getElementSize}(). See {@link Accessor.Type}.\n *\n * *Components* are the numeric values within an element — e.g. `.x` and `.y` for `\"VEC2\"`. Various\n * component types are available: `BYTE`, `UNSIGNED_BYTE`, `SHORT`, `UNSIGNED_SHORT`,\n * `UNSIGNED_INT`, and `FLOAT`. The component type can be determined with the\n * {@link Accessor.getComponentType getComponentType} method, and the number of bytes in each component determine its\n * {@link Accessor.getComponentSize getComponentSize}. See {@link Accessor.ComponentType}.\n *\n * Usage:\n *\n * ```typescript\n * const accessor = doc.createAccessor('myData')\n * \t.setArray(new Float32Array([1,2,3,4,5,6,7,8,9,10,11,12]))\n * \t.setType(Accessor.Type.VEC3)\n * \t.setBuffer(doc.listBuffers()[0]);\n *\n * accessor.getCount();        // → 4\n * accessor.getElementSize();  // → 3\n * accessor.getByteLength();   // → 48\n * accessor.getElement(1, []); // → [4, 5, 6]\n *\n * accessor.setElement(0, [10, 20, 30]);\n * ```\n *\n * Data access through the {@link Accessor.getElement getElement} and {@link Accessor.setElement setElement}\n * methods reads or overwrites the content of the underlying typed array. These methods use\n * element arrays intended to be compatible with the [gl-matrix](https://github.com/toji/gl-matrix)\n * library, or with the `toArray`/`fromArray` methods of libraries like three.js and babylon.js.\n *\n * Each Accessor must be assigned to a {@link Buffer}, which determines where the accessor's data\n * is stored in the final file. Assigning Accessors to different Buffers allows the data to be\n * written to different `.bin` files.\n *\n * glTF Transform does not expose many details of sparse, normalized, or interleaved accessors\n * through its API. It reads files using those techniques, presents a simplified view of the data\n * for editing, and attempts to write data back out with optimizations. For example, vertex\n * attributes will typically be interleaved by default, regardless of the input file.\n *\n * References:\n * - [glTF → Accessors](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#accessors)\n *\n * @category Properties\n */\nexport class Accessor extends ExtensibleProperty<IAccessor> {\n\tpublic declare propertyType: PropertyType.ACCESSOR;\n\n\t/**********************************************************************************************\n\t * Constants.\n\t */\n\n\t/** Element type contained by the accessor (SCALAR, VEC2, ...). */\n\tpublic static Type: Record<string, GLTF.AccessorType> = {\n\t\t/** Scalar, having 1 value per element. */\n\t\tSCALAR: 'SCALAR',\n\t\t/** 2-component vector, having 2 components per element. */\n\t\tVEC2: 'VEC2',\n\t\t/** 3-component vector, having 3 components per element. */\n\t\tVEC3: 'VEC3',\n\t\t/** 4-component vector, having 4 components per element. */\n\t\tVEC4: 'VEC4',\n\t\t/** 2x2 matrix, having 4 components per element. */\n\t\tMAT2: 'MAT2',\n\t\t/** 3x3 matrix, having 9 components per element. */\n\t\tMAT3: 'MAT3',\n\t\t/** 4x3 matrix, having 16 components per element. */\n\t\tMAT4: 'MAT4',\n\t};\n\n\t/** Data type of the values composing each element in the accessor. */\n\tpublic static ComponentType: Record<string, GLTF.AccessorComponentType> = {\n\t\t/**\n\t\t * 1-byte signed integer, stored as\n\t\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array Int8Array}.\n\t\t */\n\t\tBYTE: 5120,\n\t\t/**\n\t\t * 1-byte unsigned integer, stored as\n\t\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array Uint8Array}.\n\t\t */\n\t\tUNSIGNED_BYTE: 5121,\n\t\t/**\n\t\t * 2-byte signed integer, stored as\n\t\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array Int16Array}.\n\t\t */\n\t\tSHORT: 5122,\n\t\t/**\n\t\t * 2-byte unsigned integer, stored as\n\t\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array Uint16Array}.\n\t\t */\n\t\tUNSIGNED_SHORT: 5123,\n\t\t/**\n\t\t * 4-byte unsigned integer, stored as\n\t\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array Uint32Array}.\n\t\t */\n\t\tUNSIGNED_INT: 5125,\n\t\t/**\n\t\t * 4-byte floating point number, stored as\n\t\t * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array Float32Array}.\n\t\t */\n\t\tFLOAT: 5126,\n\t};\n\n\t/**********************************************************************************************\n\t * Instance.\n\t */\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.ACCESSOR;\n\t}\n\n\tprotected getDefaults(): Nullable<IAccessor> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\tarray: null,\n\t\t\ttype: Accessor.Type.SCALAR,\n\t\t\tcomponentType: Accessor.ComponentType.FLOAT,\n\t\t\tnormalized: false,\n\t\t\tsparse: false,\n\t\t\tbuffer: null,\n\t\t});\n\t}\n\n\t/** @internal Inbound transform to normalized representation, if applicable. */\n\tprivate _in = MathUtils.identity;\n\n\t/** @internal Outbound transform from normalized representation, if applicable. */\n\tprivate _out = MathUtils.identity;\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\tsuper.copy(other, resolve);\n\t\tthis._in = other._in;\n\t\tthis._out = other._out;\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Static.\n\t */\n\n\t/** Returns size of a given element type, in components. */\n\tpublic static getElementSize(type: GLTF.AccessorType): number {\n\t\tswitch (type) {\n\t\t\tcase Accessor.Type.SCALAR:\n\t\t\t\treturn 1;\n\t\t\tcase Accessor.Type.VEC2:\n\t\t\t\treturn 2;\n\t\t\tcase Accessor.Type.VEC3:\n\t\t\t\treturn 3;\n\t\t\tcase Accessor.Type.VEC4:\n\t\t\t\treturn 4;\n\t\t\tcase Accessor.Type.MAT2:\n\t\t\t\treturn 4;\n\t\t\tcase Accessor.Type.MAT3:\n\t\t\t\treturn 9;\n\t\t\tcase Accessor.Type.MAT4:\n\t\t\t\treturn 16;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unexpected type: ' + type);\n\t\t}\n\t}\n\n\t/** Returns size of a given component type, in bytes. */\n\tpublic static getComponentSize(componentType: GLTF.AccessorComponentType): number {\n\t\tswitch (componentType) {\n\t\t\tcase Accessor.ComponentType.BYTE:\n\t\t\t\treturn 1;\n\t\t\tcase Accessor.ComponentType.UNSIGNED_BYTE:\n\t\t\t\treturn 1;\n\t\t\tcase Accessor.ComponentType.SHORT:\n\t\t\t\treturn 2;\n\t\t\tcase Accessor.ComponentType.UNSIGNED_SHORT:\n\t\t\t\treturn 2;\n\t\t\tcase Accessor.ComponentType.UNSIGNED_INT:\n\t\t\t\treturn 4;\n\t\t\tcase Accessor.ComponentType.FLOAT:\n\t\t\t\treturn 4;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unexpected component type: ' + componentType);\n\t\t}\n\t}\n\n\t/**********************************************************************************************\n\t * Min/max bounds.\n\t */\n\n\t/**\n\t * Minimum value of each component in this attribute. Unlike in a final glTF file, values\n\t * returned by this method will reflect the minimum accounting for {@link .normalized}\n\t * state.\n\t */\n\tpublic getMinNormalized(target: number[]): number[] {\n\t\tconst elementSize = this.getElementSize();\n\n\t\tthis.getMin(target);\n\n\t\tfor (let j = 0; j < elementSize; j++) target[j] = this._out(target[j]);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Minimum value of each component in this attribute. Values returned by this method do not\n\t * reflect normalization: use {@link .getMinNormalized} in that case.\n\t */\n\tpublic getMin(target: number[]): number[] {\n\t\tconst array = this.get('array');\n\t\tconst count = this.getCount();\n\t\tconst elementSize = this.getElementSize();\n\n\t\tfor (let j = 0; j < elementSize; j++) target[j] = Infinity;\n\n\t\tfor (let i = 0; i < count * elementSize; i += elementSize) {\n\t\t\tfor (let j = 0; j < elementSize; j++) {\n\t\t\t\tconst value = array![i + j];\n\t\t\t\tif (Number.isFinite(value)) {\n\t\t\t\t\ttarget[j] = Math.min(target[j], value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Maximum value of each component in this attribute. Unlike in a final glTF file, values\n\t * returned by this method will reflect the minimum accounting for {@link .normalized}\n\t * state.\n\t */\n\tpublic getMaxNormalized(target: number[]): number[] {\n\t\tconst elementSize = this.getElementSize();\n\n\t\tthis.getMax(target);\n\n\t\tfor (let j = 0; j < elementSize; j++) target[j] = this._out(target[j]);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Maximum value of each component in this attribute. Values returned by this method do not\n\t * reflect normalization: use {@link .getMinNormalized} in that case.\n\t */\n\tpublic getMax(target: number[]): number[] {\n\t\tconst array = this.get('array');\n\t\tconst count = this.getCount();\n\t\tconst elementSize = this.getElementSize();\n\n\t\tfor (let j = 0; j < elementSize; j++) target[j] = -Infinity;\n\n\t\tfor (let i = 0; i < count * elementSize; i += elementSize) {\n\t\t\tfor (let j = 0; j < elementSize; j++) {\n\t\t\t\tconst value = array![i + j];\n\t\t\t\tif (Number.isFinite(value)) {\n\t\t\t\t\ttarget[j] = Math.max(target[j], value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t}\n\n\t/**********************************************************************************************\n\t * Layout.\n\t */\n\n\t/**\n\t * Number of elements in the accessor. An array of length 30, containing 10 `VEC3` elements,\n\t * will have a count of 10.\n\t */\n\tpublic getCount(): number {\n\t\tconst array = this.get('array');\n\t\treturn array ? array.length / this.getElementSize() : 0;\n\t}\n\n\t/** Type of element stored in the accessor. `VEC2`, `VEC3`, etc. */\n\tpublic getType(): GLTF.AccessorType {\n\t\treturn this.get('type');\n\t}\n\n\t/**\n\t * Sets type of element stored in the accessor. `VEC2`, `VEC3`, etc. Array length must be a\n\t * multiple of the component size (`VEC2` = 2, `VEC3` = 3, ...) for the selected type.\n\t */\n\tpublic setType(type: GLTF.AccessorType): Accessor {\n\t\treturn this.set('type', type);\n\t}\n\n\t/**\n\t * Number of components in each element of the accessor. For example, the element size of a\n\t * `VEC2` accessor is 2. This value is determined automatically based on array length and\n\t * accessor type, specified with {@link Accessor.setType setType()}.\n\t */\n\tpublic getElementSize(): number {\n\t\treturn Accessor.getElementSize(this.get('type'));\n\t}\n\n\t/**\n\t * Size of each component (a value in the raw array), in bytes. For example, the\n\t * `componentSize` of data backed by a `float32` array is 4 bytes.\n\t */\n\tpublic getComponentSize(): number {\n\t\treturn this.get('array')!.BYTES_PER_ELEMENT;\n\t}\n\n\t/**\n\t * Component type (float32, uint16, etc.). This value is determined automatically, and can only\n\t * be modified by replacing the underlying array.\n\t */\n\tpublic getComponentType(): GLTF.AccessorComponentType {\n\t\treturn this.get('componentType');\n\t}\n\n\t/**********************************************************************************************\n\t * Normalization.\n\t */\n\n\t/**\n\t * Specifies whether integer data values should be normalized (true) to [0, 1] (for unsigned\n\t * types) or [-1, 1] (for signed types), or converted directly (false) when they are accessed.\n\t * This property is defined only for accessors that contain vertex attributes or animation\n\t * output data.\n\t */\n\tpublic getNormalized(): boolean {\n\t\treturn this.get('normalized');\n\t}\n\n\t/**\n\t * Specifies whether integer data values should be normalized (true) to [0, 1] (for unsigned\n\t * types) or [-1, 1] (for signed types), or converted directly (false) when they are accessed.\n\t * This property is defined only for accessors that contain vertex attributes or animation\n\t * output data.\n\t */\n\tpublic setNormalized(normalized: boolean): this {\n\t\tthis.set('normalized', normalized);\n\n\t\tif (normalized) {\n\t\t\tthis._out = (i: number): number => MathUtils.decodeNormalizedInt(i, this.get('componentType'));\n\t\t\tthis._in = (f: number): number => MathUtils.encodeNormalizedInt(f, this.get('componentType'));\n\t\t} else {\n\t\t\tthis._out = MathUtils.identity;\n\t\t\tthis._in = MathUtils.identity;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Data access.\n\t */\n\n\t/**\n\t * Returns the scalar element value at the given index, accounting for normalization if\n\t * applicable.\n\t */\n\tpublic getScalar(index: number): number {\n\t\tconst elementSize = this.getElementSize();\n\t\treturn this._out(this.get('array')![index * elementSize]);\n\t}\n\n\t/**\n\t * Assigns the scalar element value at the given index, accounting for normalization if\n\t * applicable.\n\t */\n\tpublic setScalar(index: number, x: number): this {\n\t\tthis.get('array')![index * this.getElementSize()] = this._in(x);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the vector or matrix element value at the given index, accounting for normalization\n\t * if applicable.\n\t */\n\tpublic getElement(index: number, target: number[]): number[] {\n\t\tconst elementSize = this.getElementSize();\n\t\tconst array = this.get('array')!;\n\t\tfor (let i = 0; i < elementSize; i++) {\n\t\t\ttarget[i] = this._out(array[index * elementSize + i]);\n\t\t}\n\t\treturn target;\n\t}\n\n\t/**\n\t * Assigns the vector or matrix element value at the given index, accounting for normalization\n\t * if applicable.\n\t */\n\tpublic setElement(index: number, value: number[]): this {\n\t\tconst elementSize = this.getElementSize();\n\t\tconst array = this.get('array')!;\n\t\tfor (let i = 0; i < elementSize; i++) {\n\t\t\tarray![index * elementSize + i] = this._in(value[i]);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Raw data storage.\n\t */\n\n\t/**\n\t * Specifies whether the accessor should be stored sparsely. When written to a glTF file, sparse\n\t * accessors store only values that differ from base values. When loaded in glTF Transform (or most\n\t * runtimes) a sparse accessor can be treated like any other accessor. Currently, glTF Transform always\n\t * uses zeroes for the base values when writing files.\n\t * @experimental\n\t */\n\tpublic getSparse(): boolean {\n\t\treturn this.get('sparse');\n\t}\n\n\t/**\n\t * Specifies whether the accessor should be stored sparsely. When written to a glTF file, sparse\n\t * accessors store only values that differ from base values. When loaded in glTF Transform (or most\n\t * runtimes) a sparse accessor can be treated like any other accessor. Currently, glTF Transform always\n\t * uses zeroes for the base values when writing files.\n\t * @experimental\n\t */\n\tpublic setSparse(sparse: boolean): this {\n\t\treturn this.set('sparse', sparse);\n\t}\n\n\t/** Returns the {@link Buffer} into which this accessor will be organized. */\n\tpublic getBuffer(): Buffer | null {\n\t\treturn this.getRef('buffer');\n\t}\n\n\t/** Assigns the {@link Buffer} into which this accessor will be organized. */\n\tpublic setBuffer(buffer: Buffer | null): this {\n\t\treturn this.setRef('buffer', buffer);\n\t}\n\n\t/** Returns the raw typed array underlying this accessor. */\n\tpublic getArray(): TypedArray | null {\n\t\treturn this.get('array');\n\t}\n\n\t/** Assigns the raw typed array underlying this accessor. */\n\tpublic setArray(array: TypedArray): this {\n\t\tthis.set('componentType', array ? arrayToComponentType(array) : Accessor.ComponentType.FLOAT);\n\t\tthis.set('array', array);\n\t\treturn this;\n\t}\n\n\t/** Returns the total bytelength of this accessor, exclusive of padding. */\n\tpublic getByteLength(): number {\n\t\tconst array = this.get('array');\n\t\treturn array ? array.byteLength : 0;\n\t}\n}\n\n/**************************************************************************************************\n * Accessor utilities.\n */\n\n/** @internal */\nfunction arrayToComponentType(array: TypedArray): GLTF.AccessorComponentType {\n\tswitch (array.constructor) {\n\t\tcase Float32Array:\n\t\t\treturn Accessor.ComponentType.FLOAT;\n\t\tcase Uint32Array:\n\t\t\treturn Accessor.ComponentType.UNSIGNED_INT;\n\t\tcase Uint16Array:\n\t\t\treturn Accessor.ComponentType.UNSIGNED_SHORT;\n\t\tcase Uint8Array:\n\t\t\treturn Accessor.ComponentType.UNSIGNED_BYTE;\n\t\tcase Int16Array:\n\t\t\treturn Accessor.ComponentType.SHORT;\n\t\tcase Int8Array:\n\t\t\treturn Accessor.ComponentType.BYTE;\n\t\tdefault:\n\t\t\tthrow new Error('Unknown accessor componentType.');\n\t}\n}\n","import { Nullable, PropertyType } from '../constants.js';\nimport type { AnimationChannel } from './animation-channel.js';\nimport type { AnimationSampler } from './animation-sampler.js';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property.js';\n\ninterface IAnimation extends IExtensibleProperty {\n\tchannels: AnimationChannel[];\n\tsamplers: AnimationSampler[];\n}\n\n/**\n * *Reusable collections of {@link AnimationChannel}s, together representing a discrete animation\n * clip.*\n *\n * One Animation represents one playable unit in an animation system. Each may contain channels\n * affecting multiple paths (`translation`, `rotation`, `scale`, or `weights`) on multiple\n * {@link Node}s. An Animation's channels must be played together, and do not have any meaning in\n * isolation.\n *\n * Multiple Animations _may_ be played together: for example, one character's _Walk_ animation\n * might play while another character's _Run_ animation plays. Or a single character might have\n * both an _Idle_ and a _Talk_ animation playing at the same time. However, glTF does not define\n * any particular relationship between top-level Animations, or any particular playback behavior\n * like looping or sequences of Animations. General-purpose viewers typically autoplay the first\n * animation and provide UI controls for choosing another. Game engines may have significantly\n * more advanced methods of playing and blending animations.\n *\n * For example, a very simple skinned {@link Mesh} might have two Animations, _Idle_ and _Walk_.\n * Each of those Animations might affect the rotations of two bones, _LegL_ and _LegR_, where the\n * keyframes for each target-path pair are stored in {@link AnimationChannel} instances. In  total,\n * this model would contain two Animations and Four {@link AnimationChannel}s.\n *\n * Usage:\n *\n * ```ts\n * const animation = doc.createAnimation('machineRun')\n * \t.addChannel(rotateCog1)\n * \t.addChannel(rotateCog2)\n * \t.addChannel(rotateCog3);\n * ```\n *\n * Reference\n * - [glTF → Animations](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#animations)\n *\n * @category Properties\n */\nexport class Animation extends ExtensibleProperty<IAnimation> {\n\tpublic declare propertyType: PropertyType.ANIMATION;\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.ANIMATION;\n\t}\n\n\tprotected getDefaults(): Nullable<IAnimation> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, { channels: [], samplers: [] });\n\t}\n\n\t/** Adds an {@link AnimationChannel} to this Animation. */\n\tpublic addChannel(channel: AnimationChannel): this {\n\t\treturn this.addRef('channels', channel);\n\t}\n\n\t/** Removes an {@link AnimationChannel} from this Animation. */\n\tpublic removeChannel(channel: AnimationChannel): this {\n\t\treturn this.removeRef('channels', channel);\n\t}\n\n\t/** Lists {@link AnimationChannel}s in this Animation. */\n\tpublic listChannels(): AnimationChannel[] {\n\t\treturn this.listRefs('channels');\n\t}\n\n\t/** Adds an {@link AnimationSampler} to this Animation. */\n\tpublic addSampler(sampler: AnimationSampler): this {\n\t\treturn this.addRef('samplers', sampler);\n\t}\n\n\t/** Removes an {@link AnimationSampler} from this Animation. */\n\tpublic removeSampler(sampler: AnimationSampler): this {\n\t\treturn this.removeRef('samplers', sampler);\n\t}\n\n\t/** Lists {@link AnimationSampler}s in this Animation. */\n\tpublic listSamplers(): AnimationSampler[] {\n\t\treturn this.listRefs('samplers');\n\t}\n}\n","import { Nullable, PropertyType } from '../constants.js';\nimport type { GLTF } from '../types/gltf.js';\nimport type { AnimationSampler } from './animation-sampler.js';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property.js';\nimport type { Node } from './node.js';\n\ninterface IAnimationChannel extends IExtensibleProperty {\n\ttargetPath: GLTF.AnimationChannelTargetPath | null;\n\ttargetNode: Node;\n\tsampler: AnimationSampler;\n}\n\n/**\n * *A target-path pair within a larger {@link Animation}, which refers to an\n * {@link AnimationSampler} storing the keyframe data for that pair.*\n *\n * A _target_ is always a {@link Node}, in the core glTF spec. A _path_ is any property of that\n * Node that can be affected by animation: `translation`, `rotation`, `scale`, or `weights`. An\n * {@link Animation} affecting the positions and rotations of several {@link Node}s would contain\n * one channel for each Node-position or Node-rotation pair. The keyframe data for an\n * AnimationChannel is stored in an {@link AnimationSampler}, which must be attached to the same\n * {@link Animation}.\n *\n * Usage:\n *\n * ```ts\n * const node = doc.getRoot()\n * \t.listNodes()\n * \t.find((node) => node.getName() === 'Cog');\n *\n * const channel = doc.createAnimationChannel('cogRotation')\n * \t.setTargetPath('rotation')\n * \t.setTargetNode(node)\n * \t.setSampler(rotateSampler);\n * ```\n *\n * Reference\n * - [glTF → Animations](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#animations)\n *\n * @category Properties\n */\nexport class AnimationChannel extends ExtensibleProperty<IAnimationChannel> {\n\tpublic declare propertyType: PropertyType.ANIMATION_CHANNEL;\n\n\t/**********************************************************************************************\n\t * Constants.\n\t */\n\n\t/** Name of the property to be modified by an animation channel. */\n\tpublic static TargetPath: Record<string, GLTF.AnimationChannelTargetPath> = {\n\t\t/** Channel targets {@link Node.setTranslation}. */\n\t\tTRANSLATION: 'translation',\n\t\t/** Channel targets {@link Node.setRotation}. */\n\t\tROTATION: 'rotation',\n\t\t/** Channel targets {@link Node.setScale}. */\n\t\tSCALE: 'scale',\n\t\t/** Channel targets {@link Node.setWeights}, affecting {@link PrimitiveTarget} weights. */\n\t\tWEIGHTS: 'weights',\n\t};\n\n\t/**********************************************************************************************\n\t * Instance.\n\t */\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.ANIMATION_CHANNEL;\n\t}\n\n\tprotected getDefaults(): Nullable<IAnimationChannel> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\ttargetPath: null,\n\t\t\ttargetNode: null,\n\t\t\tsampler: null,\n\t\t});\n\t}\n\n\t/**********************************************************************************************\n\t * Properties.\n\t */\n\n\t/**\n\t * Path (property) animated on the target {@link Node}. Supported values include:\n\t * `translation`, `rotation`, `scale`, or `weights`.\n\t */\n\tpublic getTargetPath(): GLTF.AnimationChannelTargetPath | null {\n\t\treturn this.get('targetPath');\n\t}\n\n\t/**\n\t * Path (property) animated on the target {@link Node}. Supported values include:\n\t * `translation`, `rotation`, `scale`, or `weights`.\n\t */\n\tpublic setTargetPath(targetPath: GLTF.AnimationChannelTargetPath): this {\n\t\treturn this.set('targetPath', targetPath);\n\t}\n\n\t/** Target {@link Node} animated by the channel. */\n\tpublic getTargetNode(): Node | null {\n\t\treturn this.getRef('targetNode');\n\t}\n\n\t/** Target {@link Node} animated by the channel. */\n\tpublic setTargetNode(targetNode: Node | null): this {\n\t\treturn this.setRef('targetNode', targetNode);\n\t}\n\n\t/**\n\t * Keyframe data input/output values for the channel. Must be attached to the same\n\t * {@link Animation}.\n\t */\n\tpublic getSampler(): AnimationSampler | null {\n\t\treturn this.getRef('sampler');\n\t}\n\n\t/**\n\t * Keyframe data input/output values for the channel. Must be attached to the same\n\t * {@link Animation}.\n\t */\n\tpublic setSampler(sampler: AnimationSampler | null): this {\n\t\treturn this.setRef('sampler', sampler);\n\t}\n}\n","import { BufferViewUsage, Nullable, PropertyType } from '../constants.js';\nimport type { GLTF } from '../types/gltf.js';\nimport type { Accessor } from './accessor.js';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property.js';\n\ninterface IAnimationSampler extends IExtensibleProperty {\n\tinterpolation: GLTF.AnimationSamplerInterpolation;\n\tinput: Accessor;\n\toutput: Accessor;\n}\n\n/**\n * *Reusable collection of keyframes affecting particular property of an object.*\n *\n * Each AnimationSampler refers to an input and an output {@link Accessor}. Input contains times\n * (in seconds) for each keyframe. Output contains values (of any {@link Accessor.Type}) for the\n * animated property at each keyframe. Samplers using `CUBICSPLINE` interpolation will also contain\n * in/out tangents in the output, with the layout:\n *\n * in<sub>1</sub>, value<sub>1</sub>, out<sub>1</sub>,\n * in<sub>2</sub>, value<sub>2</sub>, out<sub>2</sub>,\n * in<sub>3</sub>, value<sub>3</sub>, out<sub>3</sub>, ...\n *\n * Usage:\n *\n * ```ts\n * // Create accessor containing input times, in seconds.\n * const input = doc.createAccessor('bounceTimes')\n * \t.setArray(new Float32Array([0, 1, 2]))\n * \t.setType(Accessor.Type.SCALAR);\n *\n * // Create accessor containing output values, in local units.\n * const output = doc.createAccessor('bounceValues')\n * \t.setArray(new Float32Array([\n * \t\t0, 0, 0, // y = 0\n * \t\t0, 1, 0, // y = 1\n * \t\t0, 0, 0, // y = 0\n * \t]))\n * \t.setType(Accessor.Type.VEC3);\n *\n * // Create sampler.\n * const sampler = doc.createAnimationSampler('bounce')\n * \t.setInput(input)\n * \t.setOutput(output)\n * \t.setInterpolation('LINEAR');\n * ```\n *\n * Reference\n * - [glTF → Animations](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#animations)\n *\n * @category Properties\n */\nexport class AnimationSampler extends ExtensibleProperty<IAnimationSampler> {\n\tpublic declare propertyType: PropertyType.ANIMATION_SAMPLER;\n\n\t/**********************************************************************************************\n\t * Constants.\n\t */\n\n\t/** Interpolation method. */\n\tpublic static Interpolation: Record<string, GLTF.AnimationSamplerInterpolation> = {\n\t\t/** Animated values are linearly interpolated between keyframes. */\n\t\tLINEAR: 'LINEAR',\n\t\t/** Animated values remain constant from one keyframe until the next keyframe. */\n\t\tSTEP: 'STEP',\n\t\t/** Animated values are interpolated according to given cubic spline tangents. */\n\t\tCUBICSPLINE: 'CUBICSPLINE',\n\t};\n\n\t/**********************************************************************************************\n\t * Instance.\n\t */\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.ANIMATION_SAMPLER;\n\t}\n\n\tprotected getDefaultAttributes(): Nullable<IAnimationSampler> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\tinterpolation: AnimationSampler.Interpolation.LINEAR,\n\t\t\tinput: null,\n\t\t\toutput: null,\n\t\t});\n\t}\n\n\t/**********************************************************************************************\n\t * Static.\n\t */\n\n\t/** Interpolation mode: `STEP`, `LINEAR`, or `CUBICSPLINE`. */\n\tpublic getInterpolation(): GLTF.AnimationSamplerInterpolation {\n\t\treturn this.get('interpolation');\n\t}\n\n\t/** Interpolation mode: `STEP`, `LINEAR`, or `CUBICSPLINE`. */\n\tpublic setInterpolation(interpolation: GLTF.AnimationSamplerInterpolation): this {\n\t\treturn this.set('interpolation', interpolation);\n\t}\n\n\t/** Times for each keyframe, in seconds. */\n\tpublic getInput(): Accessor | null {\n\t\treturn this.getRef('input');\n\t}\n\n\t/** Times for each keyframe, in seconds. */\n\tpublic setInput(input: Accessor | null): this {\n\t\treturn this.setRef('input', input, { usage: BufferViewUsage.OTHER });\n\t}\n\n\t/**\n\t * Values for each keyframe. For `CUBICSPLINE` interpolation, output also contains in/out\n\t * tangents.\n\t */\n\tpublic getOutput(): Accessor | null {\n\t\treturn this.getRef('output');\n\t}\n\n\t/**\n\t * Values for each keyframe. For `CUBICSPLINE` interpolation, output also contains in/out\n\t * tangents.\n\t */\n\tpublic setOutput(output: Accessor | null): this {\n\t\treturn this.setRef('output', output, { usage: BufferViewUsage.OTHER });\n\t}\n}\n","import { Nullable, PropertyType } from '../constants.js';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property.js';\n\ninterface IBuffer extends IExtensibleProperty {\n\turi: string;\n}\n\n/**\n * *Buffers are low-level storage units for binary data.*\n *\n * glTF 2.0 has three concepts relevant to binary storage: accessors, buffer views, and buffers.\n * In glTF Transform, an {@link Accessor} is referenced by any property that requires numeric typed\n * array data. Meshes, Primitives, and Animations all reference Accessors. Buffers define how that\n * data is organized into transmitted file(s). A `.glb` file has only a single Buffer, and when\n * exporting to `.glb` your resources should be grouped accordingly. A `.gltf` file may reference\n * one or more `.bin` files — each `.bin` is a Buffer — and grouping Accessors under different\n * Buffers allow you to specify that structure.\n *\n * For engines that can dynamically load portions of a glTF file, splitting data into separate\n * buffers can allow you to avoid loading data until it is needed. For example, you might put\n * binary data for specific meshes into a different `.bin` buffer, or put each animation's binary\n * payload into its own `.bin`.\n *\n * Buffer Views define how Accessors are organized within a given Buffer. glTF Transform creates an\n * efficient Buffer View layout automatically at export: there is no Buffer View property exposed\n * by the glTF Transform API, simplifying data management.\n *\n * Usage:\n *\n * ```ts\n * // Create two buffers with custom filenames.\n * const buffer1 = doc.createBuffer('buffer1')\n * \t.setURI('part1.bin');\n * const buffer2 = doc.createBuffer('buffer2')\n * \t.setURI('part2.bin');\n *\n * // Assign the attributes of two meshes to different buffers. If the meshes\n * // had indices or morph target attributes, you would also want to relocate\n * // those accessors.\n * mesh1\n * \t.listPrimitives()\n * \t.forEach((primitive) => primitive.listAttributes()\n * \t\t.forEach((attribute) => attribute.setBuffer(buffer1)));\n * mesh2\n * \t.listPrimitives()\n * \t.forEach((primitive) => primitive.listAttributes()\n * \t\t.forEach((attribute) => attribute.setBuffer(buffer2)));\n *\n * // Write to disk. Each mesh's binary data will be in a separate binary file;\n * // any remaining accessors will be in a third (default) buffer.\n * await new NodeIO().write('scene.gltf', doc);\n * // → scene.gltf, part1.bin, part2.bin\n * ```\n *\n * References:\n * - [glTF → Buffers and Buffer Views](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#buffers-and-buffer-views)\n * - [glTF → Accessors](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#accessors)\n *\n * @category Properties\n */\nexport class Buffer extends ExtensibleProperty<IBuffer> {\n\tpublic declare propertyType: PropertyType.BUFFER;\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.BUFFER;\n\t}\n\n\tprotected getDefaults(): Nullable<IBuffer> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, { uri: '' });\n\t}\n\n\t/**\n\t * Returns the URI (or filename) of this buffer (e.g. 'myBuffer.bin'). URIs are strongly\n\t * encouraged to be relative paths, rather than absolute. Use of a protocol (like `file://`)\n\t * is possible for custom applications, but will limit the compatibility of the asset with most\n\t * tools.\n\t *\n\t * Buffers commonly use the extension `.bin`, though this is not required.\n\t */\n\tpublic getURI(): string {\n\t\treturn this.get('uri');\n\t}\n\n\t/**\n\t * Sets the URI (or filename) of this buffer (e.g. 'myBuffer.bin'). URIs are strongly\n\t * encouraged to be relative paths, rather than absolute. Use of a protocol (like `file://`)\n\t * is possible for custom applications, but will limit the compatibility of the asset with most\n\t * tools.\n\t *\n\t * Buffers commonly use the extension `.bin`, though this is not required.\n\t */\n\tpublic setURI(uri: string): this {\n\t\treturn this.set('uri', uri);\n\t}\n}\n","import { Nullable, PropertyType } from '../constants.js';\nimport type { GLTF } from '../types/gltf.js';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property.js';\n\ninterface ICamera extends IExtensibleProperty {\n\ttype: GLTF.CameraType;\n\tznear: number;\n\tzfar: number;\n\taspectRatio: number | null;\n\tyfov: number;\n\txmag: number;\n\tymag: number;\n}\n\n/**\n * *Cameras are perspectives through which the {@link Scene} may be viewed.*\n *\n * Projection can be perspective or orthographic. Cameras are contained in nodes and thus can be\n * transformed. The camera is defined such that the local +X axis is to the right, the lens looks\n * towards the local -Z axis, and the top of the camera is aligned with the local +Y axis. If no\n * transformation is specified, the location of the camera is at the origin.\n *\n * Usage:\n *\n * ```typescript\n * const camera = doc.createCamera('myCamera')\n * \t.setType(GLTF.CameraType.PERSPECTIVE)\n * \t.setZNear(0.1)\n * \t.setZFar(100)\n * \t.setYFov(Math.PI / 4)\n * \t.setAspectRatio(1.5);\n *\n * node.setCamera(camera);\n * ```\n *\n * References:\n * - [glTF → Cameras](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#cameras)\n *\n * @category Properties\n */\nexport class Camera extends ExtensibleProperty<ICamera> {\n\tpublic declare propertyType: PropertyType.CAMERA;\n\n\t/**********************************************************************************************\n\t * Constants.\n\t */\n\n\tpublic static Type: Record<string, GLTF.CameraType> = {\n\t\t/** A perspective camera representing a perspective projection matrix. */\n\t\tPERSPECTIVE: 'perspective',\n\t\t/** An orthographic camera representing an orthographic projection matrix. */\n\t\tORTHOGRAPHIC: 'orthographic',\n\t};\n\n\t/**********************************************************************************************\n\t * Instance.\n\t */\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.CAMERA;\n\t}\n\n\tprotected getDefaults(): Nullable<ICamera> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\t// Common.\n\t\t\ttype: Camera.Type.PERSPECTIVE,\n\t\t\tznear: 0.1,\n\t\t\tzfar: 100,\n\t\t\t// Perspective.\n\t\t\taspectRatio: null,\n\t\t\tyfov: (Math.PI * 2 * 50) / 360, // 50º\n\t\t\t// Orthographic.\n\t\t\txmag: 1,\n\t\t\tymag: 1,\n\t\t});\n\t}\n\n\t/**********************************************************************************************\n\t * Common.\n\t */\n\n\t/** Specifies if the camera uses a perspective or orthographic projection. */\n\tpublic getType(): GLTF.CameraType {\n\t\treturn this.get('type');\n\t}\n\n\t/** Specifies if the camera uses a perspective or orthographic projection. */\n\tpublic setType(type: GLTF.CameraType): this {\n\t\treturn this.set('type', type);\n\t}\n\n\t/** Floating-point distance to the near clipping plane. */\n\tpublic getZNear(): number {\n\t\treturn this.get('znear');\n\t}\n\n\t/** Floating-point distance to the near clipping plane. */\n\tpublic setZNear(znear: number): this {\n\t\treturn this.set('znear', znear);\n\t}\n\n\t/**\n\t * Floating-point distance to the far clipping plane. When defined, zfar must be greater than\n\t * znear. If zfar is undefined, runtime must use infinite projection matrix.\n\t */\n\tpublic getZFar(): number {\n\t\treturn this.get('zfar');\n\t}\n\n\t/**\n\t * Floating-point distance to the far clipping plane. When defined, zfar must be greater than\n\t * znear. If zfar is undefined, runtime must use infinite projection matrix.\n\t */\n\tpublic setZFar(zfar: number): this {\n\t\treturn this.set('zfar', zfar);\n\t}\n\n\t/**********************************************************************************************\n\t * Perspective.\n\t */\n\n\t/**\n\t * Floating-point aspect ratio of the field of view. When undefined, the aspect ratio of the\n\t * canvas is used.\n\t */\n\tpublic getAspectRatio(): number | null {\n\t\treturn this.get('aspectRatio');\n\t}\n\n\t/**\n\t * Floating-point aspect ratio of the field of view. When undefined, the aspect ratio of the\n\t * canvas is used.\n\t */\n\tpublic setAspectRatio(aspectRatio: number | null): this {\n\t\treturn this.set('aspectRatio', aspectRatio);\n\t}\n\n\t/** Floating-point vertical field of view in radians. */\n\tpublic getYFov(): number {\n\t\treturn this.get('yfov');\n\t}\n\n\t/** Floating-point vertical field of view in radians. */\n\tpublic setYFov(yfov: number): this {\n\t\treturn this.set('yfov', yfov);\n\t}\n\n\t/**********************************************************************************************\n\t * Orthographic.\n\t */\n\n\t/**\n\t * Floating-point horizontal magnification of the view, and half the view's width\n\t * in world units.\n\t */\n\tpublic getXMag(): number {\n\t\treturn this.get('xmag');\n\t}\n\n\t/**\n\t * Floating-point horizontal magnification of the view, and half the view's width\n\t * in world units.\n\t */\n\tpublic setXMag(xmag: number): this {\n\t\treturn this.set('xmag', xmag);\n\t}\n\n\t/**\n\t * Floating-point vertical magnification of the view, and half the view's height\n\t * in world units.\n\t */\n\tpublic getYMag(): number {\n\t\treturn this.get('ymag');\n\t}\n\n\t/**\n\t * Floating-point vertical magnification of the view, and half the view's height\n\t * in world units.\n\t */\n\tpublic setYMag(ymag: number): this {\n\t\treturn this.set('ymag', ymag);\n\t}\n}\n","import type { ExtensibleProperty } from './extensible-property.js';\nimport { Property, IProperty } from './property.js';\n\n/**\n * *Base class for all {@link Property} types that can be attached by an {@link Extension}.*\n *\n * After an {@link Extension} is attached to a glTF {@link Document}, the Extension may be used to\n * construct ExtensionProperty instances, to be referenced throughout the document as prescribed by\n * the Extension. For example, the `KHR_materials_clearcoat` Extension defines a `Clearcoat`\n * ExtensionProperty, which is referenced by {@link Material} Properties in the Document, and may\n * contain references to {@link Texture} properties of its own.\n *\n * For more information on available extensions and their usage, see [Extensions](/extensions).\n *\n * Reference:\n * - [glTF → Extensions](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#specifying-extensions)\n *\n * @category Properties\n */\nexport abstract class ExtensionProperty<T extends IProperty = IProperty> extends Property<T> {\n\tpublic static EXTENSION_NAME: string;\n\tpublic abstract readonly extensionName: string;\n\n\t/** List of supported {@link Property} types. */\n\tpublic abstract readonly parentTypes: string[];\n\n\t/** @hidden */\n\tpublic _validateParent(parent: ExtensibleProperty): void {\n\t\tif (!this.parentTypes.includes(parent.propertyType)) {\n\t\t\tthrow new Error(`Parent \"${parent.propertyType}\" invalid for child \"${this.propertyType}\".`);\n\t\t}\n\t}\n}\n","import { Nullable, PropertyType } from '../constants.js';\nimport type { GLTF } from '../types/gltf.js';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property.js';\n\ninterface ITextureInfo extends IExtensibleProperty {\n\ttexCoord: number;\n\n\t// Sampler properties are also attached to TextureInfo, for simplicity.\n\tmagFilter: GLTF.TextureMagFilter | null;\n\tminFilter: GLTF.TextureMinFilter | null;\n\twrapS: GLTF.TextureWrapMode;\n\twrapT: GLTF.TextureWrapMode;\n}\n\n/**\n * *Settings associated with a particular use of a {@link Texture}.*\n *\n * Different materials may reuse the same texture but with different texture coordinates,\n * minFilter/magFilter, or wrapS/wrapT settings. The TextureInfo class contains settings\n * derived from both the \"TextureInfo\" and \"Sampler\" properties in the glTF specification,\n * consolidated here for simplicity.\n *\n * TextureInfo properties cannot be directly created. For any material texture slot, such as\n * baseColorTexture, there will be a corresponding method to obtain the TextureInfo for that slot.\n * For example, see {@link Material.getBaseColorTextureInfo}.\n *\n * References:\n * - [glTF → Texture Info](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#reference-textureinfo)\n *\n * @category Properties\n */\nexport class TextureInfo extends ExtensibleProperty<ITextureInfo> {\n\tpublic declare propertyType: PropertyType.TEXTURE_INFO;\n\n\t/**********************************************************************************************\n\t * Constants.\n\t */\n\n\t/** UV wrapping mode. Values correspond to WebGL enums. */\n\tpublic static WrapMode: Record<string, GLTF.TextureWrapMode> = {\n\t\t/** */\n\t\tCLAMP_TO_EDGE: 33071,\n\t\t/** */\n\t\tMIRRORED_REPEAT: 33648,\n\t\t/** */\n\t\tREPEAT: 10497,\n\t};\n\n\t/** Magnification filter. Values correspond to WebGL enums. */\n\tpublic static MagFilter: Record<string, GLTF.TextureMagFilter> = {\n\t\t/** */\n\t\tNEAREST: 9728,\n\t\t/** */\n\t\tLINEAR: 9729,\n\t};\n\n\t/** Minification filter. Values correspond to WebGL enums. */\n\tpublic static MinFilter: Record<string, GLTF.TextureMinFilter> = {\n\t\t/** */\n\t\tNEAREST: 9728,\n\t\t/** */\n\t\tLINEAR: 9729,\n\t\t/** */\n\t\tNEAREST_MIPMAP_NEAREST: 9984,\n\t\t/** */\n\t\tLINEAR_MIPMAP_NEAREST: 9985,\n\t\t/** */\n\t\tNEAREST_MIPMAP_LINEAR: 9986,\n\t\t/** */\n\t\tLINEAR_MIPMAP_LINEAR: 9987,\n\t};\n\n\t/**********************************************************************************************\n\t * Instance.\n\t */\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.TEXTURE_INFO;\n\t}\n\n\tprotected getDefaults(): Nullable<ITextureInfo> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\ttexCoord: 0,\n\t\t\tmagFilter: null,\n\t\t\tminFilter: null,\n\t\t\twrapS: TextureInfo.WrapMode.REPEAT,\n\t\t\twrapT: TextureInfo.WrapMode.REPEAT,\n\t\t});\n\t}\n\n\t/**********************************************************************************************\n\t * Texture coordinates.\n\t */\n\n\t/** Returns the texture coordinate (UV set) index for the texture. */\n\tpublic getTexCoord(): number {\n\t\treturn this.get('texCoord');\n\t}\n\n\t/** Sets the texture coordinate (UV set) index for the texture. */\n\tpublic setTexCoord(texCoord: number): this {\n\t\treturn this.set('texCoord', texCoord);\n\t}\n\n\t/**********************************************************************************************\n\t * Min/mag filter.\n\t */\n\n\t/** Returns the magnification filter applied to the texture. */\n\tpublic getMagFilter(): GLTF.TextureMagFilter | null {\n\t\treturn this.get('magFilter');\n\t}\n\n\t/** Sets the magnification filter applied to the texture. */\n\tpublic setMagFilter(magFilter: GLTF.TextureMagFilter | null): this {\n\t\treturn this.set('magFilter', magFilter);\n\t}\n\n\t/** Sets the minification filter applied to the texture. */\n\tpublic getMinFilter(): GLTF.TextureMinFilter | null {\n\t\treturn this.get('minFilter');\n\t}\n\n\t/** Returns the minification filter applied to the texture. */\n\tpublic setMinFilter(minFilter: GLTF.TextureMinFilter | null): this {\n\t\treturn this.set('minFilter', minFilter);\n\t}\n\n\t/**********************************************************************************************\n\t * UV wrapping.\n\t */\n\n\t/** Returns the S (U) wrapping mode for UVs used by the texture. */\n\tpublic getWrapS(): GLTF.TextureWrapMode {\n\t\treturn this.get('wrapS');\n\t}\n\n\t/** Sets the S (U) wrapping mode for UVs used by the texture. */\n\tpublic setWrapS(wrapS: GLTF.TextureWrapMode): this {\n\t\treturn this.set('wrapS', wrapS);\n\t}\n\n\t/** Returns the T (V) wrapping mode for UVs used by the texture. */\n\tpublic getWrapT(): GLTF.TextureWrapMode {\n\t\treturn this.get('wrapT');\n\t}\n\n\t/** Sets the T (V) wrapping mode for UVs used by the texture. */\n\tpublic setWrapT(wrapT: GLTF.TextureWrapMode): this {\n\t\treturn this.set('wrapT', wrapT);\n\t}\n}\n","import { Nullable, PropertyType, TextureChannel, vec3, vec4 } from '../constants.js';\nimport type { GLTF } from '../types/gltf.js';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property.js';\nimport type { Texture } from './texture.js';\nimport { TextureInfo } from './texture-info.js';\n\nconst { R, G, B, A } = TextureChannel;\n\ninterface IMaterial extends IExtensibleProperty {\n\talphaMode: GLTF.MaterialAlphaMode;\n\talphaCutoff: number;\n\tdoubleSided: boolean;\n\tbaseColorFactor: vec4;\n\tbaseColorTexture: Texture;\n\tbaseColorTextureInfo: TextureInfo;\n\temissiveFactor: vec3;\n\temissiveTexture: Texture;\n\temissiveTextureInfo: TextureInfo;\n\tnormalScale: number;\n\tnormalTexture: Texture;\n\tnormalTextureInfo: TextureInfo;\n\tocclusionStrength: number;\n\tocclusionTexture: Texture;\n\tocclusionTextureInfo: TextureInfo;\n\troughnessFactor: number;\n\tmetallicFactor: number;\n\tmetallicRoughnessTexture: Texture;\n\tmetallicRoughnessTextureInfo: TextureInfo;\n}\n\n/**\n * *Materials describe a surface's appearance and response to light.*\n *\n * Each {@link Primitive} within a {@link Mesh} may be assigned a single Material. The number of\n * GPU draw calls typically increases with both the numbers of Primitives and of Materials in an\n * asset; Materials should be reused wherever possible. Techniques like texture atlasing and vertex\n * colors allow objects to have varied appearances while technically sharing a single Material.\n *\n * Material properties are modified by both scalars (like `baseColorFactor`) and textures (like\n * `baseColorTexture`). When both are available, factors are considered linear multipliers against\n * textures of the same name. In the case of base color, vertex colors (`COLOR_0` attributes) are\n * also multiplied.\n *\n * Textures containing color data (`baseColorTexture`, `emissiveTexture`) are sRGB. All other\n * textures are linear. Like other resources, textures should be reused when possible.\n *\n * Usage:\n *\n * ```typescript\n * const material = doc.createMaterial('myMaterial')\n * \t.setBaseColorFactor([1, 0.5, 0.5, 1]) // RGBA\n * \t.setOcclusionTexture(aoTexture)\n * \t.setOcclusionStrength(0.5);\n *\n * mesh.listPrimitives()\n * \t.forEach((prim) => prim.setMaterial(material));\n * ```\n *\n * @category Properties\n */\nexport class Material extends ExtensibleProperty<IMaterial> {\n\tpublic declare propertyType: PropertyType.MATERIAL;\n\n\t/**********************************************************************************************\n\t * Constants.\n\t */\n\n\tpublic static AlphaMode: Record<string, GLTF.MaterialAlphaMode> = {\n\t\t/**\n\t\t * The alpha value is ignored and the rendered output is fully opaque\n\t\t */\n\t\tOPAQUE: 'OPAQUE',\n\t\t/**\n\t\t * The rendered output is either fully opaque or fully transparent depending on the alpha\n\t\t * value and the specified alpha cutoff value\n\t\t */\n\t\tMASK: 'MASK',\n\t\t/**\n\t\t * The alpha value is used to composite the source and destination areas. The rendered\n\t\t * output is combined with the background using the normal painting operation (i.e. the\n\t\t * Porter and Duff over operator)\n\t\t */\n\t\tBLEND: 'BLEND',\n\t};\n\n\t/**********************************************************************************************\n\t * Instance.\n\t */\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.MATERIAL;\n\t}\n\n\tprotected getDefaults(): Nullable<IMaterial> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\talphaMode: Material.AlphaMode.OPAQUE,\n\t\t\talphaCutoff: 0.5,\n\t\t\tdoubleSided: false,\n\t\t\tbaseColorFactor: [1, 1, 1, 1] as vec4,\n\t\t\tbaseColorTexture: null,\n\t\t\tbaseColorTextureInfo: new TextureInfo(this.graph, 'baseColorTextureInfo'),\n\t\t\temissiveFactor: [0, 0, 0] as vec3,\n\t\t\temissiveTexture: null,\n\t\t\temissiveTextureInfo: new TextureInfo(this.graph, 'emissiveTextureInfo'),\n\t\t\tnormalScale: 1,\n\t\t\tnormalTexture: null,\n\t\t\tnormalTextureInfo: new TextureInfo(this.graph, 'normalTextureInfo'),\n\t\t\tocclusionStrength: 1,\n\t\t\tocclusionTexture: null,\n\t\t\tocclusionTextureInfo: new TextureInfo(this.graph, 'occlusionTextureInfo'),\n\t\t\troughnessFactor: 1,\n\t\t\tmetallicFactor: 1,\n\t\t\tmetallicRoughnessTexture: null,\n\t\t\tmetallicRoughnessTextureInfo: new TextureInfo(this.graph, 'metallicRoughnessTextureInfo'),\n\t\t});\n\t}\n\n\t/**********************************************************************************************\n\t * Double-sided / culling.\n\t */\n\n\t/** Returns true when both sides of triangles should be rendered. May impact performance. */\n\tpublic getDoubleSided(): boolean {\n\t\treturn this.get('doubleSided');\n\t}\n\n\t/** Sets whether to render both sides of triangles. May impact performance. */\n\tpublic setDoubleSided(doubleSided: boolean): this {\n\t\treturn this.set('doubleSided', doubleSided);\n\t}\n\n\t/**********************************************************************************************\n\t * Alpha.\n\t */\n\n\t/** Returns material alpha, equivalent to baseColorFactor[3]. */\n\tpublic getAlpha(): number {\n\t\treturn this.get('baseColorFactor')[3];\n\t}\n\n\t/** Sets material alpha, equivalent to baseColorFactor[3]. */\n\tpublic setAlpha(alpha: number): this {\n\t\tconst baseColorFactor = this.get('baseColorFactor').slice() as vec4;\n\t\tbaseColorFactor[3] = alpha;\n\t\treturn this.set('baseColorFactor', baseColorFactor);\n\t}\n\n\t/**\n\t * Returns the mode of the material's alpha channels, which are provided by `baseColorFactor`\n\t * and `baseColorTexture`.\n\t *\n\t * - `OPAQUE`: Alpha value is ignored and the rendered output is fully opaque.\n\t * - `BLEND`: Alpha value is used to determine the transparency each pixel on a surface, and\n\t * \tthe fraction of surface vs. background color in the final result. Alpha blending creates\n\t *\tsignificant edge cases in realtime renderers, and some care when structuring the model is\n\t * \tnecessary for good results. In particular, transparent geometry should be kept in separate\n\t * \tmeshes or primitives from opaque geometry. The `depthWrite` or `zWrite` settings in engines\n\t * \tshould usually be disabled on transparent materials.\n\t * - `MASK`: Alpha value is compared against `alphaCutoff` threshold for each pixel on a\n\t * \tsurface, and the pixel is either fully visible or fully discarded based on that cutoff.\n\t * \tThis technique is useful for things like leafs/foliage, grass, fabric meshes, and other\n\t * \tsurfaces where no semitransparency is needed. With a good choice of `alphaCutoff`, surfaces\n\t * \tthat don't require semitransparency can avoid the performance penalties and visual issues\n\t * \tinvolved with `BLEND` transparency.\n\t *\n\t * Reference:\n\t * - [glTF → material.alphaMode](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#materialalphamode)\n\t */\n\tpublic getAlphaMode(): GLTF.MaterialAlphaMode {\n\t\treturn this.get('alphaMode');\n\t}\n\n\t/** Sets the mode of the material's alpha channels. See {@link Material.getAlphaMode getAlphaMode} for details. */\n\tpublic setAlphaMode(alphaMode: GLTF.MaterialAlphaMode): this {\n\t\treturn this.set('alphaMode', alphaMode);\n\t}\n\n\t/** Returns the visibility threshold; applied only when `.alphaMode='MASK'`. */\n\tpublic getAlphaCutoff(): number {\n\t\treturn this.get('alphaCutoff');\n\t}\n\n\t/** Sets the visibility threshold; applied only when `.alphaMode='MASK'`. */\n\tpublic setAlphaCutoff(alphaCutoff: number): this {\n\t\treturn this.set('alphaCutoff', alphaCutoff);\n\t}\n\n\t/**********************************************************************************************\n\t * Base color.\n\t */\n\n\t/**\n\t * Base color / albedo factor; Linear-sRGB components.\n\t * See {@link Material.getBaseColorTexture getBaseColorTexture}.\n\t */\n\tpublic getBaseColorFactor(): vec4 {\n\t\treturn this.get('baseColorFactor');\n\t}\n\n\t/**\n\t * Base color / albedo factor; Linear-sRGB components.\n\t * See {@link Material.getBaseColorTexture getBaseColorTexture}.\n\t */\n\tpublic setBaseColorFactor(baseColorFactor: vec4): this {\n\t\treturn this.set('baseColorFactor', baseColorFactor);\n\t}\n\n\t/**\n\t * Base color / albedo. The visible color of a non-metallic surface under constant ambient\n\t * light would be a linear combination (multiplication) of its vertex colors, base color\n\t * factor, and base color texture. Lighting, and reflections in metallic or smooth surfaces,\n\t * also effect the final color. The alpha (`.a`) channel of base color factors and textures\n\t * will have varying effects, based on the setting of {@link Material.getAlphaMode getAlphaMode}.\n\t *\n\t * Reference:\n\t * - [glTF → material.pbrMetallicRoughness.baseColorFactor](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#pbrmetallicroughnessbasecolorfactor)\n\t */\n\tpublic getBaseColorTexture(): Texture | null {\n\t\treturn this.getRef('baseColorTexture');\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its base color texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getBaseColorTextureInfo(): TextureInfo | null {\n\t\treturn this.getRef('baseColorTexture') ? this.getRef('baseColorTextureInfo') : null;\n\t}\n\n\t/** Sets base color / albedo texture. See {@link Material.getBaseColorTexture getBaseColorTexture}. */\n\tpublic setBaseColorTexture(texture: Texture | null): this {\n\t\treturn this.setRef('baseColorTexture', texture, { channels: R | G | B | A, isColor: true });\n\t}\n\n\t/**********************************************************************************************\n\t * Emissive.\n\t */\n\n\t/** Emissive color; Linear-sRGB components. See {@link Material.getEmissiveTexture getEmissiveTexture}. */\n\tpublic getEmissiveFactor(): vec3 {\n\t\treturn this.get('emissiveFactor');\n\t}\n\n\t/** Emissive color; Linear-sRGB components. See {@link Material.getEmissiveTexture getEmissiveTexture}. */\n\tpublic setEmissiveFactor(emissiveFactor: vec3): this {\n\t\treturn this.set('emissiveFactor', emissiveFactor);\n\t}\n\n\t/**\n\t * Emissive texture. Emissive color is added to any base color of the material, after any\n\t * lighting/shadowing are applied. An emissive color does not inherently \"glow\", or affect\n\t * objects around it at all. To create that effect, most viewers must also enable a\n\t * post-processing effect called \"bloom\".\n\t *\n\t * Reference:\n\t * - [glTF → material.emissiveTexture](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#materialemissivetexture)\n\t */\n\tpublic getEmissiveTexture(): Texture | null {\n\t\treturn this.getRef('emissiveTexture');\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its emissive texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getEmissiveTextureInfo(): TextureInfo | null {\n\t\treturn this.getRef('emissiveTexture') ? this.getRef('emissiveTextureInfo') : null;\n\t}\n\n\t/** Sets emissive texture. See {@link Material.getEmissiveTexture getEmissiveTexture}. */\n\tpublic setEmissiveTexture(texture: Texture | null): this {\n\t\treturn this.setRef('emissiveTexture', texture, { channels: R | G | B, isColor: true });\n\t}\n\n\t/**********************************************************************************************\n\t * Normal.\n\t */\n\n\t/** Normal (surface detail) factor; linear multiplier. Affects `.normalTexture`. */\n\tpublic getNormalScale(): number {\n\t\treturn this.get('normalScale');\n\t}\n\n\t/** Normal (surface detail) factor; linear multiplier. Affects `.normalTexture`. */\n\tpublic setNormalScale(scale: number): this {\n\t\treturn this.set('normalScale', scale);\n\t}\n\n\t/**\n\t * Normal (surface detail) texture.\n\t *\n\t * A tangent space normal map. The texture contains RGB components. Each texel represents the\n\t * XYZ components of a normal vector in tangent space. Red [0 to 255] maps to X [-1 to 1].\n\t * Green [0 to 255] maps to Y [-1 to 1]. Blue [128 to 255] maps to Z [1/255 to 1]. The normal\n\t * vectors use OpenGL conventions where +X is right and +Y is up. +Z points toward the viewer.\n\t *\n\t * Reference:\n\t * - [glTF → material.normalTexture](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#materialnormaltexture)\n\t */\n\tpublic getNormalTexture(): Texture | null {\n\t\treturn this.getRef('normalTexture');\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its normal texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getNormalTextureInfo(): TextureInfo | null {\n\t\treturn this.getRef('normalTexture') ? this.getRef('normalTextureInfo') : null;\n\t}\n\n\t/** Sets normal (surface detail) texture. See {@link Material.getNormalTexture getNormalTexture}. */\n\tpublic setNormalTexture(texture: Texture | null): this {\n\t\treturn this.setRef('normalTexture', texture, { channels: R | G | B });\n\t}\n\n\t/**********************************************************************************************\n\t * Occlusion.\n\t */\n\n\t/** (Ambient) Occlusion factor; linear multiplier. Affects `.occlusionTexture`. */\n\tpublic getOcclusionStrength(): number {\n\t\treturn this.get('occlusionStrength');\n\t}\n\n\t/** Sets (ambient) occlusion factor; linear multiplier. Affects `.occlusionTexture`. */\n\tpublic setOcclusionStrength(strength: number): this {\n\t\treturn this.set('occlusionStrength', strength);\n\t}\n\n\t/**\n\t * (Ambient) Occlusion texture, generally used for subtle 'baked' shadowing effects that are\n\t * independent of an object's position, such as shading in inset areas and corners. Direct\n\t * lighting is not affected by occlusion, so at least one indirect light source must be present\n\t * in the scene for occlusion effects to be visible.\n\t *\n\t * The occlusion values are sampled from the R channel. Higher values indicate areas that\n\t * should receive full indirect lighting and lower values indicate no indirect lighting.\n\t *\n\t * Reference:\n\t * - [glTF → material.occlusionTexture](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#materialocclusiontexture)\n\t */\n\tpublic getOcclusionTexture(): Texture | null {\n\t\treturn this.getRef('occlusionTexture');\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its occlusion texture. If no texture is attached,\n\t * {@link TextureInfo} is `null`.\n\t */\n\tpublic getOcclusionTextureInfo(): TextureInfo | null {\n\t\treturn this.getRef('occlusionTexture') ? this.getRef('occlusionTextureInfo') : null;\n\t}\n\n\t/** Sets (ambient) occlusion texture. See {@link Material.getOcclusionTexture getOcclusionTexture}. */\n\tpublic setOcclusionTexture(texture: Texture | null): this {\n\t\treturn this.setRef('occlusionTexture', texture, { channels: R });\n\t}\n\n\t/**********************************************************************************************\n\t * Metallic / roughness.\n\t */\n\n\t/**\n\t * Roughness factor; linear multiplier. Affects roughness channel of\n\t * `metallicRoughnessTexture`. See {@link Material.getMetallicRoughnessTexture getMetallicRoughnessTexture}.\n\t */\n\tpublic getRoughnessFactor(): number {\n\t\treturn this.get('roughnessFactor');\n\t}\n\n\t/**\n\t * Sets roughness factor; linear multiplier. Affects roughness channel of\n\t * `metallicRoughnessTexture`. See {@link Material.getMetallicRoughnessTexture getMetallicRoughnessTexture}.\n\t */\n\tpublic setRoughnessFactor(factor: number): this {\n\t\treturn this.set('roughnessFactor', factor);\n\t}\n\n\t/**\n\t * Metallic factor; linear multiplier. Affects roughness channel of\n\t * `metallicRoughnessTexture`. See {@link Material.getMetallicRoughnessTexture getMetallicRoughnessTexture}.\n\t */\n\tpublic getMetallicFactor(): number {\n\t\treturn this.get('metallicFactor');\n\t}\n\n\t/**\n\t * Sets metallic factor; linear multiplier. Affects roughness channel of\n\t * `metallicRoughnessTexture`. See {@link Material.getMetallicRoughnessTexture getMetallicRoughnessTexture}.\n\t */\n\tpublic setMetallicFactor(factor: number): this {\n\t\treturn this.set('metallicFactor', factor);\n\t}\n\n\t/**\n\t * Metallic roughness texture. The metalness values are sampled from the B channel. The\n\t * roughness values are sampled from the G channel. When a material is fully metallic,\n\t * or nearly so, it may require image-based lighting (i.e. an environment map) or global\n\t * illumination to appear well-lit.\n\t *\n\t * Reference:\n\t * - [glTF → material.pbrMetallicRoughness.metallicRoughnessTexture](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#pbrmetallicroughnessmetallicroughnesstexture)\n\t */\n\tpublic getMetallicRoughnessTexture(): Texture | null {\n\t\treturn this.getRef('metallicRoughnessTexture');\n\t}\n\n\t/**\n\t * Settings affecting the material's use of its metallic/roughness texture. If no texture is\n\t * attached, {@link TextureInfo} is `null`.\n\t */\n\tpublic getMetallicRoughnessTextureInfo(): TextureInfo | null {\n\t\treturn this.getRef('metallicRoughnessTexture') ? this.getRef('metallicRoughnessTextureInfo') : null;\n\t}\n\n\t/**\n\t * Sets metallic/roughness texture.\n\t * See {@link Material.getMetallicRoughnessTexture getMetallicRoughnessTexture}.\n\t */\n\tpublic setMetallicRoughnessTexture(texture: Texture | null): this {\n\t\treturn this.setRef('metallicRoughnessTexture', texture, { channels: G | B });\n\t}\n}\n","import { Nullable, PropertyType } from '../constants.js';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property.js';\nimport type { Primitive } from './primitive.js';\n\ninterface IMesh extends IExtensibleProperty {\n\tweights: number[];\n\tprimitives: Primitive[];\n}\n\n/**\n * *Meshes define reusable geometry (triangles, lines, or points) and are instantiated by\n * {@link Node}s.*\n *\n * Each draw call required to render a mesh is represented as a {@link Primitive}. Meshes typically\n * have only a single {@link Primitive}, but may have more for various reasons. A mesh manages only\n * a list of primitives — materials, morph targets, and other properties are managed on a per-\n * primitive basis.\n *\n * When the same geometry and material should be rendered at multiple places in the scene, reuse\n * the same Mesh instance and attach it to multiple nodes for better efficiency. Where the geometry\n * is shared but the material is not, reusing {@link Accessor}s under different meshes and\n * primitives can similarly improve transmission efficiency, although some rendering efficiency is\n * lost as the number of materials in a scene increases.\n *\n * Usage:\n *\n * ```ts\n * const primitive = doc.createPrimitive()\n * \t.setAttribute('POSITION', positionAccessor)\n * \t.setAttribute('TEXCOORD_0', uvAccessor);\n * const mesh = doc.createMesh('myMesh')\n * \t.addPrimitive(primitive);\n * node.setMesh(mesh);\n * ```\n *\n * References:\n * - [glTF → Geometry](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#geometry)\n *\n * @category Properties\n */\nexport class Mesh extends ExtensibleProperty<IMesh> {\n\tpublic declare propertyType: PropertyType.MESH;\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.MESH;\n\t}\n\n\tprotected getDefaults(): Nullable<IMesh> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, { weights: [], primitives: [] });\n\t}\n\n\t/** Adds a {@link Primitive} to the mesh's draw call list. */\n\tpublic addPrimitive(primitive: Primitive): this {\n\t\treturn this.addRef('primitives', primitive);\n\t}\n\n\t/** Removes a {@link Primitive} from the mesh's draw call list. */\n\tpublic removePrimitive(primitive: Primitive): this {\n\t\treturn this.removeRef('primitives', primitive);\n\t}\n\n\t/** Lists {@link Primitive} draw calls of the mesh. */\n\tpublic listPrimitives(): Primitive[] {\n\t\treturn this.listRefs('primitives');\n\t}\n\n\t/**\n\t * Initial weights of each {@link PrimitiveTarget} on this mesh. Each {@link Primitive} must\n\t * have the same number of targets. Most engines only support 4-8 active morph targets at a\n\t * time.\n\t */\n\tpublic getWeights(): number[] {\n\t\treturn this.get('weights');\n\t}\n\n\t/**\n\t * Initial weights of each {@link PrimitiveTarget} on this mesh. Each {@link Primitive} must\n\t * have the same number of targets. Most engines only support 4-8 active morph targets at a\n\t * time.\n\t */\n\tpublic setWeights(weights: number[]): this {\n\t\treturn this.set('weights', weights);\n\t}\n}\n","import { multiply } from 'gl-matrix/mat4';\nimport { PropertyType, mat4, vec3, vec4, Nullable } from '../constants.js';\nimport { $attributes } from 'property-graph';\nimport { MathUtils } from '../utils/index.js';\nimport type { Camera } from './camera.js';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property.js';\nimport type { Mesh } from './mesh.js';\nimport { COPY_IDENTITY } from './property.js';\nimport type { Skin } from './skin.js';\nimport type { Scene } from './scene.js';\n\ninterface INode extends IExtensibleProperty {\n\ttranslation: vec3;\n\trotation: vec4;\n\tscale: vec3;\n\tweights: number[];\n\tcamera: Camera;\n\tmesh: Mesh;\n\tskin: Skin;\n\tchildren: Node[];\n}\n\n/**\n * *Nodes are the objects that comprise a {@link Scene}.*\n *\n * Each Node may have one or more children, and a transform (position, rotation, and scale) that\n * applies to all of its descendants. A Node may also reference (or \"instantiate\") other resources\n * at its location, including {@link Mesh}, Camera, Light, and Skin properties. A Node cannot be\n * part of more than one {@link Scene}.\n *\n * A Node's local transform is represented with array-like objects, intended to be compatible with\n * [gl-matrix](https://github.com/toji/gl-matrix), or with the `toArray`/`fromArray` methods of\n * libraries like three.js and babylon.js.\n *\n * Usage:\n *\n * ```ts\n * const node = doc.createNode('myNode')\n * \t.setMesh(mesh)\n * \t.setTranslation([0, 0, 0])\n * \t.addChild(otherNode);\n * ```\n *\n * References:\n * - [glTF → Nodes and Hierarchy](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#nodes-and-hierarchy)\n *\n * @category Properties\n */\nexport class Node extends ExtensibleProperty<INode> {\n\tpublic declare propertyType: PropertyType.NODE;\n\n\t/**\n\t * Internal reference to <=1 parent Nodes, omitted from {@link Graph}.\n\t * @internal\n\t * @privateRemarks Requires non-graph state.\n\t */\n\tpublic _parentNode: Node | null = null;\n\t/**\n\t * Internal reference to N parent scenes, omitted from {@link Graph}.\n\t * @internal\n\t * @privateRemarks Requires non-graph state.\n\t */\n\tpublic _parentScenes = new Set<Scene>();\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.NODE;\n\t}\n\n\tprotected getDefaults(): Nullable<INode> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\ttranslation: [0, 0, 0] as vec3,\n\t\t\trotation: [0, 0, 0, 1] as vec4,\n\t\t\tscale: [1, 1, 1] as vec3,\n\t\t\tweights: [],\n\t\t\tcamera: null,\n\t\t\tmesh: null,\n\t\t\tskin: null,\n\t\t\tchildren: [],\n\t\t});\n\t}\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\t// Node cannot be copied, only cloned. Copying is shallow, but Nodes cannot have more than\n\t\t// one parent. Rather than leaving one of the two Nodes without children, throw an error here.\n\t\tif (resolve === COPY_IDENTITY) throw new Error('Node cannot be copied.');\n\t\treturn super.copy(other, resolve);\n\t}\n\n\t/**********************************************************************************************\n\t * Local transform.\n\t */\n\n\t/** Returns the translation (position) of this Node in local space. */\n\tpublic getTranslation(): vec3 {\n\t\treturn this.get('translation');\n\t}\n\n\t/** Returns the rotation (quaternion) of this Node in local space. */\n\tpublic getRotation(): vec4 {\n\t\treturn this.get('rotation');\n\t}\n\n\t/** Returns the scale of this Node in local space. */\n\tpublic getScale(): vec3 {\n\t\treturn this.get('scale');\n\t}\n\n\t/** Sets the translation (position) of this Node in local space. */\n\tpublic setTranslation(translation: vec3): this {\n\t\treturn this.set('translation', translation);\n\t}\n\n\t/** Sets the rotation (quaternion) of this Node in local space. */\n\tpublic setRotation(rotation: vec4): this {\n\t\treturn this.set('rotation', rotation);\n\t}\n\n\t/** Sets the scale of this Node in local space. */\n\tpublic setScale(scale: vec3): this {\n\t\treturn this.set('scale', scale);\n\t}\n\n\t/** Returns the local matrix of this Node. */\n\tpublic getMatrix(): mat4 {\n\t\treturn MathUtils.compose(\n\t\t\tthis.get('translation'),\n\t\t\tthis.get('rotation'),\n\t\t\tthis.get('scale'),\n\t\t\t[] as unknown as mat4,\n\t\t);\n\t}\n\n\t/** Sets the local matrix of this Node. Matrix will be decomposed to TRS properties. */\n\tpublic setMatrix(matrix: mat4): this {\n\t\tconst translation = this.get('translation').slice() as vec3;\n\t\tconst rotation = this.get('rotation').slice() as vec4;\n\t\tconst scale = this.get('scale').slice() as vec3;\n\t\tMathUtils.decompose(matrix, translation, rotation, scale);\n\t\treturn this.set('translation', translation).set('rotation', rotation).set('scale', scale);\n\t}\n\n\t/**********************************************************************************************\n\t * World transform.\n\t */\n\n\t/** Returns the translation (position) of this Node in world space. */\n\tpublic getWorldTranslation(): vec3 {\n\t\tconst t = [0, 0, 0] as vec3;\n\t\tMathUtils.decompose(this.getWorldMatrix(), t, [0, 0, 0, 1], [1, 1, 1]);\n\t\treturn t;\n\t}\n\n\t/** Returns the rotation (quaternion) of this Node in world space. */\n\tpublic getWorldRotation(): vec4 {\n\t\tconst r = [0, 0, 0, 1] as vec4;\n\t\tMathUtils.decompose(this.getWorldMatrix(), [0, 0, 0], r, [1, 1, 1]);\n\t\treturn r;\n\t}\n\n\t/** Returns the scale of this Node in world space. */\n\tpublic getWorldScale(): vec3 {\n\t\tconst s = [1, 1, 1] as vec3;\n\t\tMathUtils.decompose(this.getWorldMatrix(), [0, 0, 0], [0, 0, 0, 1], s);\n\t\treturn s;\n\t}\n\n\t/** Returns the world matrix of this Node. */\n\tpublic getWorldMatrix(): mat4 {\n\t\t// Build ancestor chain.\n\t\tconst ancestors: Node[] = [];\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tfor (let node: Node | null = this; node != null; node = node._parentNode) {\n\t\t\tancestors.push(node);\n\t\t}\n\n\t\t// Compute world matrix.\n\t\tlet ancestor: Node | undefined;\n\t\tconst worldMatrix = ancestors.pop()!.getMatrix();\n\t\twhile ((ancestor = ancestors.pop())) {\n\t\t\tmultiply(worldMatrix, worldMatrix, ancestor.getMatrix());\n\t\t}\n\n\t\treturn worldMatrix;\n\t}\n\n\t/**********************************************************************************************\n\t * Scene hierarchy.\n\t */\n\n\t/**\n\t * Adds the given Node as a child of this Node.\n\t *\n\t * Requirements:\n\t *\n\t * 1. Nodes MAY be root children of multiple {@link Scene Scenes}\n\t * 2. Nodes MUST NOT be children of >1 Node\n\t * 3. Nodes MUST NOT be children of both Nodes and {@link Scene Scenes}\n\t *\n\t * The `addChild` method enforces these restrictions automatically, and will\n\t * remove the new child from previous parents where needed. This behavior\n\t * may change in future major releases of the library.\n\t *\n\t * @privateRemarks Requires non-graph state.\n\t */\n\tpublic addChild(child: Node): this {\n\t\t// Remove existing parents.\n\t\tif (child._parentNode) child._parentNode.removeChild(child);\n\t\tif (child._parentScenes.size) {\n\t\t\tfor (const scene of child._parentScenes) {\n\t\t\t\tscene.removeChild(child);\n\t\t\t}\n\t\t}\n\n\t\t// Edge in graph.\n\t\tthis.addRef('children', child);\n\n\t\t// Set new parent.\n\t\t// TODO(cleanup): Avoid reaching into $attributes.\n\t\tchild._parentNode = this;\n\t\tconst childrenRefs = this[$attributes]['children'];\n\t\tconst ref = childrenRefs[childrenRefs.length - 1];\n\t\tref.addEventListener('dispose', () => (child._parentNode = null));\n\t\treturn this;\n\t}\n\n\t/** Removes a Node from this Node's child Node list. */\n\tpublic removeChild(child: Node): this {\n\t\treturn this.removeRef('children', child);\n\t}\n\n\t/** Lists all child Nodes of this Node. */\n\tpublic listChildren(): Node[] {\n\t\treturn this.listRefs('children');\n\t}\n\n\t/**\n\t * Returns the Node's unique parent Node within the scene graph. If the\n\t * Node has no parents, or is a direct child of the {@link Scene}\n\t * (\"root node\"), this method returns null.\n\t *\n\t * Unrelated to {@link Property.listParents}, which lists all resource\n\t * references from properties of any type ({@link Skin}, {@link Root}, ...).\n\t */\n\tpublic getParentNode(): Node | null {\n\t\treturn this._parentNode;\n\t}\n\n\t/**********************************************************************************************\n\t * Attachments.\n\t */\n\n\t/** Returns the {@link Mesh}, if any, instantiated at this Node. */\n\tpublic getMesh(): Mesh | null {\n\t\treturn this.getRef('mesh');\n\t}\n\n\t/**\n\t * Sets a {@link Mesh} to be instantiated at this Node. A single mesh may be instatiated by\n\t * multiple Nodes; reuse of this sort is strongly encouraged.\n\t */\n\tpublic setMesh(mesh: Mesh | null): this {\n\t\treturn this.setRef('mesh', mesh);\n\t}\n\n\t/** Returns the {@link Camera}, if any, instantiated at this Node. */\n\tpublic getCamera(): Camera | null {\n\t\treturn this.getRef('camera');\n\t}\n\n\t/** Sets a {@link Camera} to be instantiated at this Node. */\n\tpublic setCamera(camera: Camera | null): this {\n\t\treturn this.setRef('camera', camera);\n\t}\n\n\t/** Returns the {@link Skin}, if any, instantiated at this Node. */\n\tpublic getSkin(): Skin | null {\n\t\treturn this.getRef('skin');\n\t}\n\n\t/** Sets a {@link Skin} to be instantiated at this Node. */\n\tpublic setSkin(skin: Skin | null): this {\n\t\treturn this.setRef('skin', skin);\n\t}\n\n\t/**\n\t * Initial weights of each {@link PrimitiveTarget} for the mesh instance at this Node.\n\t * Most engines only support 4-8 active morph targets at a time.\n\t */\n\tpublic getWeights(): number[] {\n\t\treturn this.get('weights');\n\t}\n\n\t/**\n\t * Initial weights of each {@link PrimitiveTarget} for the mesh instance at this Node.\n\t * Most engines only support 4-8 active morph targets at a time.\n\t */\n\tpublic setWeights(weights: number[]): this {\n\t\treturn this.set('weights', weights);\n\t}\n\n\t/**********************************************************************************************\n\t * Helpers.\n\t */\n\n\t/** Visits this {@link Node} and its descendants, top-down. */\n\tpublic traverse(fn: (node: Node) => void): this {\n\t\tfn(this);\n\t\tfor (const child of this.listChildren()) child.traverse(fn);\n\t\treturn this;\n\t}\n}\n","import { BufferViewUsage, Nullable, PropertyType } from '../constants.js';\nimport type { GLTF } from '../types/gltf.js';\nimport type { Accessor } from './accessor.js';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property.js';\nimport type { Material } from './material.js';\nimport type { PrimitiveTarget } from './primitive-target.js';\n\ninterface IPrimitive extends IExtensibleProperty {\n\tmode: GLTF.MeshPrimitiveMode;\n\tmaterial: Material;\n\tindices: Accessor;\n\tattributes: { [key: string]: Accessor };\n\ttargets: PrimitiveTarget[];\n}\n\n/**\n * *Primitives are individual GPU draw calls comprising a {@link Mesh}.*\n *\n * Meshes typically have only a single Primitive, although various cases may require more. Each\n * primitive may be assigned vertex attributes, morph target attributes, and a material. Any of\n * these properties should be reused among multiple primitives where feasible.\n *\n * Primitives cannot be moved independently of other primitives within the same mesh, except\n * through the use of morph targets and skinning. If independent movement or other runtime\n * behavior is necessary (like raycasting or collisions) prefer to assign each primitive to a\n * different mesh. The number of GPU draw calls is typically not affected by grouping or\n * ungrouping primitives to a mesh.\n *\n * Each primitive may optionally be deformed by one or more morph targets, stored in a\n * {@link PrimitiveTarget}.\n *\n * Usage:\n *\n * ```ts\n * const primitive = doc.createPrimitive()\n * \t.setAttribute('POSITION', positionAccessor)\n * \t.setAttribute('TEXCOORD_0', uvAccessor)\n * \t.setMaterial(material);\n * mesh.addPrimitive(primitive);\n * node.setMesh(mesh);\n * ```\n *\n * References:\n * - [glTF → Geometry](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#geometry)\n *\n * @category Properties\n */\nexport class Primitive extends ExtensibleProperty<IPrimitive> {\n\tpublic declare propertyType: PropertyType.PRIMITIVE;\n\n\t/**********************************************************************************************\n\t * Constants.\n\t */\n\n\t/** Type of primitives to render. All valid values correspond to WebGL enums. */\n\tpublic static Mode: Record<string, GLTF.MeshPrimitiveMode> = {\n\t\t/** Draw single points. */\n\t\tPOINTS: 0,\n\t\t/** Draw lines. Each vertex connects to the one after it. */\n\t\tLINES: 1,\n\t\t/**\n\t\t * Draw lines. Each set of two vertices is treated as a separate line segment.\n\t\t * @deprecated See {@link https://github.com/KhronosGroup/glTF/issues/1883 KhronosGroup/glTF#1883}.\n\t\t */\n\t\tLINE_LOOP: 2,\n\t\t/** Draw a connected group of line segments from the first vertex to the last,  */\n\t\tLINE_STRIP: 3,\n\t\t/** Draw triangles. Each set of three vertices creates a separate triangle. */\n\t\tTRIANGLES: 4,\n\t\t/** Draw a connected strip of triangles. */\n\t\tTRIANGLE_STRIP: 5,\n\t\t/**\n\t\t * Draw a connected group of triangles. Each vertex connects to the previous and the first\n\t\t * vertex in the fan.\n\t\t * @deprecated See {@link https://github.com/KhronosGroup/glTF/issues/1883 KhronosGroup/glTF#1883}.\n\t\t */\n\t\tTRIANGLE_FAN: 6,\n\t};\n\n\t/**********************************************************************************************\n\t * Instance.\n\t */\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.PRIMITIVE;\n\t}\n\n\tprotected getDefaults(): Nullable<IPrimitive> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\tmode: Primitive.Mode.TRIANGLES,\n\t\t\tmaterial: null,\n\t\t\tindices: null,\n\t\t\tattributes: {},\n\t\t\ttargets: [],\n\t\t});\n\t}\n\n\t/**********************************************************************************************\n\t * Primitive data.\n\t */\n\n\t/** Returns an {@link Accessor} with indices of vertices to be drawn. */\n\tpublic getIndices(): Accessor | null {\n\t\treturn this.getRef('indices');\n\t}\n\n\t/**\n\t * Sets an {@link Accessor} with indices of vertices to be drawn. In `TRIANGLES` draw mode,\n\t * each set of three indices define a triangle. The front face has a counter-clockwise (CCW)\n\t * winding order.\n\t */\n\tpublic setIndices(indices: Accessor | null): this {\n\t\treturn this.setRef('indices', indices, { usage: BufferViewUsage.ELEMENT_ARRAY_BUFFER });\n\t}\n\n\t/** Returns a vertex attribute as an {@link Accessor}. */\n\tpublic getAttribute(semantic: string): Accessor | null {\n\t\treturn this.getRefMap('attributes', semantic);\n\t}\n\n\t/**\n\t * Sets a vertex attribute to an {@link Accessor}. All attributes must have the same vertex\n\t * count.\n\t */\n\tpublic setAttribute(semantic: string, accessor: Accessor | null): this {\n\t\treturn this.setRefMap('attributes', semantic, accessor, { usage: BufferViewUsage.ARRAY_BUFFER });\n\t}\n\n\t/**\n\t * Lists all vertex attribute {@link Accessor}s associated with the primitive, excluding any\n\t * attributes used for morph targets. For example, `[positionAccessor, normalAccessor,\n\t * uvAccessor]`. Order will be consistent with the order returned by {@link .listSemantics}().\n\t */\n\tpublic listAttributes(): Accessor[] {\n\t\treturn this.listRefMapValues('attributes');\n\t}\n\n\t/**\n\t * Lists all vertex attribute semantics associated with the primitive, excluding any semantics\n\t * used for morph targets. For example, `['POSITION', 'NORMAL', 'TEXCOORD_0']`. Order will be\n\t * consistent with the order returned by {@link .listAttributes}().\n\t */\n\tpublic listSemantics(): string[] {\n\t\treturn this.listRefMapKeys('attributes');\n\t}\n\n\t/** Returns the material used to render the primitive. */\n\tpublic getMaterial(): Material | null {\n\t\treturn this.getRef('material');\n\t}\n\n\t/** Sets the material used to render the primitive. */\n\tpublic setMaterial(material: Material | null): this {\n\t\treturn this.setRef('material', material);\n\t}\n\n\t/**********************************************************************************************\n\t * Mode.\n\t */\n\n\t/**\n\t * Returns the GPU draw mode (`TRIANGLES`, `LINES`, `POINTS`...) as a WebGL enum value.\n\t *\n\t * Reference:\n\t * - [glTF → `primitive.mode`](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#primitivemode)\n\t */\n\tpublic getMode(): GLTF.MeshPrimitiveMode {\n\t\treturn this.get('mode');\n\t}\n\n\t/**\n\t * Sets the GPU draw mode (`TRIANGLES`, `LINES`, `POINTS`...) as a WebGL enum value.\n\t *\n\t * Reference:\n\t * - [glTF → `primitive.mode`](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#primitivemode)\n\t */\n\tpublic setMode(mode: GLTF.MeshPrimitiveMode): this {\n\t\treturn this.set('mode', mode);\n\t}\n\n\t/**********************************************************************************************\n\t * Morph targets.\n\t */\n\n\t/** Lists all morph targets associated with the primitive. */\n\tpublic listTargets(): PrimitiveTarget[] {\n\t\treturn this.listRefs('targets');\n\t}\n\n\t/**\n\t * Adds a morph target to the primitive. All primitives in the same mesh must have the same\n\t * number of targets.\n\t */\n\tpublic addTarget(target: PrimitiveTarget): this {\n\t\treturn this.addRef('targets', target);\n\t}\n\n\t/**\n\t * Removes a morph target from the primitive. All primitives in the same mesh must have the same\n\t * number of targets.\n\t */\n\tpublic removeTarget(target: PrimitiveTarget): this {\n\t\treturn this.removeRef('targets', target);\n\t}\n}\n","import { BufferViewUsage, Nullable, PropertyType } from '../constants.js';\nimport type { Accessor } from './accessor.js';\nimport type { IExtensibleProperty } from './extensible-property.js';\nimport { Property } from './property.js';\n\ninterface IPrimitiveTarget extends IExtensibleProperty {\n\tattributes: { [key: string]: Accessor };\n}\n\n/**\n * *Morph target or shape key used to deform one {@link Primitive} in a {@link Mesh}.*\n *\n * A PrimitiveTarget contains a `POSITION` attribute (and optionally `NORMAL` and `TANGENT`) that\n * can additively deform the base attributes on a {@link Mesh} {@link Primitive}. Vertex values\n * of `0, 0, 0` in the target will have no effect, whereas a value of `0, 1, 0` would offset that\n * vertex in the base geometry by y+=1. Morph targets can be fully or partially applied: their\n * default state is controlled by {@link Mesh.getWeights}, which can also be overridden for a\n * particular instantiation of a {@link Mesh}, using {@link Node.getWeights}.\n *\n * Reference:\n * - [glTF → Morph Targets](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#morph-targets)\n *\n * @category Properties\n */\nexport class PrimitiveTarget extends Property<IPrimitiveTarget> {\n\tpublic declare propertyType: PropertyType.PRIMITIVE_TARGET;\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.PRIMITIVE_TARGET;\n\t}\n\n\tprotected getDefaults(): Nullable<IPrimitiveTarget> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, { attributes: {} });\n\t}\n\n\t/** Returns a morph target vertex attribute as an {@link Accessor}. */\n\tpublic getAttribute(semantic: string): Accessor | null {\n\t\treturn this.getRefMap('attributes', semantic);\n\t}\n\n\t/**\n\t * Sets a morph target vertex attribute to an {@link Accessor}.\n\t */\n\tpublic setAttribute(semantic: string, accessor: Accessor | null): this {\n\t\treturn this.setRefMap('attributes', semantic, accessor, { usage: BufferViewUsage.ARRAY_BUFFER });\n\t}\n\n\t/**\n\t * Lists all morph target vertex attribute {@link Accessor}s associated. Order will be\n\t * consistent with the order returned by {@link .listSemantics}().\n\t */\n\tpublic listAttributes(): Accessor[] {\n\t\treturn this.listRefMapValues('attributes');\n\t}\n\n\t/**\n\t * Lists all morph target vertex attribute semantics associated. Order will be\n\t * consistent with the order returned by {@link .listAttributes}().\n\t */\n\tpublic listSemantics(): string[] {\n\t\treturn this.listRefMapKeys('attributes');\n\t}\n}\n","import { $attributes } from 'property-graph';\nimport { Nullable, PropertyType } from '../constants.js';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property.js';\nimport type { Node } from './node.js';\nimport { COPY_IDENTITY } from './property.js';\n\ninterface IScene extends IExtensibleProperty {\n\tchildren: Node[];\n}\n\n/**\n * *Scenes represent a set of visual objects to render.*\n *\n * Typically a glTF file contains only a single Scene, although more are allowed and useful in some\n * cases. No particular meaning is associated with additional Scenes, except as defined by the\n * application. Scenes reference {@link Node}s, and a single Node cannot be a member of more than\n * one Scene.\n *\n * References:\n * - [glTF → Scenes](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#scenes)\n * - [glTF → Coordinate System and Units](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#coordinate-system-and-units)\n *\n * @category Properties\n */\nexport class Scene extends ExtensibleProperty<IScene> {\n\tpublic declare propertyType: PropertyType.SCENE;\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.SCENE;\n\t}\n\n\tprotected getDefaults(): Nullable<IScene> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, { children: [] });\n\t}\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\t// Scene cannot be copied, only cloned. Copying is shallow, but nodes cannot have more than\n\t\t// one parent. Rather than leaving one of the two Scenes without children, throw an error here.\n\t\tif (resolve === COPY_IDENTITY) throw new Error('Scene cannot be copied.');\n\t\treturn super.copy(other, resolve);\n\t}\n\n\t/**\n\t * Adds a {@link Node} to the Scene.\n\t *\n\t * Requirements:\n\t *\n\t * 1. Nodes MAY be root children of multiple {@link Scene Scenes}\n\t * 2. Nodes MUST NOT be children of >1 Node\n\t * 3. Nodes MUST NOT be children of both Nodes and {@link Scene Scenes}\n\t *\n\t * The `addChild` method enforces these restrictions automatically, and will\n\t * remove the new child from previous parents where needed. This behavior\n\t * may change in future major releases of the library.\n\t *\n\t * @privateRemarks Requires non-graph state.\n\t */\n\tpublic addChild(node: Node): this {\n\t\t// Remove existing parent.\n\t\tif (node._parentNode) node._parentNode.removeChild(node);\n\n\t\t// Edge in graph.\n\t\tthis.addRef('children', node);\n\n\t\t// Set new parent.\n\t\t// TODO(cleanup): Avoid reaching into $attributes.\n\t\tnode._parentScenes.add(this);\n\t\tconst childrenRefs = this[$attributes]['children'];\n\t\tconst ref = childrenRefs[childrenRefs.length - 1];\n\t\tref.addEventListener('dispose', () => node._parentScenes.delete(this));\n\t\treturn this;\n\t}\n\n\t/** Removes a {@link Node} from the Scene. */\n\tpublic removeChild(node: Node): this {\n\t\treturn this.removeRef('children', node);\n\t}\n\n\t/**\n\t * Lists all direct child {@link Node Nodes} in the Scene. Indirect\n\t * descendants (children of children) are not returned, but may be\n\t * reached recursively or with {@link Scene.traverse} instead.\n\t */\n\tpublic listChildren(): Node[] {\n\t\treturn this.listRefs('children');\n\t}\n\n\t/** Visits each {@link Node} in the Scene, including descendants, top-down. */\n\tpublic traverse(fn: (node: Node) => void): this {\n\t\tfor (const node of this.listChildren()) node.traverse(fn);\n\t\treturn this;\n\t}\n}\n","import { BufferViewUsage, Nullable, PropertyType } from '../constants.js';\nimport type { Accessor } from './accessor.js';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property.js';\nimport type { Node } from './node.js';\n\ninterface ISkin extends IExtensibleProperty {\n\tskeleton: Node;\n\tinverseBindMatrices: Accessor;\n\tjoints: Node[];\n}\n\n/**\n * *Collection of {@link Node} joints and inverse bind matrices used with skinned {@link Mesh}\n * instances.*\n *\n * Reference\n * - [glTF → Skins](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#skins)\n *\n * @category Properties\n */\nexport class Skin extends ExtensibleProperty<ISkin> {\n\tpublic declare propertyType: PropertyType.SKIN;\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.SKIN;\n\t}\n\n\tprotected getDefaults(): Nullable<ISkin> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\tskeleton: null,\n\t\t\tinverseBindMatrices: null,\n\t\t\tjoints: [],\n\t\t});\n\t}\n\n\t/**\n\t * {@link Node} used as a skeleton root. The node must be the closest common root of the joints\n\t * hierarchy or a direct or indirect parent node of the closest common root.\n\t */\n\tpublic getSkeleton(): Node | null {\n\t\treturn this.getRef('skeleton');\n\t}\n\n\t/**\n\t * {@link Node} used as a skeleton root. The node must be the closest common root of the joints\n\t * hierarchy or a direct or indirect parent node of the closest common root.\n\t */\n\tpublic setSkeleton(skeleton: Node | null): this {\n\t\treturn this.setRef('skeleton', skeleton);\n\t}\n\n\t/**\n\t * {@link Accessor} containing the floating-point 4x4 inverse-bind matrices. The default is\n\t * that each matrix is a 4x4 identity matrix, which implies that inverse-bind matrices were\n\t * pre-applied.\n\t */\n\tpublic getInverseBindMatrices(): Accessor | null {\n\t\treturn this.getRef('inverseBindMatrices');\n\t}\n\n\t/**\n\t * {@link Accessor} containing the floating-point 4x4 inverse-bind matrices. The default is\n\t * that each matrix is a 4x4 identity matrix, which implies that inverse-bind matrices were\n\t * pre-applied.\n\t */\n\tpublic setInverseBindMatrices(inverseBindMatrices: Accessor | null): this {\n\t\treturn this.setRef('inverseBindMatrices', inverseBindMatrices, {\n\t\t\tusage: BufferViewUsage.INVERSE_BIND_MATRICES,\n\t\t});\n\t}\n\n\t/** Adds a joint {@link Node} to this {@link Skin}. */\n\tpublic addJoint(joint: Node): this {\n\t\treturn this.addRef('joints', joint);\n\t}\n\n\t/** Removes a joint {@link Node} from this {@link Skin}. */\n\tpublic removeJoint(joint: Node): this {\n\t\treturn this.removeRef('joints', joint);\n\t}\n\n\t/** Lists joints ({@link Node}s used as joints or bones) in this {@link Skin}. */\n\tpublic listJoints(): Node[] {\n\t\treturn this.listRefs('joints');\n\t}\n}\n","import { Nullable, PropertyType, vec2 } from '../constants.js';\nimport { BufferUtils, FileUtils, ImageUtils } from '../utils/index.js';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property.js';\n\ninterface ITexture extends IExtensibleProperty {\n\timage: Uint8Array | null;\n\tmimeType: string;\n\turi: string;\n}\n\n/**\n * *Texture, or images, referenced by {@link Material} properties.*\n *\n * Textures in glTF Transform are a combination of glTF's `texture` and `image` properties, and\n * should be unique within a document, such that no other texture contains the same\n * {@link Texture.getImage getImage()} data. Where duplicates may already exist, the `dedup({textures: true})`\n * transform can remove them. A {@link Document} with N texture properties will be exported to a\n * glTF file with N `image` properties, and the minimum number of `texture` properties necessary\n * for the materials that use it.\n *\n * For properties associated with a particular _use_ of a texture, see {@link TextureInfo}.\n *\n * Reference:\n * - [glTF → Textures](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#textures)\n * - [glTF → Images](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#images)\n *\n * @category Properties\n */\nexport class Texture extends ExtensibleProperty<ITexture> {\n\tpublic declare propertyType: PropertyType.TEXTURE;\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.TEXTURE;\n\t}\n\n\tprotected getDefaults(): Nullable<ITexture> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, { image: null, mimeType: '', uri: '' });\n\t}\n\n\t/**********************************************************************************************\n\t * MIME type / format.\n\t */\n\n\t/** Returns the MIME type for this texture ('image/jpeg' or 'image/png'). */\n\tpublic getMimeType(): string {\n\t\treturn this.get('mimeType') || ImageUtils.extensionToMimeType(FileUtils.extension(this.get('uri')));\n\t}\n\n\t/**\n\t * Sets the MIME type for this texture ('image/jpeg' or 'image/png'). If the texture does not\n\t * have a URI, a MIME type is required for correct export.\n\t */\n\tpublic setMimeType(mimeType: string): this {\n\t\treturn this.set('mimeType', mimeType);\n\t}\n\n\t/**********************************************************************************************\n\t * URI / filename.\n\t */\n\n\t/** Returns the URI (e.g. 'path/to/file.png') for this texture. */\n\tpublic getURI(): string {\n\t\treturn this.get('uri');\n\t}\n\n\t/**\n\t * Sets the URI (e.g. 'path/to/file.png') for this texture. If the texture does not have a MIME\n\t * type, a URI is required for correct export.\n\t */\n\tpublic setURI(uri: string): this {\n\t\tthis.set('uri', uri);\n\t\tconst mimeType = ImageUtils.extensionToMimeType(FileUtils.extension(uri));\n\t\tif (mimeType) this.set('mimeType', mimeType);\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Image data.\n\t */\n\n\t/** Returns the raw image data for this texture. */\n\tpublic getImage(): Uint8Array | null {\n\t\treturn this.get('image');\n\t}\n\n\t/** Sets the raw image data for this texture. */\n\tpublic setImage(image: Uint8Array): this {\n\t\treturn this.set('image', BufferUtils.assertView(image));\n\t}\n\n\t/** Returns the size, in pixels, of this texture. */\n\tpublic getSize(): vec2 | null {\n\t\tconst image = this.get('image');\n\t\tif (!image) return null;\n\t\treturn ImageUtils.getSize(image, this.getMimeType());\n\t}\n}\n","import { Nullable, PropertyType, VERSION } from '../constants.js';\nimport type { Extension } from '../extension.js';\nimport type { Graph } from 'property-graph';\nimport { Accessor } from './accessor.js';\nimport { Animation } from './animation.js';\nimport { Buffer } from './buffer.js';\nimport { Camera } from './camera.js';\nimport { Material } from './material.js';\nimport { Mesh } from './mesh.js';\nimport { Node } from './node.js';\nimport { COPY_IDENTITY, Property } from './property.js';\nimport { Scene } from './scene.js';\nimport { Skin } from './skin.js';\nimport { Texture } from './texture.js';\nimport { ExtensibleProperty, IExtensibleProperty } from './extensible-property.js';\nimport type { ExtensionProperty } from './extension-property.js';\n\ninterface IAsset {\n\tversion: string;\n\tminVersion?: string;\n\tgenerator?: string;\n\tcopyright?: string;\n\t[key: string]: unknown;\n}\n\ninterface IRoot extends IExtensibleProperty {\n\tasset: IAsset;\n\tdefaultScene: Scene;\n\n\taccessors: Accessor[];\n\tanimations: Animation[];\n\tbuffers: Buffer[];\n\tcameras: Camera[];\n\tmaterials: Material[];\n\tmeshes: Mesh[];\n\tnodes: Node[];\n\tscenes: Scene[];\n\tskins: Skin[];\n\ttextures: Texture[];\n}\n\n/**\n * *Root property of a glTF asset.*\n *\n * Any properties to be exported with a particular asset must be referenced (directly or\n * indirectly) by the root. Metadata about the asset's license, generator, and glTF specification\n * version are stored in the asset, accessible with {@link Root.getAsset}.\n *\n * Properties are added to the root with factory methods on its {@link Document}, and removed by\n * calling {@link Property.dispose}() on the resource. Any properties that have been created but\n * not disposed will be included when calling the various `root.list*()` methods.\n *\n * A document's root cannot be removed, and no other root may be created. Unlike other\n * {@link Property} types, the `.dispose()`, `.detach()` methods have no useful function on a\n * Root property.\n *\n * Usage:\n *\n * ```ts\n * const root = document.getRoot();\n * const scene = document.createScene('myScene');\n * const node = document.createNode('myNode');\n * scene.addChild(node);\n *\n * console.log(root.listScenes()); // → [scene x 1]\n * ```\n *\n * Reference: [glTF → Concepts](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#concepts)\n *\n * @category Properties\n */\nexport class Root extends ExtensibleProperty<IRoot> {\n\tpublic declare propertyType: PropertyType.ROOT;\n\n\tprivate readonly _extensions: Set<Extension> = new Set();\n\n\tprotected init(): void {\n\t\tthis.propertyType = PropertyType.ROOT;\n\t}\n\n\tprotected getDefaults(): Nullable<IRoot> {\n\t\treturn Object.assign(super.getDefaults() as IExtensibleProperty, {\n\t\t\tasset: {\n\t\t\t\tgenerator: `glTF-Transform ${VERSION}`,\n\t\t\t\tversion: '2.0',\n\t\t\t},\n\t\t\tdefaultScene: null,\n\t\t\taccessors: [],\n\t\t\tanimations: [],\n\t\t\tbuffers: [],\n\t\t\tcameras: [],\n\t\t\tmaterials: [],\n\t\t\tmeshes: [],\n\t\t\tnodes: [],\n\t\t\tscenes: [],\n\t\t\tskins: [],\n\t\t\ttextures: [],\n\t\t});\n\t}\n\n\t/** @internal */\n\tconstructor(graph: Graph<Property>) {\n\t\tsuper(graph);\n\t\tgraph.addEventListener('node:create', (event) => {\n\t\t\tthis._addChildOfRoot(event.target as Property);\n\t\t});\n\t}\n\n\tpublic clone(): this {\n\t\tthrow new Error('Root cannot be cloned.');\n\t}\n\n\tpublic copy(other: this, resolve = COPY_IDENTITY): this {\n\t\t// Root cannot be cloned in isolation: only with its Document. Extensions are managed by\n\t\t// the Document during cloning. The Root, and only the Root, should keep existing\n\t\t// references while copying to avoid overwriting during a merge.\n\t\tif (resolve === COPY_IDENTITY) throw new Error('Root cannot be copied.');\n\n\t\t// IMPORTANT: Root cannot call super.copy(), which removes existing references.\n\n\t\tthis.set('asset', { ...other.get('asset') });\n\t\tthis.setName(other.getName());\n\t\tthis.setExtras({ ...other.getExtras() });\n\t\tthis.setDefaultScene(other.getDefaultScene() ? resolve(other.getDefaultScene()!) : null);\n\n\t\tfor (const extensionName of other.listRefMapKeys('extensions')) {\n\t\t\tconst otherExtension = other.getExtension(extensionName) as ExtensionProperty;\n\t\t\tthis.setExtension(extensionName, resolve(otherExtension));\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprivate _addChildOfRoot(child: Property): this {\n\t\tif (child instanceof Scene) {\n\t\t\tthis.addRef('scenes', child);\n\t\t} else if (child instanceof Node) {\n\t\t\tthis.addRef('nodes', child);\n\t\t} else if (child instanceof Camera) {\n\t\t\tthis.addRef('cameras', child);\n\t\t} else if (child instanceof Skin) {\n\t\t\tthis.addRef('skins', child);\n\t\t} else if (child instanceof Mesh) {\n\t\t\tthis.addRef('meshes', child);\n\t\t} else if (child instanceof Material) {\n\t\t\tthis.addRef('materials', child);\n\t\t} else if (child instanceof Texture) {\n\t\t\tthis.addRef('textures', child);\n\t\t} else if (child instanceof Animation) {\n\t\t\tthis.addRef('animations', child);\n\t\t} else if (child instanceof Accessor) {\n\t\t\tthis.addRef('accessors', child);\n\t\t} else if (child instanceof Buffer) {\n\t\t\tthis.addRef('buffers', child);\n\t\t}\n\t\t// No error for untracked property types.\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the `asset` object, which specifies the target glTF version of the asset. Additional\n\t * metadata can be stored in optional properties such as `generator` or `copyright`.\n\t *\n\t * Reference: [glTF → Asset](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#asset)\n\t */\n\tpublic getAsset(): IAsset {\n\t\treturn this.get('asset');\n\t}\n\n\t/**********************************************************************************************\n\t * Extensions.\n\t */\n\n\t/** Lists all {@link Extension Extensions} enabled for this root. */\n\tpublic listExtensionsUsed(): Extension[] {\n\t\treturn Array.from(this._extensions);\n\t}\n\n\t/** Lists all {@link Extension Extensions} enabled and required for this root. */\n\tpublic listExtensionsRequired(): Extension[] {\n\t\treturn this.listExtensionsUsed().filter((extension) => extension.isRequired());\n\t}\n\n\t/** @internal */\n\tpublic _enableExtension(extension: Extension): this {\n\t\tthis._extensions.add(extension);\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tpublic _disableExtension(extension: Extension): this {\n\t\tthis._extensions.delete(extension);\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Properties.\n\t */\n\n\t/** Lists all {@link Scene} properties associated with this root. */\n\tpublic listScenes(): Scene[] {\n\t\treturn this.listRefs('scenes');\n\t}\n\n\t/** Default {@link Scene} associated with this root. */\n\tpublic setDefaultScene(defaultScene: Scene | null): this {\n\t\treturn this.setRef('defaultScene', defaultScene);\n\t}\n\n\t/** Default {@link Scene} associated with this root. */\n\tpublic getDefaultScene(): Scene | null {\n\t\treturn this.getRef('defaultScene');\n\t}\n\n\t/** Lists all {@link Node} properties associated with this root. */\n\tpublic listNodes(): Node[] {\n\t\treturn this.listRefs('nodes');\n\t}\n\n\t/** Lists all {@link Camera} properties associated with this root. */\n\tpublic listCameras(): Camera[] {\n\t\treturn this.listRefs('cameras');\n\t}\n\n\t/** Lists all {@link Skin} properties associated with this root. */\n\tpublic listSkins(): Skin[] {\n\t\treturn this.listRefs('skins');\n\t}\n\n\t/** Lists all {@link Mesh} properties associated with this root. */\n\tpublic listMeshes(): Mesh[] {\n\t\treturn this.listRefs('meshes');\n\t}\n\n\t/** Lists all {@link Material} properties associated with this root. */\n\tpublic listMaterials(): Material[] {\n\t\treturn this.listRefs('materials');\n\t}\n\n\t/** Lists all {@link Texture} properties associated with this root. */\n\tpublic listTextures(): Texture[] {\n\t\treturn this.listRefs('textures');\n\t}\n\n\t/** Lists all {@link Animation} properties associated with this root. */\n\tpublic listAnimations(): Animation[] {\n\t\treturn this.listRefs('animations');\n\t}\n\n\t/** Lists all {@link Accessor} properties associated with this root. */\n\tpublic listAccessors(): Accessor[] {\n\t\treturn this.listRefs('accessors');\n\t}\n\n\t/** Lists all {@link Buffer} properties associated with this root. */\n\tpublic listBuffers(): Buffer[] {\n\t\treturn this.listRefs('buffers');\n\t}\n}\n","import { PropertyType } from './constants.js';\nimport type { Extension } from './extension.js';\nimport { Graph } from 'property-graph';\nimport {\n\tAccessor,\n\tAnimation,\n\tAnimationChannel,\n\tAnimationSampler,\n\tBuffer,\n\tCamera,\n\tMaterial,\n\tMesh,\n\tNode,\n\tPrimitive,\n\tPrimitiveTarget,\n\tProperty,\n\tRoot,\n\tScene,\n\tSkin,\n\tTexture,\n} from './properties/index.js';\nimport { ILogger, Logger } from './utils/index.js';\n\nexport interface TransformContext {\n\tstack: string[];\n}\n\nexport type Transform = (doc: Document, context?: TransformContext) => void;\n\n/**\n * *Wraps a glTF asset and its resources for easier modification.*\n *\n * Documents manage glTF assets and the relationships among dependencies. The document wrapper\n * allow tools to read and write changes without dealing with array indices or byte offsets, which\n * would otherwise require careful management over the course of a file modification. An internal\n * graph structure allows any property in the glTF file to maintain references to its dependencies,\n * and makes it easy to determine where a particular property dependency is being used. For\n * example, finding a list of materials that use a particular texture is as simple as calling\n * {@link Texture.listParents}().\n *\n * A new resource {@link Property} (e.g. a {@link Mesh} or {@link Material}) is created by calling\n * 'create' methods on the document. Resources are destroyed by calling {@link Property.dispose}().\n *\n * ```ts\n * import fs from 'fs/promises';\n * import { Document } from '@gltf-transform/core';\n * import { dedup } from '@gltf-transform/functions';\n *\n * const document = new Document();\n *\n * const texture1 = document.createTexture('myTexture')\n * \t.setImage(await fs.readFile('path/to/image.png'))\n * \t.setMimeType('image/png');\n * const texture2 = document.createTexture('myTexture2')\n * \t.setImage(await fs.readFile('path/to/image2.png'))\n * \t.setMimeType('image/png');\n *\n * // Document containing duplicate copies of the same texture.\n * document.getRoot().listTextures(); // → [texture x 2]\n *\n * await document.transform(\n * \tdedup({textures: true}),\n * \t// ...\n * );\n *\n * // Document with duplicate textures removed.\n * document.getRoot().listTextures(); // → [texture x 1]\n * ```\n *\n * Reference:\n * - [glTF → Basics](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#gltf-basics)\n * - [glTF → Concepts](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#concepts)\n *\n * @category Documents\n */\nexport class Document {\n\tprivate _graph: Graph<Property> = new Graph<Property>();\n\tprivate _root: Root = new Root(this._graph);\n\tprivate _logger: ILogger = Logger.DEFAULT_INSTANCE;\n\n\t/**\n\t * Enables lookup of a Document from its Graph. For internal use, only.\n\t * @internal\n\t * @experimental\n\t */\n\tprivate static _GRAPH_DOCUMENTS = new WeakMap<Graph<Property>, Document>();\n\n\t/**\n\t * Returns the Document associated with a given Graph, if any.\n\t * @hidden\n\t * @experimental\n\t */\n\tpublic static fromGraph(graph: Graph<Property>): Document | null {\n\t\treturn Document._GRAPH_DOCUMENTS.get(graph) || null;\n\t}\n\n\t/** Creates a new Document, representing an empty glTF asset. */\n\tpublic constructor() {\n\t\tDocument._GRAPH_DOCUMENTS.set(this._graph, this);\n\t}\n\n\t/** Returns the glTF {@link Root} property. */\n\tpublic getRoot(): Root {\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Returns the {@link Graph} representing connectivity of resources within this document.\n\t * @hidden\n\t */\n\tpublic getGraph(): Graph<Property> {\n\t\treturn this._graph;\n\t}\n\n\t/** Returns the {@link Logger} instance used for any operations performed on this document. */\n\tpublic getLogger(): ILogger {\n\t\treturn this._logger;\n\t}\n\n\t/**\n\t * Overrides the {@link Logger} instance used for any operations performed on this document.\n\t *\n\t * Usage:\n\t *\n\t * ```ts\n\t * doc\n\t * \t.setLogger(new Logger(Logger.Verbosity.SILENT))\n\t * \t.transform(dedup(), weld());\n\t * ```\n\t */\n\tpublic setLogger(logger: ILogger): Document {\n\t\tthis._logger = logger;\n\t\treturn this;\n\t}\n\n\t/** Clones this Document, copying all resources within it. */\n\tpublic clone(): Document {\n\t\treturn new Document().setLogger(this._logger).merge(this);\n\t}\n\n\t/** Merges the content of another Document into this one, without affecting the original. */\n\tpublic merge(other: Document): this {\n\t\t// 1. Attach extensions.\n\t\tconst thisExtensions: { [key: string]: Extension } = {};\n\t\tfor (const otherExtension of other.getRoot().listExtensionsUsed()) {\n\t\t\tconst thisExtension = this.createExtension(otherExtension.constructor as new (doc: Document) => Extension);\n\t\t\tif (otherExtension.isRequired()) thisExtension.setRequired(true);\n\t\t\tthisExtensions[thisExtension.extensionName] = thisExtension;\n\t\t}\n\n\t\t// 2. Preconfigure the Root and merge history.\n\t\tconst visited = new Set<Property>();\n\t\tconst propertyMap = new Map<Property, Property>();\n\t\tvisited.add(other._root);\n\t\tpropertyMap.set(other._root, this._root);\n\n\t\t// 3. Create stub classes for every Property in other Document.\n\t\tfor (const edge of other._graph.listEdges()) {\n\t\t\tfor (const otherProp of [edge.getParent() as Property, edge.getChild() as Property]) {\n\t\t\t\tif (visited.has(otherProp)) continue;\n\n\t\t\t\tlet thisProp: Property;\n\t\t\t\tif (otherProp.propertyType === PropertyType.TEXTURE_INFO) {\n\t\t\t\t\t// TextureInfo lifecycle is bound to a Material or ExtensionProperty.\n\t\t\t\t\tthisProp = otherProp as Property;\n\t\t\t\t} else {\n\t\t\t\t\t// For other property types, create stub classes.\n\t\t\t\t\tconst PropertyClass = otherProp.constructor as new (g: Graph<Property>) => Property;\n\t\t\t\t\tthisProp = new PropertyClass(this._graph);\n\t\t\t\t}\n\n\t\t\t\tpropertyMap.set(otherProp as Property, thisProp);\n\t\t\t\tvisited.add(otherProp);\n\t\t\t}\n\t\t}\n\n\t\t// 4. Assemble the edges between Properties.\n\t\tconst resolve = (p: Property): Property => {\n\t\t\tconst resolved = propertyMap.get(p);\n\t\t\tif (!resolved) throw new Error('Could resolve property.');\n\t\t\treturn resolved;\n\t\t};\n\t\tfor (const otherProp of visited) {\n\t\t\tconst thisProp = propertyMap.get(otherProp);\n\t\t\tif (!thisProp) throw new Error('Could resolve property.');\n\t\t\t// TextureInfo copy handled by Material or ExtensionProperty.\n\t\t\tif (thisProp.propertyType !== PropertyType.TEXTURE_INFO) {\n\t\t\t\tthisProp.copy(otherProp, resolve);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Applies a series of modifications to this document. Each transformation is asynchronous,\n\t * takes the {@link Document} as input, and returns nothing. Transforms are applied in the\n\t * order given, which may affect the final result.\n\t *\n\t * Usage:\n\t *\n\t * ```ts\n\t * await doc.transform(\n\t * \tdedup(),\n\t * \tprune()\n\t * );\n\t * ```\n\t *\n\t * @param transforms List of synchronous transformation functions to apply.\n\t */\n\tpublic async transform(...transforms: Transform[]): Promise<this> {\n\t\tconst stack = transforms.map((fn) => fn.name);\n\t\tfor (const transform of transforms) {\n\t\t\tawait transform(this, { stack });\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Extension factory method.\n\t */\n\n\t/**\n\t * Creates a new {@link Extension}, for the extension type of the given constructor. If the\n\t * extension is already enabled for this Document, the previous Extension reference is reused.\n\t */\n\tcreateExtension<T extends Extension>(ctor: new (doc: Document) => T): T {\n\t\tconst extensionName = (ctor as unknown as { EXTENSION_NAME: 'string' }).EXTENSION_NAME;\n\t\tconst prevExtension = this.getRoot()\n\t\t\t.listExtensionsUsed()\n\t\t\t.find((ext) => ext.extensionName === extensionName);\n\t\treturn (prevExtension || new ctor(this)) as T;\n\t}\n\n\t/**********************************************************************************************\n\t * Property factory methods.\n\t */\n\n\t/** Creates a new {@link Scene} attached to this document's {@link Root}. */\n\tcreateScene(name = ''): Scene {\n\t\treturn new Scene(this._graph, name);\n\t}\n\n\t/** Creates a new {@link Node} attached to this document's {@link Root}. */\n\tcreateNode(name = ''): Node {\n\t\treturn new Node(this._graph, name);\n\t}\n\n\t/** Creates a new {@link Camera} attached to this document's {@link Root}. */\n\tcreateCamera(name = ''): Camera {\n\t\treturn new Camera(this._graph, name);\n\t}\n\n\t/** Creates a new {@link Skin} attached to this document's {@link Root}. */\n\tcreateSkin(name = ''): Skin {\n\t\treturn new Skin(this._graph, name);\n\t}\n\n\t/** Creates a new {@link Mesh} attached to this document's {@link Root}. */\n\tcreateMesh(name = ''): Mesh {\n\t\treturn new Mesh(this._graph, name);\n\t}\n\n\t/**\n\t * Creates a new {@link Primitive}. Primitives must be attached to a {@link Mesh}\n\t * for use and export; they are not otherwise associated with a {@link Root}.\n\t */\n\tcreatePrimitive(): Primitive {\n\t\treturn new Primitive(this._graph);\n\t}\n\n\t/**\n\t * Creates a new {@link PrimitiveTarget}, or morph target. Targets must be attached to a\n\t * {@link Primitive} for use and export; they are not otherwise associated with a {@link Root}.\n\t */\n\tcreatePrimitiveTarget(name = ''): PrimitiveTarget {\n\t\treturn new PrimitiveTarget(this._graph, name);\n\t}\n\n\t/** Creates a new {@link Material} attached to this document's {@link Root}. */\n\tcreateMaterial(name = ''): Material {\n\t\treturn new Material(this._graph, name);\n\t}\n\n\t/** Creates a new {@link Texture} attached to this document's {@link Root}. */\n\tcreateTexture(name = ''): Texture {\n\t\treturn new Texture(this._graph, name);\n\t}\n\n\t/** Creates a new {@link Animation} attached to this document's {@link Root}. */\n\tcreateAnimation(name = ''): Animation {\n\t\treturn new Animation(this._graph, name);\n\t}\n\n\t/**\n\t * Creates a new {@link AnimationChannel}. Channels must be attached to an {@link Animation}\n\t * for use and export; they are not otherwise associated with a {@link Root}.\n\t */\n\tcreateAnimationChannel(name = ''): AnimationChannel {\n\t\treturn new AnimationChannel(this._graph, name);\n\t}\n\n\t/**\n\t * Creates a new {@link AnimationSampler}. Samplers must be attached to an {@link Animation}\n\t * for use and export; they are not otherwise associated with a {@link Root}.\n\t */\n\tcreateAnimationSampler(name = ''): AnimationSampler {\n\t\treturn new AnimationSampler(this._graph, name);\n\t}\n\n\t/** Creates a new {@link Accessor} attached to this document's {@link Root}. */\n\tcreateAccessor(name = '', buffer: Buffer | null = null): Accessor {\n\t\tif (!buffer) {\n\t\t\tbuffer = this.getRoot().listBuffers()[0];\n\t\t}\n\t\treturn new Accessor(this._graph, name).setBuffer(buffer);\n\t}\n\n\t/** Creates a new {@link Buffer} attached to this document's {@link Root}. */\n\tcreateBuffer(name = ''): Buffer {\n\t\treturn new Buffer(this._graph, name);\n\t}\n}\n","import type { GraphEdgeEvent, GraphEvent, GraphNodeEvent } from 'property-graph';\nimport type { PropertyType } from './constants.js';\nimport type { Document } from './document.js';\nimport type { ReaderContext, WriterContext } from './io/index.js';\nimport { ExtensionProperty } from './properties/index.js';\n\n/**\n * *Base class for all Extensions.*\n *\n * Extensions enhance a glTF {@link Document} with additional features and schema, beyond the core\n * glTF specification. Common extensions may be imported from the `@gltf-transform/extensions`\n * package, or custom extensions may be created by extending this base class.\n *\n * An extension is added to a Document by calling {@link Document.createExtension} with the\n * extension constructor. The extension object may then be used to construct\n * {@link ExtensionProperty} instances, which are attached to properties throughout the Document\n * as prescribed by the extension itself.\n *\n * For more information on available extensions and their usage, see [Extensions](/extensions).\n *\n * Reference:\n * - [glTF → Extensions](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#specifying-extensions)\n * - [glTF Extension Registry](https://github.com/KhronosGroup/gltf/blob/main/extensions)\n *\n * @category Extensions\n */\nexport abstract class Extension {\n\t/** Official name of the extension. */\n\tpublic static EXTENSION_NAME: string;\n\t/** Official name of the extension. */\n\tpublic readonly extensionName: string = '';\n\t/**\n\t * Before reading, extension should be called for these {@link Property} types. *Most\n\t * extensions don't need to implement this.*\n\t * @hidden\n\t */\n\tpublic readonly prereadTypes: PropertyType[] = [];\n\t/**\n\t * Before writing, extension should be called for these {@link Property} types. *Most\n\t * extensions don't need to implement this.*\n\t * @hidden\n\t */\n\tpublic readonly prewriteTypes: PropertyType[] = [];\n\n\t/** @hidden Dependency IDs needed to read this extension, to be installed before I/O. */\n\tpublic readonly readDependencies: string[] = [];\n\t/** @hidden Dependency IDs needed to write this extension, to be installed before I/O. */\n\tpublic readonly writeDependencies: string[] = [];\n\n\t/** @hidden */\n\tprotected readonly document: Document;\n\n\t/** @hidden */\n\tprotected required = false;\n\n\t/** @hidden */\n\tprotected properties: Set<ExtensionProperty> = new Set();\n\n\t/** @hidden */\n\tprivate _listener: (event: unknown) => void;\n\n\t/** @hidden */\n\tconstructor(document: Document) {\n\t\tthis.document = document;\n\n\t\tdocument.getRoot()._enableExtension(this);\n\n\t\tthis._listener = (_event: unknown): void => {\n\t\t\tconst event = _event as GraphNodeEvent | GraphEdgeEvent | GraphEvent;\n\t\t\tconst target = event.target as ExtensionProperty | unknown;\n\t\t\tif (target instanceof ExtensionProperty && target.extensionName === this.extensionName) {\n\t\t\t\tif (event.type === 'node:create') this._addExtensionProperty(target);\n\t\t\t\tif (event.type === 'node:dispose') this._removeExtensionProperty(target);\n\t\t\t}\n\t\t};\n\n\t\tconst graph = document.getGraph();\n\t\tgraph.addEventListener('node:create', this._listener);\n\t\tgraph.addEventListener('node:dispose', this._listener);\n\t}\n\n\t/** Disables and removes the extension from the Document. */\n\tpublic dispose(): void {\n\t\tthis.document.getRoot()._disableExtension(this);\n\t\tconst graph = this.document.getGraph();\n\t\tgraph.removeEventListener('node:create', this._listener);\n\t\tgraph.removeEventListener('node:dispose', this._listener);\n\t\tfor (const property of this.properties) {\n\t\t\tproperty.dispose();\n\t\t}\n\t}\n\n\t/** @hidden Performs first-time setup for the extension. Must be idempotent. */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\tpublic static register(): void {}\n\n\t/**\n\t * Indicates to the client whether it is OK to load the asset when this extension is not\n\t * recognized. Optional extensions are generally preferred, if there is not a good reason\n\t * to require a client to completely fail when an extension isn't known.\n\t */\n\tpublic isRequired(): boolean {\n\t\treturn this.required;\n\t}\n\n\t/**\n\t * Indicates to the client whether it is OK to load the asset when this extension is not\n\t * recognized. Optional extensions are generally preferred, if there is not a good reason\n\t * to require a client to completely fail when an extension isn't known.\n\t */\n\tpublic setRequired(required: boolean): this {\n\t\tthis.required = required;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Lists all {@link ExtensionProperty} instances associated with, or created by, this\n\t * extension. Includes only instances that are attached to the Document's graph; detached\n\t * instances will be excluded.\n\t */\n\tpublic listProperties(): ExtensionProperty[] {\n\t\treturn Array.from(this.properties);\n\t}\n\n\t/**********************************************************************************************\n\t * ExtensionProperty management.\n\t */\n\n\t/** @internal */\n\tprivate _addExtensionProperty(property: ExtensionProperty): this {\n\t\tthis.properties.add(property);\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tprivate _removeExtensionProperty(property: ExtensionProperty): this {\n\t\tthis.properties.delete(property);\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * I/O implementation.\n\t */\n\n\t/** @hidden Installs dependencies required by the extension. */\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tpublic install(key: string, dependency: unknown): this {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Used by the {@link PlatformIO} utilities when reading a glTF asset. This method may\n\t * optionally be implemented by an extension, and should then support any property type\n\t * declared by the Extension's {@link Extension.prereadTypes} list. The Extension will\n\t * be given a ReaderContext instance, and is expected to update either the context or its\n\t * {@link JSONDocument} with resources known to the Extension. *Most extensions don't need to\n\t * implement this.*\n\t * @hidden\n\t */\n\tpublic preread(_readerContext: ReaderContext, _propertyType: PropertyType): this {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Used by the {@link PlatformIO} utilities when writing a glTF asset. This method may\n\t * optionally be implemented by an extension, and should then support any property type\n\t * declared by the Extension's {@link Extension.prewriteTypes} list. The Extension will\n\t * be given a WriterContext instance, and is expected to update either the context or its\n\t * {@link JSONDocument} with resources known to the Extension. *Most extensions don't need to\n\t * implement this.*\n\t * @hidden\n\t */\n\tpublic prewrite(_writerContext: WriterContext, _propertyType: PropertyType): this {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Used by the {@link PlatformIO} utilities when reading a glTF asset. This method must be\n\t * implemented by each extension in order to support reading files. The extension will be\n\t * given a ReaderContext instance, and should update the current {@link Document} accordingly.\n\t * @hidden\n\t */\n\tpublic abstract read(readerContext: ReaderContext): this;\n\n\t/**\n\t * Used by the {@link PlatformIO} utilities when writing a glTF asset. This method must be\n\t * implemented by each extension in order to support writing files. The extension will be\n\t * given a WriterContext instance, and should modify the {@link JSONDocument} output\n\t * accordingly. Adding the extension name to the `extensionsUsed` and `extensionsRequired` list\n\t * is done automatically, and should not be included here.\n\t * @hidden\n\t */\n\tpublic abstract write(writerContext: WriterContext): this;\n}\n","import type { JSONDocument } from '../json-document.js';\nimport type {\n\tAccessor,\n\tAnimation,\n\tBuffer,\n\tCamera,\n\tMaterial,\n\tMesh,\n\tNode,\n\tScene,\n\tSkin,\n\tTexture,\n\tTextureInfo,\n} from '../properties/index.js';\nimport type { GLTF } from '../types/gltf.js';\n\n/**\n * Model class providing glTF Transform objects representing each definition in the glTF file, used\n * by a {@link GLTFReader} and its {@link Extension} implementations. Indices of all properties will be\n * consistent with the glTF file.\n *\n * @hidden\n */\nexport class ReaderContext {\n\tpublic buffers: Buffer[] = [];\n\tpublic bufferViews: Uint8Array[] = [];\n\tpublic bufferViewBuffers: Buffer[] = [];\n\tpublic accessors: Accessor[] = [];\n\tpublic textures: Texture[] = [];\n\tpublic textureInfos: Map<TextureInfo, GLTF.ITextureInfo> = new Map();\n\tpublic materials: Material[] = [];\n\tpublic meshes: Mesh[] = [];\n\tpublic cameras: Camera[] = [];\n\tpublic nodes: Node[] = [];\n\tpublic skins: Skin[] = [];\n\tpublic animations: Animation[] = [];\n\tpublic scenes: Scene[] = [];\n\n\tconstructor(public readonly jsonDoc: JSONDocument) {}\n\n\tpublic setTextureInfo(textureInfo: TextureInfo, textureInfoDef: GLTF.ITextureInfo): void {\n\t\tthis.textureInfos.set(textureInfo, textureInfoDef);\n\n\t\tif (textureInfoDef.texCoord !== undefined) {\n\t\t\ttextureInfo.setTexCoord(textureInfoDef.texCoord);\n\t\t}\n\t\tif (textureInfoDef.extras !== undefined) {\n\t\t\ttextureInfo.setExtras(textureInfoDef.extras);\n\t\t}\n\n\t\tconst textureDef = this.jsonDoc.json.textures![textureInfoDef.index];\n\n\t\tif (textureDef.sampler === undefined) return;\n\n\t\tconst samplerDef = this.jsonDoc.json.samplers![textureDef.sampler];\n\n\t\tif (samplerDef.magFilter !== undefined) {\n\t\t\ttextureInfo.setMagFilter(samplerDef.magFilter);\n\t\t}\n\t\tif (samplerDef.minFilter !== undefined) {\n\t\t\ttextureInfo.setMinFilter(samplerDef.minFilter);\n\t\t}\n\t\tif (samplerDef.wrapS !== undefined) {\n\t\t\ttextureInfo.setWrapS(samplerDef.wrapS);\n\t\t}\n\t\tif (samplerDef.wrapT !== undefined) {\n\t\t\ttextureInfo.setWrapT(samplerDef.wrapT);\n\t\t}\n\t}\n}\n","import { GLB_BUFFER, PropertyType, TypedArray, mat4, vec3, vec4, ComponentTypeToTypedArray } from '../constants.js';\nimport { Document } from '../document.js';\nimport type { Extension } from '../extension.js';\nimport type { JSONDocument } from '../json-document.js';\nimport { Accessor, AnimationSampler, Camera } from '../properties/index.js';\nimport type { GLTF } from '../types/gltf.js';\nimport { BufferUtils, FileUtils, ILogger, ImageUtils, Logger, MathUtils } from '../utils/index.js';\nimport { ReaderContext } from './reader-context.js';\n\nexport interface ReaderOptions {\n\tlogger?: ILogger;\n\textensions: (typeof Extension)[];\n\tdependencies: { [key: string]: unknown };\n}\n\nconst DEFAULT_OPTIONS: ReaderOptions = {\n\tlogger: Logger.DEFAULT_INSTANCE,\n\textensions: [],\n\tdependencies: {},\n};\n\n/** @internal */\nexport class GLTFReader {\n\tpublic static read(jsonDoc: JSONDocument, _options: ReaderOptions = DEFAULT_OPTIONS): Document {\n\t\tconst options = { ...DEFAULT_OPTIONS, ..._options } as Required<ReaderOptions>;\n\t\tconst { json } = jsonDoc;\n\t\tconst document = new Document().setLogger(options.logger);\n\n\t\tthis.validate(jsonDoc, options);\n\n\t\t/* Reader context. */\n\n\t\tconst context = new ReaderContext(jsonDoc);\n\n\t\t/** Asset. */\n\n\t\tconst assetDef = json.asset;\n\t\tconst asset = document.getRoot().getAsset();\n\n\t\tif (assetDef.copyright) asset.copyright = assetDef.copyright;\n\t\tif (assetDef.extras) asset.extras = assetDef.extras;\n\n\t\tif (json.extras !== undefined) {\n\t\t\tdocument.getRoot().setExtras({ ...json.extras });\n\t\t}\n\n\t\t/** Extensions (1/2). */\n\n\t\tconst extensionsUsed = json.extensionsUsed || [];\n\t\tconst extensionsRequired = json.extensionsRequired || [];\n\t\tfor (const Extension of options.extensions) {\n\t\t\tif (extensionsUsed.includes(Extension.EXTENSION_NAME)) {\n\t\t\t\tconst extension = document\n\t\t\t\t\t.createExtension(Extension as unknown as new (doc: Document) => Extension)\n\t\t\t\t\t.setRequired(extensionsRequired.includes(Extension.EXTENSION_NAME));\n\n\t\t\t\tfor (const key of extension.readDependencies) {\n\t\t\t\t\textension.install(key, options.dependencies[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/** Buffers. */\n\n\t\tconst bufferDefs = json.buffers || [];\n\t\tdocument\n\t\t\t.getRoot()\n\t\t\t.listExtensionsUsed()\n\t\t\t.filter((extension) => extension.prereadTypes.includes(PropertyType.BUFFER))\n\t\t\t.forEach((extension) => extension.preread(context, PropertyType.BUFFER));\n\t\tcontext.buffers = bufferDefs.map((bufferDef) => {\n\t\t\tconst buffer = document.createBuffer(bufferDef.name);\n\n\t\t\tif (bufferDef.extras) buffer.setExtras(bufferDef.extras);\n\n\t\t\tif (bufferDef.uri && bufferDef.uri.indexOf('__') !== 0) {\n\t\t\t\tbuffer.setURI(bufferDef.uri);\n\t\t\t}\n\n\t\t\treturn buffer;\n\t\t});\n\n\t\t/** Buffer views. */\n\n\t\tconst bufferViewDefs = json.bufferViews || [];\n\t\tcontext.bufferViewBuffers = bufferViewDefs.map((bufferViewDef, index) => {\n\t\t\tif (!context.bufferViews[index]) {\n\t\t\t\tconst bufferDef = jsonDoc.json.buffers![bufferViewDef.buffer];\n\t\t\t\tconst resource = bufferDef.uri ? jsonDoc.resources[bufferDef.uri] : jsonDoc.resources[GLB_BUFFER];\n\t\t\t\tconst byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\t\tcontext.bufferViews[index] = BufferUtils.toView(resource, byteOffset, bufferViewDef.byteLength);\n\t\t\t}\n\n\t\t\treturn context.buffers[bufferViewDef.buffer];\n\t\t});\n\n\t\t/** Accessors. */\n\n\t\t// Accessor .count and .componentType properties are inferred dynamically.\n\t\tconst accessorDefs = json.accessors || [];\n\t\tcontext.accessors = accessorDefs.map((accessorDef) => {\n\t\t\tconst buffer = context.bufferViewBuffers[accessorDef.bufferView!];\n\t\t\tconst accessor = document.createAccessor(accessorDef.name, buffer).setType(accessorDef.type);\n\n\t\t\tif (accessorDef.extras) accessor.setExtras(accessorDef.extras);\n\n\t\t\tif (accessorDef.normalized !== undefined) {\n\t\t\t\taccessor.setNormalized(accessorDef.normalized);\n\t\t\t}\n\n\t\t\t// Sparse accessors, KHR_draco_mesh_compression, and EXT_meshopt_compression.\n\t\t\tif (accessorDef.bufferView === undefined) return accessor;\n\n\t\t\t// NOTICE: We mark sparse accessors at the end of the I/O reading process. Consider an\n\t\t\t// accessor to be 'sparse' if it (A) includes sparse value overrides, or (B) does not\n\t\t\t// define .bufferView _and_ no extension provides that data.\n\n\t\t\taccessor.setArray(getAccessorArray(accessorDef, context));\n\t\t\treturn accessor;\n\t\t});\n\n\t\t/** Textures. */\n\n\t\t// glTF Transform's \"Texture\" properties correspond 1:1 with glTF \"Image\" properties, and\n\t\t// with image files. The glTF file may contain more one texture per image, where images\n\t\t// are reused with different sampler properties.\n\t\tconst imageDefs = json.images || [];\n\t\tconst textureDefs = json.textures || [];\n\t\tdocument\n\t\t\t.getRoot()\n\t\t\t.listExtensionsUsed()\n\t\t\t.filter((extension) => extension.prereadTypes.includes(PropertyType.TEXTURE))\n\t\t\t.forEach((extension) => extension.preread(context, PropertyType.TEXTURE));\n\t\tcontext.textures = imageDefs.map((imageDef) => {\n\t\t\tconst texture = document.createTexture(imageDef.name);\n\n\t\t\t// glTF Image corresponds 1:1 with glTF Transform Texture. See `writer.ts`.\n\t\t\tif (imageDef.extras) texture.setExtras(imageDef.extras);\n\n\t\t\tif (imageDef.bufferView !== undefined) {\n\t\t\t\tconst bufferViewDef = json.bufferViews![imageDef.bufferView];\n\t\t\t\tconst bufferDef = jsonDoc.json.buffers![bufferViewDef.buffer];\n\t\t\t\tconst bufferData = bufferDef.uri ? jsonDoc.resources[bufferDef.uri] : jsonDoc.resources[GLB_BUFFER];\n\t\t\t\tconst byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\t\tconst byteLength = bufferViewDef.byteLength;\n\t\t\t\tconst imageData = bufferData.slice(byteOffset, byteOffset + byteLength);\n\t\t\t\ttexture.setImage(imageData);\n\t\t\t} else if (imageDef.uri !== undefined) {\n\t\t\t\ttexture.setImage(jsonDoc.resources[imageDef.uri]);\n\t\t\t\tif (imageDef.uri.indexOf('__') !== 0) {\n\t\t\t\t\ttexture.setURI(imageDef.uri);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (imageDef.mimeType !== undefined) {\n\t\t\t\ttexture.setMimeType(imageDef.mimeType);\n\t\t\t} else if (imageDef.uri) {\n\t\t\t\tconst extension = FileUtils.extension(imageDef.uri);\n\t\t\t\ttexture.setMimeType(ImageUtils.extensionToMimeType(extension));\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t});\n\n\t\t/** Materials. */\n\n\t\tconst materialDefs = json.materials || [];\n\t\tcontext.materials = materialDefs.map((materialDef) => {\n\t\t\tconst material = document.createMaterial(materialDef.name);\n\n\t\t\tif (materialDef.extras) material.setExtras(materialDef.extras);\n\n\t\t\t// Program state & blending.\n\n\t\t\tif (materialDef.alphaMode !== undefined) {\n\t\t\t\tmaterial.setAlphaMode(materialDef.alphaMode);\n\t\t\t}\n\n\t\t\tif (materialDef.alphaCutoff !== undefined) {\n\t\t\t\tmaterial.setAlphaCutoff(materialDef.alphaCutoff);\n\t\t\t}\n\n\t\t\tif (materialDef.doubleSided !== undefined) {\n\t\t\t\tmaterial.setDoubleSided(materialDef.doubleSided);\n\t\t\t}\n\n\t\t\t// Factors.\n\n\t\t\tconst pbrDef = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tif (pbrDef.baseColorFactor !== undefined) {\n\t\t\t\tmaterial.setBaseColorFactor(pbrDef.baseColorFactor as vec4);\n\t\t\t}\n\n\t\t\tif (materialDef.emissiveFactor !== undefined) {\n\t\t\t\tmaterial.setEmissiveFactor(materialDef.emissiveFactor as vec3);\n\t\t\t}\n\n\t\t\tif (pbrDef.metallicFactor !== undefined) {\n\t\t\t\tmaterial.setMetallicFactor(pbrDef.metallicFactor);\n\t\t\t}\n\n\t\t\tif (pbrDef.roughnessFactor !== undefined) {\n\t\t\t\tmaterial.setRoughnessFactor(pbrDef.roughnessFactor);\n\t\t\t}\n\n\t\t\t// Textures.\n\n\t\t\tif (pbrDef.baseColorTexture !== undefined) {\n\t\t\t\tconst textureInfoDef = pbrDef.baseColorTexture;\n\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source!];\n\t\t\t\tmaterial.setBaseColorTexture(texture);\n\t\t\t\tcontext.setTextureInfo(material.getBaseColorTextureInfo()!, textureInfoDef);\n\t\t\t}\n\n\t\t\tif (materialDef.emissiveTexture !== undefined) {\n\t\t\t\tconst textureInfoDef = materialDef.emissiveTexture;\n\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source!];\n\t\t\t\tmaterial.setEmissiveTexture(texture);\n\t\t\t\tcontext.setTextureInfo(material.getEmissiveTextureInfo()!, textureInfoDef);\n\t\t\t}\n\n\t\t\tif (materialDef.normalTexture !== undefined) {\n\t\t\t\tconst textureInfoDef = materialDef.normalTexture;\n\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source!];\n\t\t\t\tmaterial.setNormalTexture(texture);\n\t\t\t\tcontext.setTextureInfo(material.getNormalTextureInfo()!, textureInfoDef);\n\t\t\t\tif (materialDef.normalTexture.scale !== undefined) {\n\t\t\t\t\tmaterial.setNormalScale(materialDef.normalTexture.scale);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (materialDef.occlusionTexture !== undefined) {\n\t\t\t\tconst textureInfoDef = materialDef.occlusionTexture;\n\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source!];\n\t\t\t\tmaterial.setOcclusionTexture(texture);\n\t\t\t\tcontext.setTextureInfo(material.getOcclusionTextureInfo()!, textureInfoDef);\n\t\t\t\tif (materialDef.occlusionTexture.strength !== undefined) {\n\t\t\t\t\tmaterial.setOcclusionStrength(materialDef.occlusionTexture.strength);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (pbrDef.metallicRoughnessTexture !== undefined) {\n\t\t\t\tconst textureInfoDef = pbrDef.metallicRoughnessTexture;\n\t\t\t\tconst texture = context.textures[textureDefs[textureInfoDef.index].source!];\n\t\t\t\tmaterial.setMetallicRoughnessTexture(texture);\n\t\t\t\tcontext.setTextureInfo(material.getMetallicRoughnessTextureInfo()!, textureInfoDef);\n\t\t\t}\n\n\t\t\treturn material;\n\t\t});\n\n\t\t/** Meshes. */\n\n\t\tconst meshDefs = json.meshes || [];\n\t\tdocument\n\t\t\t.getRoot()\n\t\t\t.listExtensionsUsed()\n\t\t\t.filter((extension) => extension.prereadTypes.includes(PropertyType.PRIMITIVE))\n\t\t\t.forEach((extension) => extension.preread(context, PropertyType.PRIMITIVE));\n\t\tcontext.meshes = meshDefs.map((meshDef) => {\n\t\t\tconst mesh = document.createMesh(meshDef.name);\n\n\t\t\tif (meshDef.extras) mesh.setExtras(meshDef.extras);\n\n\t\t\tif (meshDef.weights !== undefined) {\n\t\t\t\tmesh.setWeights(meshDef.weights);\n\t\t\t}\n\n\t\t\tconst primitiveDefs = meshDef.primitives || [];\n\t\t\tprimitiveDefs.forEach((primitiveDef) => {\n\t\t\t\tconst primitive = document.createPrimitive();\n\n\t\t\t\tif (primitiveDef.extras) primitive.setExtras(primitiveDef.extras);\n\n\t\t\t\tif (primitiveDef.material !== undefined) {\n\t\t\t\t\tprimitive.setMaterial(context.materials[primitiveDef.material]);\n\t\t\t\t}\n\n\t\t\t\tif (primitiveDef.mode !== undefined) {\n\t\t\t\t\tprimitive.setMode(primitiveDef.mode);\n\t\t\t\t}\n\n\t\t\t\tfor (const [semantic, index] of Object.entries(primitiveDef.attributes || {})) {\n\t\t\t\t\tprimitive.setAttribute(semantic, context.accessors[index]);\n\t\t\t\t}\n\n\t\t\t\tif (primitiveDef.indices !== undefined) {\n\t\t\t\t\tprimitive.setIndices(context.accessors[primitiveDef.indices]);\n\t\t\t\t}\n\n\t\t\t\tconst targetNames: string[] = (meshDef.extras && (meshDef.extras.targetNames as string[])) || [];\n\t\t\t\tconst targetDefs = primitiveDef.targets || [];\n\t\t\t\ttargetDefs.forEach((targetDef, targetIndex) => {\n\t\t\t\t\tconst targetName = targetNames[targetIndex] || targetIndex.toString();\n\t\t\t\t\tconst target = document.createPrimitiveTarget(targetName);\n\n\t\t\t\t\tfor (const [semantic, accessorIndex] of Object.entries(targetDef)) {\n\t\t\t\t\t\ttarget.setAttribute(semantic, context.accessors[accessorIndex]);\n\t\t\t\t\t}\n\n\t\t\t\t\tprimitive.addTarget(target);\n\t\t\t\t});\n\n\t\t\t\tmesh.addPrimitive(primitive);\n\t\t\t});\n\n\t\t\treturn mesh;\n\t\t});\n\n\t\t/** Cameras. */\n\n\t\tconst cameraDefs = json.cameras || [];\n\t\tcontext.cameras = cameraDefs.map((cameraDef) => {\n\t\t\tconst camera = document.createCamera(cameraDef.name).setType(cameraDef.type);\n\n\t\t\tif (cameraDef.extras) camera.setExtras(cameraDef.extras);\n\n\t\t\tif (cameraDef.type === Camera.Type.PERSPECTIVE) {\n\t\t\t\tconst perspectiveDef = cameraDef.perspective!;\n\t\t\t\tcamera.setYFov(perspectiveDef.yfov);\n\t\t\t\tcamera.setZNear(perspectiveDef.znear);\n\t\t\t\tif (perspectiveDef.zfar !== undefined) {\n\t\t\t\t\tcamera.setZFar(perspectiveDef.zfar);\n\t\t\t\t}\n\t\t\t\tif (perspectiveDef.aspectRatio !== undefined) {\n\t\t\t\t\tcamera.setAspectRatio(perspectiveDef.aspectRatio);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst orthoDef = cameraDef.orthographic!;\n\t\t\t\tcamera.setZNear(orthoDef.znear).setZFar(orthoDef.zfar).setXMag(orthoDef.xmag).setYMag(orthoDef.ymag);\n\t\t\t}\n\t\t\treturn camera;\n\t\t});\n\n\t\t/** Nodes. */\n\n\t\tconst nodeDefs = json.nodes || [];\n\n\t\tdocument\n\t\t\t.getRoot()\n\t\t\t.listExtensionsUsed()\n\t\t\t.filter((extension) => extension.prereadTypes.includes(PropertyType.NODE))\n\t\t\t.forEach((extension) => extension.preread(context, PropertyType.NODE));\n\n\t\tcontext.nodes = nodeDefs.map((nodeDef) => {\n\t\t\tconst node = document.createNode(nodeDef.name);\n\n\t\t\tif (nodeDef.extras) node.setExtras(nodeDef.extras);\n\n\t\t\tif (nodeDef.translation !== undefined) {\n\t\t\t\tnode.setTranslation(nodeDef.translation as vec3);\n\t\t\t}\n\n\t\t\tif (nodeDef.rotation !== undefined) {\n\t\t\t\tnode.setRotation(nodeDef.rotation as vec4);\n\t\t\t}\n\n\t\t\tif (nodeDef.scale !== undefined) {\n\t\t\t\tnode.setScale(nodeDef.scale as vec3);\n\t\t\t}\n\n\t\t\tif (nodeDef.matrix !== undefined) {\n\t\t\t\tconst translation = [0, 0, 0] as vec3;\n\t\t\t\tconst rotation = [0, 0, 0, 1] as vec4;\n\t\t\t\tconst scale = [1, 1, 1] as vec3;\n\n\t\t\t\tMathUtils.decompose(nodeDef.matrix as mat4, translation, rotation, scale);\n\n\t\t\t\tnode.setTranslation(translation);\n\t\t\t\tnode.setRotation(rotation);\n\t\t\t\tnode.setScale(scale);\n\t\t\t}\n\n\t\t\tif (nodeDef.weights !== undefined) {\n\t\t\t\tnode.setWeights(nodeDef.weights);\n\t\t\t}\n\n\t\t\t// Attachments (mesh, camera, skin) defined later in reading process.\n\n\t\t\treturn node;\n\t\t});\n\n\t\t/** Skins. */\n\n\t\tconst skinDefs = json.skins || [];\n\t\tcontext.skins = skinDefs.map((skinDef) => {\n\t\t\tconst skin = document.createSkin(skinDef.name);\n\n\t\t\tif (skinDef.extras) skin.setExtras(skinDef.extras);\n\n\t\t\tif (skinDef.inverseBindMatrices !== undefined) {\n\t\t\t\tskin.setInverseBindMatrices(context.accessors[skinDef.inverseBindMatrices]);\n\t\t\t}\n\n\t\t\tif (skinDef.skeleton !== undefined) {\n\t\t\t\tskin.setSkeleton(context.nodes[skinDef.skeleton]);\n\t\t\t}\n\n\t\t\tfor (const nodeIndex of skinDef.joints) {\n\t\t\t\tskin.addJoint(context.nodes[nodeIndex]);\n\t\t\t}\n\n\t\t\treturn skin;\n\t\t});\n\n\t\t/** Node attachments. */\n\n\t\tnodeDefs.map((nodeDef, nodeIndex) => {\n\t\t\tconst node = context.nodes[nodeIndex];\n\n\t\t\tconst children = nodeDef.children || [];\n\t\t\tchildren.forEach((childIndex) => node.addChild(context.nodes[childIndex]));\n\n\t\t\tif (nodeDef.mesh !== undefined) node.setMesh(context.meshes[nodeDef.mesh]);\n\n\t\t\tif (nodeDef.camera !== undefined) node.setCamera(context.cameras[nodeDef.camera]);\n\n\t\t\tif (nodeDef.skin !== undefined) node.setSkin(context.skins[nodeDef.skin]);\n\t\t});\n\n\t\t/** Animations. */\n\n\t\tconst animationDefs = json.animations || [];\n\t\tcontext.animations = animationDefs.map((animationDef) => {\n\t\t\tconst animation = document.createAnimation(animationDef.name);\n\n\t\t\tif (animationDef.extras) animation.setExtras(animationDef.extras);\n\n\t\t\tconst samplerDefs = animationDef.samplers || [];\n\t\t\tconst samplers = samplerDefs.map((samplerDef) => {\n\t\t\t\tconst sampler = document\n\t\t\t\t\t.createAnimationSampler()\n\t\t\t\t\t.setInput(context.accessors[samplerDef.input])\n\t\t\t\t\t.setOutput(context.accessors[samplerDef.output])\n\t\t\t\t\t.setInterpolation(samplerDef.interpolation || AnimationSampler.Interpolation.LINEAR);\n\n\t\t\t\tif (samplerDef.extras) sampler.setExtras(samplerDef.extras);\n\n\t\t\t\tanimation.addSampler(sampler);\n\t\t\t\treturn sampler;\n\t\t\t});\n\n\t\t\tconst channels = animationDef.channels || [];\n\t\t\tchannels.forEach((channelDef) => {\n\t\t\t\tconst channel = document\n\t\t\t\t\t.createAnimationChannel()\n\t\t\t\t\t.setSampler(samplers[channelDef.sampler])\n\t\t\t\t\t.setTargetPath(channelDef.target.path);\n\n\t\t\t\tif (channelDef.target.node !== undefined) channel.setTargetNode(context.nodes[channelDef.target.node]);\n\t\t\t\tif (channelDef.extras) channel.setExtras(channelDef.extras);\n\n\t\t\t\tanimation.addChannel(channel);\n\t\t\t});\n\n\t\t\treturn animation;\n\t\t});\n\n\t\t/** Scenes. */\n\n\t\tconst sceneDefs = json.scenes || [];\n\n\t\tdocument\n\t\t\t.getRoot()\n\t\t\t.listExtensionsUsed()\n\t\t\t.filter((extension) => extension.prereadTypes.includes(PropertyType.SCENE))\n\t\t\t.forEach((extension) => extension.preread(context, PropertyType.SCENE));\n\n\t\tcontext.scenes = sceneDefs.map((sceneDef) => {\n\t\t\tconst scene = document.createScene(sceneDef.name);\n\n\t\t\tif (sceneDef.extras) scene.setExtras(sceneDef.extras);\n\n\t\t\tconst children = sceneDef.nodes || [];\n\n\t\t\tchildren.map((nodeIndex) => context.nodes[nodeIndex]).forEach((node) => scene.addChild(node));\n\n\t\t\treturn scene;\n\t\t});\n\n\t\tif (json.scene !== undefined) {\n\t\t\tdocument.getRoot().setDefaultScene(context.scenes[json.scene]);\n\t\t}\n\n\t\t/** Extensions (2/2). */\n\n\t\tdocument\n\t\t\t.getRoot()\n\t\t\t.listExtensionsUsed()\n\t\t\t.forEach((extension) => extension.read(context));\n\n\t\t/** Post-processing. */\n\n\t\t// Consider an accessor to be 'sparse' if it (A) includes sparse value overrides,\n\t\t// or (B) does not define .bufferView _and_ no extension provides that data. Case\n\t\t// (B) represents a zero-filled accessor.\n\t\taccessorDefs.forEach((accessorDef, index) => {\n\t\t\tconst accessor = context.accessors[index];\n\t\t\tconst hasSparseValues = !!accessorDef.sparse;\n\t\t\tconst isZeroFilled = !accessorDef.bufferView && !accessor.getArray();\n\t\t\tif (hasSparseValues || isZeroFilled) {\n\t\t\t\taccessor.setSparse(true).setArray(getSparseArray(accessorDef, context));\n\t\t\t}\n\t\t});\n\n\t\treturn document;\n\t}\n\n\tprivate static validate(jsonDoc: JSONDocument, options: Required<ReaderOptions>): void {\n\t\tconst json = jsonDoc.json;\n\n\t\tif (json.asset.version !== '2.0') {\n\t\t\tthrow new Error(`Unsupported glTF version, \"${json.asset.version}\".`);\n\t\t}\n\n\t\tif (json.extensionsRequired) {\n\t\t\tfor (const extensionName of json.extensionsRequired) {\n\t\t\t\tif (!options.extensions.find((extension) => extension.EXTENSION_NAME === extensionName)) {\n\t\t\t\t\tthrow new Error(`Missing required extension, \"${extensionName}\".`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (json.extensionsUsed) {\n\t\t\tfor (const extensionName of json.extensionsUsed) {\n\t\t\t\tif (!options.extensions.find((extension) => extension.EXTENSION_NAME === extensionName)) {\n\t\t\t\t\toptions.logger.warn(`Missing optional extension, \"${extensionName}\".`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Returns the contents of an interleaved accessor, as a typed array.\n * @internal\n */\nfunction getInterleavedArray(accessorDef: GLTF.IAccessor, context: ReaderContext): TypedArray {\n\tconst jsonDoc = context.jsonDoc;\n\tconst bufferView = context.bufferViews[accessorDef.bufferView!];\n\tconst bufferViewDef = jsonDoc.json.bufferViews![accessorDef.bufferView!];\n\n\tconst TypedArray = ComponentTypeToTypedArray[accessorDef.componentType];\n\tconst elementSize = Accessor.getElementSize(accessorDef.type);\n\tconst componentSize = TypedArray.BYTES_PER_ELEMENT;\n\tconst accessorByteOffset = accessorDef.byteOffset || 0;\n\n\tconst array = new TypedArray(accessorDef.count * elementSize);\n\tconst view = new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n\tconst byteStride = bufferViewDef.byteStride!;\n\n\tfor (let i = 0; i < accessorDef.count; i++) {\n\t\tfor (let j = 0; j < elementSize; j++) {\n\t\t\tconst byteOffset = accessorByteOffset + i * byteStride + j * componentSize;\n\t\t\tlet value: number;\n\t\t\tswitch (accessorDef.componentType) {\n\t\t\t\tcase Accessor.ComponentType.FLOAT:\n\t\t\t\t\tvalue = view.getFloat32(byteOffset, true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Accessor.ComponentType.UNSIGNED_INT:\n\t\t\t\t\tvalue = view.getUint32(byteOffset, true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Accessor.ComponentType.UNSIGNED_SHORT:\n\t\t\t\t\tvalue = view.getUint16(byteOffset, true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Accessor.ComponentType.UNSIGNED_BYTE:\n\t\t\t\t\tvalue = view.getUint8(byteOffset);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Accessor.ComponentType.SHORT:\n\t\t\t\t\tvalue = view.getInt16(byteOffset, true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Accessor.ComponentType.BYTE:\n\t\t\t\t\tvalue = view.getInt8(byteOffset);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unexpected componentType \"${accessorDef.componentType}\".`);\n\t\t\t}\n\t\t\tarray[i * elementSize + j] = value;\n\t\t}\n\t}\n\n\treturn array;\n}\n\n/**\n * Returns the contents of an accessor, as a typed array.\n * @internal\n */\nfunction getAccessorArray(accessorDef: GLTF.IAccessor, context: ReaderContext): TypedArray {\n\tconst jsonDoc = context.jsonDoc;\n\tconst bufferView = context.bufferViews[accessorDef.bufferView!];\n\tconst bufferViewDef = jsonDoc.json.bufferViews![accessorDef.bufferView!];\n\n\tconst TypedArray = ComponentTypeToTypedArray[accessorDef.componentType];\n\tconst elementSize = Accessor.getElementSize(accessorDef.type);\n\tconst componentSize = TypedArray.BYTES_PER_ELEMENT;\n\tconst elementStride = elementSize * componentSize;\n\n\t// Interleaved buffer view.\n\tif (bufferViewDef.byteStride !== undefined && bufferViewDef.byteStride !== elementStride) {\n\t\treturn getInterleavedArray(accessorDef, context);\n\t}\n\n\tconst byteOffset = bufferView.byteOffset + (accessorDef.byteOffset || 0);\n\tconst byteLength = accessorDef.count * elementSize * componentSize;\n\n\t// Might optimize this to avoid deep copy later, but it's useful for now and not a known\n\t// bottleneck. See https://github.com/donmccurdy/glTF-Transform/issues/256.\n\treturn new TypedArray(bufferView.buffer.slice(byteOffset, byteOffset + byteLength));\n}\n\n/**\n * Returns the contents of a sparse accessor, as a typed array.\n * @internal\n */\nfunction getSparseArray(accessorDef: GLTF.IAccessor, context: ReaderContext): TypedArray {\n\tconst TypedArray = ComponentTypeToTypedArray[accessorDef.componentType];\n\tconst elementSize = Accessor.getElementSize(accessorDef.type);\n\n\tlet array: TypedArray;\n\tif (accessorDef.bufferView !== undefined) {\n\t\tarray = getAccessorArray(accessorDef, context);\n\t} else {\n\t\tarray = new TypedArray(accessorDef.count * elementSize);\n\t}\n\n\tconst sparseDef = accessorDef.sparse;\n\tif (!sparseDef) return array; // Zero-filled accessor.\n\n\tconst count = sparseDef.count;\n\tconst indicesDef = { ...accessorDef, ...sparseDef.indices, count, type: 'SCALAR' };\n\tconst valuesDef = { ...accessorDef, ...sparseDef.values, count };\n\tconst indices = getAccessorArray(indicesDef as GLTF.IAccessor, context);\n\tconst values = getAccessorArray(valuesDef, context);\n\n\t// Override indices given in the sparse data.\n\tfor (let i = 0; i < indicesDef.count; i++) {\n\t\tfor (let j = 0; j < elementSize; j++) {\n\t\t\tarray[indices[i] * elementSize + j] = values[i * elementSize + j];\n\t\t}\n\t}\n\n\treturn array;\n}\n","import { BufferViewUsage, Format, PropertyType } from '../constants.js';\nimport type { Document } from '../document.js';\nimport type { JSONDocument } from '../json-document.js';\nimport type {\n\tAccessor,\n\tAnimation,\n\tBuffer,\n\tCamera,\n\tMaterial,\n\tMesh,\n\tNode,\n\tProperty,\n\tScene,\n\tSkin,\n\tTexture,\n\tTextureInfo,\n} from '../properties/index.js';\nimport type { GLTF } from '../types/gltf.js';\nimport { ILogger, ImageUtils } from '../utils/index.js';\nimport type { WriterOptions } from './writer.js';\n\ntype PropertyDef = GLTF.IScene | GLTF.INode | GLTF.IMaterial | GLTF.ISkin | GLTF.ITexture;\n\nenum BufferViewTarget {\n\tARRAY_BUFFER = 34962,\n\tELEMENT_ARRAY_BUFFER = 34963,\n}\n\n/**\n * Model class providing writing state to a {@link GLTFWriter} and its {@link Extension}\n * implementations.\n *\n * @hidden\n */\nexport class WriterContext {\n\t/** Explicit buffer view targets defined by glTF specification. */\n\tpublic static readonly BufferViewTarget = BufferViewTarget;\n\t/**\n\t * Implicit buffer view usage, not required by glTF specification, but nonetheless useful for\n\t * proper grouping of accessors into buffer views. Additional usages are defined by extensions,\n\t * like `EXT_mesh_gpu_instancing`.\n\t */\n\tpublic static readonly BufferViewUsage = BufferViewUsage;\n\t/** Maps usage type to buffer view target. Usages not mapped have undefined targets. */\n\tpublic static readonly USAGE_TO_TARGET: { [key: string]: BufferViewTarget | undefined } = {\n\t\t[BufferViewUsage.ARRAY_BUFFER]: BufferViewTarget.ARRAY_BUFFER,\n\t\t[BufferViewUsage.ELEMENT_ARRAY_BUFFER]: BufferViewTarget.ELEMENT_ARRAY_BUFFER,\n\t};\n\n\tpublic readonly accessorIndexMap = new Map<Accessor, number>();\n\tpublic readonly animationIndexMap = new Map<Animation, number>();\n\tpublic readonly bufferIndexMap = new Map<Buffer, number>();\n\tpublic readonly cameraIndexMap = new Map<Camera, number>();\n\tpublic readonly skinIndexMap = new Map<Skin, number>();\n\tpublic readonly materialIndexMap = new Map<Material, number>();\n\tpublic readonly meshIndexMap = new Map<Mesh, number>();\n\tpublic readonly nodeIndexMap = new Map<Node, number>();\n\tpublic readonly imageIndexMap = new Map<Texture, number>();\n\tpublic readonly textureDefIndexMap = new Map<string, number>(); // textureDef JSON -> index\n\tpublic readonly textureInfoDefMap = new Map<TextureInfo, GLTF.ITextureInfo>();\n\tpublic readonly samplerDefIndexMap = new Map<string, number>(); // samplerDef JSON -> index\n\tpublic readonly sceneIndexMap = new Map<Scene, number>();\n\n\tpublic readonly imageBufferViews: Uint8Array[] = [];\n\tpublic readonly otherBufferViews = new Map<Buffer, Uint8Array[]>();\n\tpublic readonly otherBufferViewsIndexMap = new Map<Uint8Array, number>();\n\tpublic readonly extensionData: { [key: string]: unknown } = {};\n\n\tpublic bufferURIGenerator: UniqueURIGenerator<Buffer>;\n\tpublic imageURIGenerator: UniqueURIGenerator<Texture>;\n\tpublic logger: ILogger;\n\n\tprivate readonly _accessorUsageMap = new Map<Accessor, BufferViewUsage | string>();\n\tpublic readonly accessorUsageGroupedByParent = new Set<string>(['ARRAY_BUFFER']);\n\tpublic readonly accessorParents = new Map<Property, Set<Accessor>>();\n\n\tconstructor(\n\t\tprivate readonly _doc: Document,\n\t\tpublic readonly jsonDoc: JSONDocument,\n\t\tpublic readonly options: Required<WriterOptions>\n\t) {\n\t\tconst root = _doc.getRoot();\n\t\tconst numBuffers = root.listBuffers().length;\n\t\tconst numImages = root.listTextures().length;\n\t\tthis.bufferURIGenerator = new UniqueURIGenerator(numBuffers > 1, () => options.basename || 'buffer');\n\t\tthis.imageURIGenerator = new UniqueURIGenerator(\n\t\t\tnumImages > 1,\n\t\t\t(texture) => getSlot(_doc, texture) || options.basename || 'texture'\n\t\t);\n\t\tthis.logger = _doc.getLogger();\n\t}\n\n\t/**\n\t * Creates a TextureInfo definition, and any Texture or Sampler definitions it requires. If\n\t * possible, Texture and Sampler definitions are shared.\n\t */\n\tpublic createTextureInfoDef(texture: Texture, textureInfo: TextureInfo): GLTF.ITextureInfo {\n\t\tconst samplerDef = {\n\t\t\tmagFilter: textureInfo.getMagFilter() || undefined,\n\t\t\tminFilter: textureInfo.getMinFilter() || undefined,\n\t\t\twrapS: textureInfo.getWrapS(),\n\t\t\twrapT: textureInfo.getWrapT(),\n\t\t} as GLTF.ISampler;\n\n\t\tconst samplerKey = JSON.stringify(samplerDef);\n\t\tif (!this.samplerDefIndexMap.has(samplerKey)) {\n\t\t\tthis.samplerDefIndexMap.set(samplerKey, this.jsonDoc.json.samplers!.length);\n\t\t\tthis.jsonDoc.json.samplers!.push(samplerDef);\n\t\t}\n\n\t\tconst textureDef = {\n\t\t\tsource: this.imageIndexMap.get(texture),\n\t\t\tsampler: this.samplerDefIndexMap.get(samplerKey),\n\t\t} as GLTF.ITexture;\n\n\t\tconst textureKey = JSON.stringify(textureDef);\n\t\tif (!this.textureDefIndexMap.has(textureKey)) {\n\t\t\tthis.textureDefIndexMap.set(textureKey, this.jsonDoc.json.textures!.length);\n\t\t\tthis.jsonDoc.json.textures!.push(textureDef);\n\t\t}\n\n\t\tconst textureInfoDef = {\n\t\t\tindex: this.textureDefIndexMap.get(textureKey),\n\t\t} as GLTF.ITextureInfo;\n\n\t\tif (textureInfo.getTexCoord() !== 0) {\n\t\t\ttextureInfoDef.texCoord = textureInfo.getTexCoord();\n\t\t}\n\t\tif (Object.keys(textureInfo.getExtras()).length > 0) {\n\t\t\ttextureInfoDef.extras = textureInfo.getExtras();\n\t\t}\n\n\t\tthis.textureInfoDefMap.set(textureInfo, textureInfoDef);\n\n\t\treturn textureInfoDef;\n\t}\n\n\tpublic createPropertyDef(property: Property): PropertyDef {\n\t\tconst def = {} as PropertyDef;\n\t\tif (property.getName()) {\n\t\t\tdef.name = property.getName();\n\t\t}\n\t\tif (Object.keys(property.getExtras()).length > 0) {\n\t\t\tdef.extras = property.getExtras();\n\t\t}\n\t\treturn def;\n\t}\n\n\tpublic createAccessorDef(accessor: Accessor): GLTF.IAccessor {\n\t\tconst accessorDef = this.createPropertyDef(accessor) as GLTF.IAccessor;\n\t\taccessorDef.type = accessor.getType();\n\t\taccessorDef.componentType = accessor.getComponentType();\n\t\taccessorDef.count = accessor.getCount();\n\n\t\tconst needsBounds = this._doc\n\t\t\t.getGraph()\n\t\t\t.listParentEdges(accessor)\n\t\t\t.some(\n\t\t\t\t(edge) =>\n\t\t\t\t\t(edge.getName() === 'attributes' && edge.getAttributes().key === 'POSITION') ||\n\t\t\t\t\tedge.getName() === 'input'\n\t\t\t);\n\t\tif (needsBounds) {\n\t\t\taccessorDef.max = accessor.getMax([]).map(Math.fround);\n\t\t\taccessorDef.min = accessor.getMin([]).map(Math.fround);\n\t\t}\n\n\t\tif (accessor.getNormalized()) {\n\t\t\taccessorDef.normalized = accessor.getNormalized();\n\t\t}\n\n\t\treturn accessorDef;\n\t}\n\n\tpublic createImageData(imageDef: GLTF.IImage, data: Uint8Array, texture: Texture): void {\n\t\tif (this.options.format === Format.GLB) {\n\t\t\tthis.imageBufferViews.push(data);\n\t\t\timageDef.bufferView = this.jsonDoc.json.bufferViews!.length;\n\t\t\tthis.jsonDoc.json.bufferViews!.push({\n\t\t\t\tbuffer: 0,\n\t\t\t\tbyteOffset: -1, // determined while iterating buffers, in Writer.ts.\n\t\t\t\tbyteLength: data.byteLength,\n\t\t\t});\n\t\t} else {\n\t\t\tconst extension = ImageUtils.mimeTypeToExtension(texture.getMimeType());\n\t\t\timageDef.uri = this.imageURIGenerator.createURI(texture, extension);\n\t\t\tthis.jsonDoc.resources[imageDef.uri] = data;\n\t\t}\n\t}\n\n\t/**\n\t * Returns implicit usage type of the given accessor, related to grouping accessors into\n\t * buffer views. Usage is a superset of buffer view target, including ARRAY_BUFFER and\n\t * ELEMENT_ARRAY_BUFFER, but also usages that do not match GPU buffer view targets such as\n\t * IBMs. Additional usages are defined by extensions, like `EXT_mesh_gpu_instancing`.\n\t */\n\tpublic getAccessorUsage(accessor: Accessor): BufferViewUsage | string {\n\t\tconst cachedUsage = this._accessorUsageMap.get(accessor);\n\t\tif (cachedUsage) return cachedUsage;\n\n\t\tif (accessor.getSparse()) return BufferViewUsage.SPARSE;\n\n\t\tfor (const edge of this._doc.getGraph().listParentEdges(accessor)) {\n\t\t\tconst { usage } = edge.getAttributes() as { usage: BufferViewUsage | undefined };\n\n\t\t\tif (usage) return usage;\n\n\t\t\tif (edge.getParent().propertyType !== PropertyType.ROOT) {\n\t\t\t\tthis.logger.warn(`Missing attribute \".usage\" on edge, \"${edge.getName()}\".`);\n\t\t\t}\n\t\t}\n\n\t\t// Group accessors with no specified usage into a miscellaneous buffer view.\n\t\treturn BufferViewUsage.OTHER;\n\t}\n\n\t/**\n\t * Sets usage for the given accessor. Some accessor types must be grouped into\n\t * buffer views with like accessors. This includes the specified buffer view \"targets\", but\n\t * also implicit usage like IBMs or instanced mesh attributes. If unspecified, an accessor\n\t * will be grouped with other accessors of unspecified usage.\n\t */\n\tpublic addAccessorToUsageGroup(accessor: Accessor, usage: BufferViewUsage | string): this {\n\t\tconst prevUsage = this._accessorUsageMap.get(accessor);\n\t\tif (prevUsage && prevUsage !== usage) {\n\t\t\tthrow new Error(`Accessor with usage \"${prevUsage}\" cannot be reused as \"${usage}\".`);\n\t\t}\n\t\tthis._accessorUsageMap.set(accessor, usage);\n\t\treturn this;\n\t}\n\n\t/** Lists accessors grouped by usage. Accessors with unspecified usage are not included. */\n\tpublic listAccessorUsageGroups(): { [key: string]: Accessor[] } {\n\t\tconst result = {} as { [key: string]: Accessor[] };\n\t\tfor (const [accessor, usage] of Array.from(this._accessorUsageMap.entries())) {\n\t\t\tresult[usage] = result[usage] || [];\n\t\t\tresult[usage].push(accessor);\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport class UniqueURIGenerator<T extends Texture | Buffer> {\n\tprivate counter = {} as Record<string, number>;\n\n\tconstructor(private readonly multiple: boolean, private readonly basename: (t: T) => string) {}\n\n\tpublic createURI(object: T, extension: string): string {\n\t\tif (object.getURI()) {\n\t\t\treturn object.getURI();\n\t\t} else if (!this.multiple) {\n\t\t\treturn `${this.basename(object)}.${extension}`;\n\t\t} else {\n\t\t\tconst basename = this.basename(object);\n\t\t\tthis.counter[basename] = this.counter[basename] || 1;\n\t\t\treturn `${basename}_${this.counter[basename]++}.${extension}`;\n\t\t}\n\t}\n}\n\n/** Returns the first slot (by name) to which the texture is assigned. */\nfunction getSlot(document: Document, texture: Texture): string {\n\tconst edge = document\n\t\t.getGraph()\n\t\t.listParentEdges(texture)\n\t\t.find((edge) => edge.getParent() !== document.getRoot());\n\treturn edge ? edge.getName().replace(/texture$/i, '') : '';\n}\n","import {\n\tComponentTypeToTypedArray,\n\tFormat,\n\tGLB_BUFFER,\n\tPropertyType,\n\tTypedArray,\n\tVERSION,\n\tVertexLayout,\n} from '../constants.js';\nimport type { Document } from '../document.js';\nimport type { Extension } from '../extension.js';\nimport type { GraphEdge } from 'property-graph';\nimport type { JSONDocument } from '../json-document.js';\nimport { Accessor, AnimationSampler, Camera, Material, Property } from '../properties/index.js';\nimport type { GLTF } from '../types/gltf.js';\nimport { BufferUtils, Logger, MathUtils } from '../utils/index.js';\nimport { WriterContext } from './writer-context.js';\n\nconst { BufferViewUsage } = WriterContext;\nconst { UNSIGNED_INT, UNSIGNED_SHORT, UNSIGNED_BYTE } = Accessor.ComponentType;\n\nexport interface WriterOptions {\n\tformat: Format;\n\tlogger?: Logger;\n\tbasename?: string;\n\tvertexLayout?: VertexLayout;\n\tdependencies?: { [key: string]: unknown };\n\textensions?: (typeof Extension)[];\n}\n\n/**\n * @internal\n * @hidden\n */\nexport class GLTFWriter {\n\tpublic static write(doc: Document, options: Required<WriterOptions>): JSONDocument {\n\t\tconst root = doc.getRoot();\n\t\tconst json = {\n\t\t\tasset: { generator: `glTF-Transform ${VERSION}`, ...root.getAsset() },\n\t\t\textras: { ...root.getExtras() },\n\t\t} as GLTF.IGLTF;\n\t\tconst jsonDoc = { json, resources: {} } as JSONDocument;\n\n\t\tconst context = new WriterContext(doc, jsonDoc, options);\n\t\tconst logger = options.logger || Logger.DEFAULT_INSTANCE;\n\n\t\t/* Extensions (1/2). */\n\n\t\t// Extensions present on the Document are not written unless they are also registered with\n\t\t// the I/O class. This ensures that setup in `extension.register()` is completed, and\n\t\t// allows a Document to be written with specific extensions disabled.\n\t\tconst extensionsRegistered = new Set(options.extensions.map((ext) => ext.EXTENSION_NAME));\n\t\tconst extensionsUsed = doc\n\t\t\t.getRoot()\n\t\t\t.listExtensionsUsed()\n\t\t\t.filter((ext) => extensionsRegistered.has(ext.extensionName));\n\t\tconst extensionsRequired = doc\n\t\t\t.getRoot()\n\t\t\t.listExtensionsRequired()\n\t\t\t.filter((ext) => extensionsRegistered.has(ext.extensionName));\n\n\t\tif (extensionsUsed.length < doc.getRoot().listExtensionsUsed().length) {\n\t\t\tlogger.warn('Some extensions were not registered for I/O, and will not be written.');\n\t\t}\n\n\t\tfor (const extension of extensionsUsed) {\n\t\t\tfor (const key of extension.writeDependencies) {\n\t\t\t\textension.install(key, options.dependencies[key]);\n\t\t\t}\n\t\t}\n\n\t\t/* Utilities. */\n\n\t\tinterface BufferViewResult {\n\t\t\tbyteLength: number;\n\t\t\tbuffers: Uint8Array[];\n\t\t}\n\n\t\t/**\n\t\t * Pack a group of accessors into a sequential buffer view. Appends accessor and buffer view\n\t\t * definitions to the root JSON lists.\n\t\t *\n\t\t * @param accessors Accessors to be included.\n\t\t * @param bufferIndex Buffer to write to.\n\t\t * @param bufferByteOffset Current offset into the buffer, accounting for other buffer views.\n\t\t * @param bufferViewTarget (Optional) target use of the buffer view.\n\t\t */\n\t\tfunction concatAccessors(\n\t\t\taccessors: Accessor[],\n\t\t\tbufferIndex: number,\n\t\t\tbufferByteOffset: number,\n\t\t\tbufferViewTarget?: number\n\t\t): BufferViewResult {\n\t\t\tconst buffers: Uint8Array[] = [];\n\t\t\tlet byteLength = 0;\n\n\t\t\t// Create accessor definitions, determining size of final buffer view.\n\t\t\tfor (const accessor of accessors) {\n\t\t\t\tconst accessorDef = context.createAccessorDef(accessor);\n\t\t\t\taccessorDef.bufferView = json.bufferViews!.length;\n\n\t\t\t\tconst accessorArray = accessor.getArray()!;\n\t\t\t\tconst data = BufferUtils.pad(BufferUtils.toView(accessorArray));\n\t\t\t\taccessorDef.byteOffset = byteLength;\n\t\t\t\tbyteLength += data.byteLength;\n\t\t\t\tbuffers.push(data);\n\n\t\t\t\tcontext.accessorIndexMap.set(accessor, json.accessors!.length);\n\t\t\t\tjson.accessors!.push(accessorDef);\n\t\t\t}\n\n\t\t\t// Create buffer view definition.\n\t\t\tconst bufferViewData = BufferUtils.concat(buffers);\n\t\t\tconst bufferViewDef: GLTF.IBufferView = {\n\t\t\t\tbuffer: bufferIndex,\n\t\t\t\tbyteOffset: bufferByteOffset,\n\t\t\t\tbyteLength: bufferViewData.byteLength,\n\t\t\t};\n\t\t\tif (bufferViewTarget) bufferViewDef.target = bufferViewTarget;\n\t\t\tjson.bufferViews!.push(bufferViewDef);\n\n\t\t\treturn { buffers, byteLength };\n\t\t}\n\n\t\t/**\n\t\t * Pack a group of accessors into an interleaved buffer view. Appends accessor and buffer\n\t\t * view definitions to the root JSON lists. Buffer view target is implicitly attribute data.\n\t\t *\n\t\t * References:\n\t\t * - [Apple • Best Practices for Working with Vertex Data](https://developer.apple.com/library/archive/documentation/3DDrawing/Conceptual/OpenGLES_ProgrammingGuide/TechniquesforWorkingwithVertexData/TechniquesforWorkingwithVertexData.html)\n\t\t * - [Khronos • Vertex Specification Best Practices](https://www.khronos.org/opengl/wiki/Vertex_Specification_Best_Practices)\n\t\t *\n\t\t * @param accessors Accessors to be included.\n\t\t * @param bufferIndex Buffer to write to.\n\t\t * @param bufferByteOffset Offset into the buffer, accounting for other buffer views.\n\t\t */\n\t\tfunction interleaveAccessors(\n\t\t\taccessors: Accessor[],\n\t\t\tbufferIndex: number,\n\t\t\tbufferByteOffset: number\n\t\t): BufferViewResult {\n\t\t\tconst vertexCount = accessors[0].getCount();\n\t\t\tlet byteStride = 0;\n\n\t\t\t// Create accessor definitions, determining size and stride of final buffer view.\n\t\t\tfor (const accessor of accessors) {\n\t\t\t\tconst accessorDef = context.createAccessorDef(accessor);\n\t\t\t\taccessorDef.bufferView = json.bufferViews!.length;\n\t\t\t\taccessorDef.byteOffset = byteStride;\n\n\t\t\t\tconst elementSize = accessor.getElementSize();\n\t\t\t\tconst componentSize = accessor.getComponentSize();\n\t\t\t\tbyteStride += BufferUtils.padNumber(elementSize * componentSize);\n\n\t\t\t\tcontext.accessorIndexMap.set(accessor, json.accessors!.length);\n\t\t\t\tjson.accessors!.push(accessorDef);\n\t\t\t}\n\n\t\t\t// Allocate interleaved buffer view.\n\t\t\tconst byteLength = vertexCount * byteStride;\n\t\t\tconst buffer = new ArrayBuffer(byteLength);\n\t\t\tconst view = new DataView(buffer);\n\n\t\t\t// Write interleaved accessor data to the buffer view.\n\t\t\tfor (let i = 0; i < vertexCount; i++) {\n\t\t\t\tlet vertexByteOffset = 0;\n\t\t\t\tfor (const accessor of accessors) {\n\t\t\t\t\tconst elementSize = accessor.getElementSize();\n\t\t\t\t\tconst componentSize = accessor.getComponentSize();\n\t\t\t\t\tconst componentType = accessor.getComponentType();\n\t\t\t\t\tconst array = accessor.getArray()!;\n\t\t\t\t\tfor (let j = 0; j < elementSize; j++) {\n\t\t\t\t\t\tconst viewByteOffset = i * byteStride + vertexByteOffset + j * componentSize;\n\t\t\t\t\t\tconst value = array[i * elementSize + j];\n\t\t\t\t\t\tswitch (componentType) {\n\t\t\t\t\t\t\tcase Accessor.ComponentType.FLOAT:\n\t\t\t\t\t\t\t\tview.setFloat32(viewByteOffset, value, true);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Accessor.ComponentType.BYTE:\n\t\t\t\t\t\t\t\tview.setInt8(viewByteOffset, value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Accessor.ComponentType.SHORT:\n\t\t\t\t\t\t\t\tview.setInt16(viewByteOffset, value, true);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Accessor.ComponentType.UNSIGNED_BYTE:\n\t\t\t\t\t\t\t\tview.setUint8(viewByteOffset, value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Accessor.ComponentType.UNSIGNED_SHORT:\n\t\t\t\t\t\t\t\tview.setUint16(viewByteOffset, value, true);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Accessor.ComponentType.UNSIGNED_INT:\n\t\t\t\t\t\t\t\tview.setUint32(viewByteOffset, value, true);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow new Error('Unexpected component type: ' + componentType);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvertexByteOffset += BufferUtils.padNumber(elementSize * componentSize);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Create buffer view definition.\n\t\t\tconst bufferViewDef: GLTF.IBufferView = {\n\t\t\t\tbuffer: bufferIndex,\n\t\t\t\tbyteOffset: bufferByteOffset,\n\t\t\t\tbyteLength: byteLength,\n\t\t\t\tbyteStride: byteStride,\n\t\t\t\ttarget: WriterContext.BufferViewTarget.ARRAY_BUFFER,\n\t\t\t};\n\t\t\tjson.bufferViews!.push(bufferViewDef);\n\n\t\t\treturn { byteLength, buffers: [new Uint8Array(buffer)] };\n\t\t}\n\n\t\t/**\n\t\t * Pack a group of sparse accessors. Appends accessor and buffer view\n\t\t * definitions to the root JSON lists.\n\t\t *\n\t\t * @param accessors Accessors to be included.\n\t\t * @param bufferIndex Buffer to write to.\n\t\t * @param bufferByteOffset Current offset into the buffer, accounting for other buffer views.\n\t\t */\n\t\tfunction concatSparseAccessors(\n\t\t\taccessors: Accessor[],\n\t\t\tbufferIndex: number,\n\t\t\tbufferByteOffset: number\n\t\t): BufferViewResult {\n\t\t\tconst buffers: Uint8Array[] = [];\n\t\t\tlet byteLength = 0;\n\n\t\t\tinterface SparseData {\n\t\t\t\taccessorDef: GLTF.IAccessor;\n\t\t\t\tcount: number;\n\t\t\t\tindices?: number[];\n\t\t\t\tvalues?: TypedArray;\n\t\t\t\tindicesByteOffset?: number;\n\t\t\t\tvaluesByteOffset?: number;\n\t\t\t}\n\t\t\tconst sparseData = new Map<Accessor, SparseData>();\n\t\t\tlet maxIndex = -Infinity;\n\n\t\t\t// (1) Write accessor definitions, gathering indices and values.\n\n\t\t\tfor (const accessor of accessors) {\n\t\t\t\tconst accessorDef = context.createAccessorDef(accessor);\n\t\t\t\tjson.accessors!.push(accessorDef);\n\t\t\t\tcontext.accessorIndexMap.set(accessor, json.accessors!.length - 1);\n\n\t\t\t\tconst indices = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tconst el = [] as number[];\n\t\t\t\tconst base = new Array(accessor.getElementSize()).fill(0);\n\n\t\t\t\tfor (let i = 0, il = accessor.getCount(); i < il; i++) {\n\t\t\t\t\taccessor.getElement(i, el);\n\t\t\t\t\tif (MathUtils.eq(el, base, 0)) continue;\n\n\t\t\t\t\tmaxIndex = Math.max(i, maxIndex);\n\t\t\t\t\tindices.push(i);\n\t\t\t\t\tfor (let j = 0; j < el.length; j++) values.push(el[j]);\n\t\t\t\t}\n\n\t\t\t\tconst count = indices.length;\n\t\t\t\tconst data: SparseData = { accessorDef, count };\n\t\t\t\tsparseData.set(accessor, data);\n\n\t\t\t\tif (count === 0) continue;\n\n\t\t\t\tif (count > accessor.getCount() / 3) {\n\t\t\t\t\t// Too late to write non-sparse values in the proper buffer views here.\n\t\t\t\t\tconst pct = ((100 * indices.length) / accessor.getCount()).toFixed(1);\n\t\t\t\t\tlogger.warn(`Sparse accessor with many non-zero elements (${pct}%) may increase file size.`);\n\t\t\t\t}\n\n\t\t\t\tconst ValueArray = ComponentTypeToTypedArray[accessor.getComponentType()];\n\t\t\t\tdata.indices = indices;\n\t\t\t\tdata.values = new ValueArray(values);\n\t\t\t}\n\n\t\t\t// (2) Early exit if all sparse accessors are just zero-filled arrays.\n\n\t\t\tif (!Number.isFinite(maxIndex)) {\n\t\t\t\treturn { buffers, byteLength };\n\t\t\t}\n\n\t\t\t// (3) Write index buffer view.\n\n\t\t\tconst IndexArray = maxIndex < 255 ? Uint8Array : maxIndex < 65535 ? Uint16Array : Uint32Array;\n\t\t\tconst IndexComponentType =\n\t\t\t\tmaxIndex < 255 ? UNSIGNED_BYTE : maxIndex < 65535 ? UNSIGNED_SHORT : UNSIGNED_INT;\n\n\t\t\tconst indicesBufferViewDef: GLTF.IBufferView = {\n\t\t\t\tbuffer: bufferIndex,\n\t\t\t\tbyteOffset: bufferByteOffset + byteLength,\n\t\t\t\tbyteLength: 0,\n\t\t\t};\n\t\t\tfor (const accessor of accessors) {\n\t\t\t\tconst data = sparseData.get(accessor)!;\n\t\t\t\tif (data.count === 0) continue;\n\n\t\t\t\tdata.indicesByteOffset = indicesBufferViewDef.byteLength;\n\n\t\t\t\tconst buffer = BufferUtils.pad(BufferUtils.toView(new IndexArray(data.indices!)));\n\t\t\t\tbuffers.push(buffer);\n\t\t\t\tbyteLength += buffer.byteLength;\n\t\t\t\tindicesBufferViewDef.byteLength += buffer.byteLength;\n\t\t\t}\n\t\t\tjson.bufferViews!.push(indicesBufferViewDef);\n\t\t\tconst indicesBufferViewIndex = json.bufferViews!.length - 1;\n\n\t\t\t// (4) Write value buffer view.\n\n\t\t\tconst valuesBufferViewDef: GLTF.IBufferView = {\n\t\t\t\tbuffer: bufferIndex,\n\t\t\t\tbyteOffset: bufferByteOffset + byteLength,\n\t\t\t\tbyteLength: 0,\n\t\t\t};\n\t\t\tfor (const accessor of accessors) {\n\t\t\t\tconst data = sparseData.get(accessor)!;\n\t\t\t\tif (data.count === 0) continue;\n\n\t\t\t\tdata.valuesByteOffset = valuesBufferViewDef.byteLength;\n\n\t\t\t\tconst buffer = BufferUtils.pad(BufferUtils.toView(data.values!));\n\t\t\t\tbuffers.push(buffer);\n\t\t\t\tbyteLength += buffer.byteLength;\n\t\t\t\tvaluesBufferViewDef.byteLength += buffer.byteLength;\n\t\t\t}\n\t\t\tjson.bufferViews!.push(valuesBufferViewDef);\n\t\t\tconst valuesBufferViewIndex = json.bufferViews!.length - 1;\n\n\t\t\t// (5) Write accessor sparse entries.\n\n\t\t\tfor (const accessor of accessors) {\n\t\t\t\tconst data = sparseData.get(accessor) as Required<SparseData>;\n\t\t\t\tif (data.count === 0) continue;\n\n\t\t\t\tdata.accessorDef.sparse = {\n\t\t\t\t\tcount: data.count,\n\t\t\t\t\tindices: {\n\t\t\t\t\t\tbufferView: indicesBufferViewIndex,\n\t\t\t\t\t\tbyteOffset: data.indicesByteOffset,\n\t\t\t\t\t\tcomponentType: IndexComponentType,\n\t\t\t\t\t},\n\t\t\t\t\tvalues: {\n\t\t\t\t\t\tbufferView: valuesBufferViewIndex,\n\t\t\t\t\t\tbyteOffset: data.valuesByteOffset,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn { buffers, byteLength };\n\t\t}\n\n\t\t/* Data use pre-processing. */\n\n\t\tconst accessorRefs = new Map<Accessor, GraphEdge<Property, Accessor>[]>();\n\n\t\t// Gather all accessors, creating a map to look up their uses.\n\t\tfor (const ref of doc.getGraph().listEdges()) {\n\t\t\tif (ref.getParent() === root) continue;\n\n\t\t\tconst child = ref.getChild();\n\n\t\t\tif (child instanceof Accessor) {\n\t\t\t\tconst uses = accessorRefs.get(child) || [];\n\t\t\t\tuses.push(ref as GraphEdge<Property, Accessor>);\n\t\t\t\taccessorRefs.set(child, uses);\n\t\t\t}\n\t\t}\n\n\t\tjson.accessors = [];\n\t\tjson.bufferViews = [];\n\n\t\t/* Textures. */\n\n\t\t// glTF Transform's \"Texture\" properties correspond 1:1 with glTF \"Image\" properties, and\n\t\t// with image files. The glTF file may contain more one texture per image, where images\n\t\t// are reused with different sampler properties.\n\t\tjson.samplers = [];\n\t\tjson.textures = [];\n\t\tjson.images = root.listTextures().map((texture, textureIndex) => {\n\t\t\tconst imageDef = context.createPropertyDef(texture) as GLTF.IImage;\n\n\t\t\tif (texture.getMimeType()) {\n\t\t\t\timageDef.mimeType = texture.getMimeType();\n\t\t\t}\n\n\t\t\tconst image = texture.getImage();\n\t\t\tif (image) {\n\t\t\t\tcontext.createImageData(imageDef, image, texture);\n\t\t\t}\n\n\t\t\tcontext.imageIndexMap.set(texture, textureIndex);\n\t\t\treturn imageDef;\n\t\t});\n\n\t\t/* Accessors. */\n\n\t\textensionsUsed\n\t\t\t.filter((extension) => extension.prewriteTypes.includes(PropertyType.ACCESSOR))\n\t\t\t.forEach((extension) => extension.prewrite(context, PropertyType.ACCESSOR));\n\t\troot.listAccessors().forEach((accessor) => {\n\t\t\t// Attributes are grouped and interleaved in one buffer view per mesh primitive.\n\t\t\t// Indices for all primitives are grouped into a single buffer view. IBMs are grouped\n\t\t\t// into a single buffer view. Other usage (if specified by extensions) also goes into\n\t\t\t// a dedicated buffer view. Everything else goes into a miscellaneous buffer view.\n\n\t\t\t// Certain accessor usage should group data into buffer views by the accessor parent.\n\t\t\t// The `accessorParents` map uses the first parent of each accessor for this purpose.\n\t\t\tconst groupByParent = context.accessorUsageGroupedByParent;\n\t\t\tconst accessorParents = context.accessorParents;\n\n\t\t\t// Skip if already written by an extension.\n\t\t\tif (context.accessorIndexMap.has(accessor)) return;\n\n\t\t\t// Assign usage for core accessor usage types (explicit targets and implicit usage).\n\t\t\tconst accessorEdges = accessorRefs.get(accessor) || [];\n\t\t\tconst usage = context.getAccessorUsage(accessor);\n\t\t\tcontext.addAccessorToUsageGroup(accessor, usage);\n\n\t\t\t// For accessor usage that requires grouping by parent (vertex and instance\n\t\t\t// attributes) organize buffer views accordingly.\n\t\t\tif (groupByParent.has(usage)) {\n\t\t\t\tconst parent = accessorEdges[0].getParent();\n\t\t\t\tconst parentAccessors = accessorParents.get(parent) || new Set<Accessor>();\n\t\t\t\tparentAccessors.add(accessor);\n\t\t\t\taccessorParents.set(parent, parentAccessors);\n\t\t\t}\n\t\t});\n\n\t\t/* Buffers, buffer views. */\n\n\t\textensionsUsed\n\t\t\t.filter((extension) => extension.prewriteTypes.includes(PropertyType.BUFFER))\n\t\t\t.forEach((extension) => extension.prewrite(context, PropertyType.BUFFER));\n\n\t\tconst hasBinaryResources =\n\t\t\troot.listAccessors().length > 0 || root.listTextures().length > 0 || context.otherBufferViews.size > 0;\n\t\tif (hasBinaryResources && root.listBuffers().length === 0) {\n\t\t\tthrow new Error('Buffer required for Document resources, but none was found.');\n\t\t}\n\n\t\tjson.buffers = [];\n\t\troot.listBuffers().forEach((buffer, index) => {\n\t\t\tconst bufferDef = context.createPropertyDef(buffer) as GLTF.IBuffer;\n\t\t\tconst groupByParent = context.accessorUsageGroupedByParent;\n\t\t\tconst accessorParents = context.accessorParents;\n\n\t\t\tconst bufferAccessors = buffer\n\t\t\t\t.listParents()\n\t\t\t\t.filter((property) => property instanceof Accessor) as Accessor[];\n\t\t\tconst bufferAccessorsSet = new Set(bufferAccessors);\n\n\t\t\t// Write accessor groups to buffer views.\n\n\t\t\tconst buffers: Uint8Array[] = [];\n\t\t\tconst bufferIndex = json.buffers!.length;\n\t\t\tlet bufferByteLength = 0;\n\n\t\t\tconst usageGroups = context.listAccessorUsageGroups();\n\n\t\t\tfor (const usage in usageGroups) {\n\t\t\t\tif (groupByParent.has(usage)) {\n\t\t\t\t\t// Accessors grouped by (first) parent, including vertex and instance attributes.\n\t\t\t\t\tfor (const parentAccessors of Array.from(accessorParents.values())) {\n\t\t\t\t\t\tconst accessors = Array.from(parentAccessors)\n\t\t\t\t\t\t\t.filter((a) => bufferAccessorsSet.has(a))\n\t\t\t\t\t\t\t.filter((a) => context.getAccessorUsage(a) === usage);\n\t\t\t\t\t\tif (!accessors.length) continue;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tusage !== BufferViewUsage.ARRAY_BUFFER ||\n\t\t\t\t\t\t\toptions.vertexLayout === VertexLayout.INTERLEAVED\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Case 1: Non-vertex data OR interleaved vertex data.\n\n\t\t\t\t\t\t\t// Instanced data is not interleaved, see:\n\t\t\t\t\t\t\t// https://github.com/KhronosGroup/glTF/pull/1888\n\t\t\t\t\t\t\tconst result =\n\t\t\t\t\t\t\t\tusage === BufferViewUsage.ARRAY_BUFFER\n\t\t\t\t\t\t\t\t\t? interleaveAccessors(accessors, bufferIndex, bufferByteLength)\n\t\t\t\t\t\t\t\t\t: concatAccessors(accessors, bufferIndex, bufferByteLength);\n\t\t\t\t\t\t\tbufferByteLength += result.byteLength;\n\t\t\t\t\t\t\tbuffers.push(...result.buffers);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Case 2: Non-interleaved vertex data.\n\n\t\t\t\t\t\t\tfor (const accessor of accessors) {\n\t\t\t\t\t\t\t\t// We 'interleave' a single accessor because the method pads to\n\t\t\t\t\t\t\t\t// 4-byte boundaries, which concatAccessors() does not.\n\t\t\t\t\t\t\t\tconst result = interleaveAccessors([accessor], bufferIndex, bufferByteLength);\n\t\t\t\t\t\t\t\tbufferByteLength += result.byteLength;\n\t\t\t\t\t\t\t\tbuffers.push(...result.buffers);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Accessors concatenated end-to-end, including indices, IBMs, and other data.\n\t\t\t\t\tconst accessors = usageGroups[usage].filter((a) => bufferAccessorsSet.has(a));\n\t\t\t\t\tif (!accessors.length) continue;\n\n\t\t\t\t\tconst target =\n\t\t\t\t\t\tusage === BufferViewUsage.ELEMENT_ARRAY_BUFFER\n\t\t\t\t\t\t\t? WriterContext.BufferViewTarget.ELEMENT_ARRAY_BUFFER\n\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\tconst result =\n\t\t\t\t\t\tusage === BufferViewUsage.SPARSE\n\t\t\t\t\t\t\t? concatSparseAccessors(accessors, bufferIndex, bufferByteLength)\n\t\t\t\t\t\t\t: concatAccessors(accessors, bufferIndex, bufferByteLength, target);\n\t\t\t\t\tbufferByteLength += result.byteLength;\n\t\t\t\t\tbuffers.push(...result.buffers);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// We only support embedded images in GLB, where the embedded buffer must be the first.\n\t\t\t// Additional buffers are currently left empty (see EXT_meshopt_compression fallback).\n\t\t\tif (context.imageBufferViews.length && index === 0) {\n\t\t\t\tfor (let i = 0; i < context.imageBufferViews.length; i++) {\n\t\t\t\t\tjson.bufferViews![json.images![i].bufferView!].byteOffset = bufferByteLength;\n\t\t\t\t\tbufferByteLength += context.imageBufferViews[i].byteLength;\n\t\t\t\t\tbuffers.push(context.imageBufferViews[i]);\n\n\t\t\t\t\tif (bufferByteLength % 8) {\n\t\t\t\t\t\t// See: https://github.com/KhronosGroup/glTF/issues/1935\n\t\t\t\t\t\tconst imagePadding = 8 - (bufferByteLength % 8);\n\t\t\t\t\t\tbufferByteLength += imagePadding;\n\t\t\t\t\t\tbuffers.push(new Uint8Array(imagePadding));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (context.otherBufferViews.has(buffer)) {\n\t\t\t\tfor (const data of context.otherBufferViews.get(buffer)!) {\n\t\t\t\t\tjson.bufferViews!.push({\n\t\t\t\t\t\tbuffer: bufferIndex,\n\t\t\t\t\t\tbyteOffset: bufferByteLength,\n\t\t\t\t\t\tbyteLength: data.byteLength,\n\t\t\t\t\t});\n\t\t\t\t\tcontext.otherBufferViewsIndexMap.set(data, json.bufferViews!.length - 1);\n\t\t\t\t\tbufferByteLength += data.byteLength;\n\t\t\t\t\tbuffers.push(data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (bufferByteLength) {\n\t\t\t\t// Assign buffer URI.\n\t\t\t\tlet uri: string;\n\t\t\t\tif (options.format === Format.GLB) {\n\t\t\t\t\turi = GLB_BUFFER;\n\t\t\t\t} else {\n\t\t\t\t\turi = context.bufferURIGenerator.createURI(buffer, 'bin');\n\t\t\t\t\tbufferDef.uri = uri;\n\t\t\t\t}\n\n\t\t\t\t// Write buffer views to buffer.\n\t\t\t\tbufferDef.byteLength = bufferByteLength;\n\t\t\t\tjsonDoc.resources[uri] = BufferUtils.concat(buffers);\n\t\t\t}\n\n\t\t\tjson.buffers!.push(bufferDef);\n\t\t\tcontext.bufferIndexMap.set(buffer, index);\n\t\t});\n\n\t\tif (root.listAccessors().find((a) => !a.getBuffer())) {\n\t\t\tlogger.warn('Skipped writing one or more Accessors: no Buffer assigned.');\n\t\t}\n\n\t\t/* Materials. */\n\n\t\tjson.materials = root.listMaterials().map((material, index) => {\n\t\t\tconst materialDef = context.createPropertyDef(material) as GLTF.IMaterial;\n\n\t\t\t// Program state & blending.\n\n\t\t\tif (material.getAlphaMode() !== Material.AlphaMode.OPAQUE) {\n\t\t\t\tmaterialDef.alphaMode = material.getAlphaMode();\n\t\t\t}\n\t\t\tif (material.getAlphaMode() === Material.AlphaMode.MASK) {\n\t\t\t\tmaterialDef.alphaCutoff = material.getAlphaCutoff();\n\t\t\t}\n\t\t\tif (material.getDoubleSided()) materialDef.doubleSided = true;\n\n\t\t\t// Factors.\n\n\t\t\tmaterialDef.pbrMetallicRoughness = {};\n\t\t\tif (!MathUtils.eq(material.getBaseColorFactor(), [1, 1, 1, 1])) {\n\t\t\t\tmaterialDef.pbrMetallicRoughness.baseColorFactor = material.getBaseColorFactor();\n\t\t\t}\n\t\t\tif (!MathUtils.eq(material.getEmissiveFactor(), [0, 0, 0])) {\n\t\t\t\tmaterialDef.emissiveFactor = material.getEmissiveFactor();\n\t\t\t}\n\t\t\tif (material.getRoughnessFactor() !== 1) {\n\t\t\t\tmaterialDef.pbrMetallicRoughness.roughnessFactor = material.getRoughnessFactor();\n\t\t\t}\n\t\t\tif (material.getMetallicFactor() !== 1) {\n\t\t\t\tmaterialDef.pbrMetallicRoughness.metallicFactor = material.getMetallicFactor();\n\t\t\t}\n\n\t\t\t// Textures.\n\n\t\t\tif (material.getBaseColorTexture()) {\n\t\t\t\tconst texture = material.getBaseColorTexture()!;\n\t\t\t\tconst textureInfo = material.getBaseColorTextureInfo()!;\n\t\t\t\tmaterialDef.pbrMetallicRoughness.baseColorTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t}\n\n\t\t\tif (material.getEmissiveTexture()) {\n\t\t\t\tconst texture = material.getEmissiveTexture()!;\n\t\t\t\tconst textureInfo = material.getEmissiveTextureInfo()!;\n\t\t\t\tmaterialDef.emissiveTexture = context.createTextureInfoDef(texture, textureInfo);\n\t\t\t}\n\n\t\t\tif (material.getNormalTexture()) {\n\t\t\t\tconst texture = material.getNormalTexture()!;\n\t\t\t\tconst textureInfo = material.getNormalTextureInfo()!;\n\t\t\t\tconst textureInfoDef = context.createTextureInfoDef(\n\t\t\t\t\ttexture,\n\t\t\t\t\ttextureInfo\n\t\t\t\t) as GLTF.IMaterialNormalTextureInfo;\n\t\t\t\tif (material.getNormalScale() !== 1) {\n\t\t\t\t\ttextureInfoDef.scale = material.getNormalScale();\n\t\t\t\t}\n\t\t\t\tmaterialDef.normalTexture = textureInfoDef;\n\t\t\t}\n\n\t\t\tif (material.getOcclusionTexture()) {\n\t\t\t\tconst texture = material.getOcclusionTexture()!;\n\t\t\t\tconst textureInfo = material.getOcclusionTextureInfo()!;\n\t\t\t\tconst textureInfoDef = context.createTextureInfoDef(\n\t\t\t\t\ttexture,\n\t\t\t\t\ttextureInfo\n\t\t\t\t) as GLTF.IMaterialOcclusionTextureInfo;\n\t\t\t\tif (material.getOcclusionStrength() !== 1) {\n\t\t\t\t\ttextureInfoDef.strength = material.getOcclusionStrength();\n\t\t\t\t}\n\t\t\t\tmaterialDef.occlusionTexture = textureInfoDef;\n\t\t\t}\n\n\t\t\tif (material.getMetallicRoughnessTexture()) {\n\t\t\t\tconst texture = material.getMetallicRoughnessTexture()!;\n\t\t\t\tconst textureInfo = material.getMetallicRoughnessTextureInfo()!;\n\t\t\t\tmaterialDef.pbrMetallicRoughness.metallicRoughnessTexture = context.createTextureInfoDef(\n\t\t\t\t\ttexture,\n\t\t\t\t\ttextureInfo\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tcontext.materialIndexMap.set(material, index);\n\t\t\treturn materialDef;\n\t\t});\n\n\t\t/* Meshes. */\n\n\t\tjson.meshes = root.listMeshes().map((mesh, index) => {\n\t\t\tconst meshDef = context.createPropertyDef(mesh) as GLTF.IMesh;\n\n\t\t\tlet targetNames: string[] | null = null;\n\n\t\t\tmeshDef.primitives = mesh.listPrimitives().map((primitive) => {\n\t\t\t\tconst primitiveDef: GLTF.IMeshPrimitive = { attributes: {} };\n\n\t\t\t\tprimitiveDef.mode = primitive.getMode();\n\n\t\t\t\tconst material = primitive.getMaterial();\n\t\t\t\tif (material) {\n\t\t\t\t\tprimitiveDef.material = context.materialIndexMap.get(material);\n\t\t\t\t}\n\n\t\t\t\tif (Object.keys(primitive.getExtras()).length) {\n\t\t\t\t\tprimitiveDef.extras = primitive.getExtras();\n\t\t\t\t}\n\n\t\t\t\tconst indices = primitive.getIndices();\n\t\t\t\tif (indices) {\n\t\t\t\t\tprimitiveDef.indices = context.accessorIndexMap.get(indices);\n\t\t\t\t}\n\n\t\t\t\tfor (const semantic of primitive.listSemantics()) {\n\t\t\t\t\tprimitiveDef.attributes[semantic] = context.accessorIndexMap.get(\n\t\t\t\t\t\tprimitive.getAttribute(semantic)!\n\t\t\t\t\t)!;\n\t\t\t\t}\n\n\t\t\t\tfor (const target of primitive.listTargets()) {\n\t\t\t\t\tconst targetDef = {} as { [name: string]: number };\n\n\t\t\t\t\tfor (const semantic of target.listSemantics()) {\n\t\t\t\t\t\ttargetDef[semantic] = context.accessorIndexMap.get(target.getAttribute(semantic)!)!;\n\t\t\t\t\t}\n\n\t\t\t\t\tprimitiveDef.targets = primitiveDef.targets || [];\n\t\t\t\t\tprimitiveDef.targets.push(targetDef);\n\t\t\t\t}\n\n\t\t\t\tif (primitive.listTargets().length && !targetNames) {\n\t\t\t\t\ttargetNames = primitive.listTargets().map((target) => target.getName());\n\t\t\t\t}\n\n\t\t\t\treturn primitiveDef;\n\t\t\t});\n\n\t\t\tif (mesh.getWeights().length) {\n\t\t\t\tmeshDef.weights = mesh.getWeights();\n\t\t\t}\n\n\t\t\tif (targetNames) {\n\t\t\t\tmeshDef.extras = meshDef.extras || {};\n\t\t\t\tmeshDef.extras['targetNames'] = targetNames;\n\t\t\t}\n\n\t\t\tcontext.meshIndexMap.set(mesh, index);\n\t\t\treturn meshDef;\n\t\t});\n\n\t\t/** Cameras. */\n\n\t\tjson.cameras = root.listCameras().map((camera, index) => {\n\t\t\tconst cameraDef = context.createPropertyDef(camera) as GLTF.ICamera;\n\t\t\tcameraDef.type = camera.getType();\n\t\t\tif (cameraDef.type === Camera.Type.PERSPECTIVE) {\n\t\t\t\tcameraDef.perspective = {\n\t\t\t\t\tznear: camera.getZNear(),\n\t\t\t\t\tzfar: camera.getZFar(),\n\t\t\t\t\tyfov: camera.getYFov(),\n\t\t\t\t};\n\t\t\t\tconst aspectRatio = camera.getAspectRatio();\n\t\t\t\tif (aspectRatio !== null) {\n\t\t\t\t\tcameraDef.perspective.aspectRatio = aspectRatio;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcameraDef.orthographic = {\n\t\t\t\t\tznear: camera.getZNear(),\n\t\t\t\t\tzfar: camera.getZFar(),\n\t\t\t\t\txmag: camera.getXMag(),\n\t\t\t\t\tymag: camera.getYMag(),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tcontext.cameraIndexMap.set(camera, index);\n\t\t\treturn cameraDef;\n\t\t});\n\n\t\t/* Nodes. */\n\n\t\tjson.nodes = root.listNodes().map((node, index) => {\n\t\t\tconst nodeDef = context.createPropertyDef(node) as GLTF.INode;\n\n\t\t\tif (!MathUtils.eq(node.getTranslation(), [0, 0, 0])) {\n\t\t\t\tnodeDef.translation = node.getTranslation();\n\t\t\t}\n\n\t\t\tif (!MathUtils.eq(node.getRotation(), [0, 0, 0, 1])) {\n\t\t\t\tnodeDef.rotation = node.getRotation();\n\t\t\t}\n\n\t\t\tif (!MathUtils.eq(node.getScale(), [1, 1, 1])) {\n\t\t\t\tnodeDef.scale = node.getScale();\n\t\t\t}\n\n\t\t\tif (node.getWeights().length) {\n\t\t\t\tnodeDef.weights = node.getWeights();\n\t\t\t}\n\n\t\t\t// Attachments (mesh, camera, skin) defined later in writing process.\n\n\t\t\tcontext.nodeIndexMap.set(node, index);\n\t\t\treturn nodeDef;\n\t\t});\n\n\t\t/** Skins. */\n\n\t\tjson.skins = root.listSkins().map((skin, index) => {\n\t\t\tconst skinDef = context.createPropertyDef(skin) as GLTF.ISkin;\n\n\t\t\tconst inverseBindMatrices = skin.getInverseBindMatrices();\n\t\t\tif (inverseBindMatrices) {\n\t\t\t\tskinDef.inverseBindMatrices = context.accessorIndexMap.get(inverseBindMatrices);\n\t\t\t}\n\n\t\t\tconst skeleton = skin.getSkeleton();\n\t\t\tif (skeleton) {\n\t\t\t\tskinDef.skeleton = context.nodeIndexMap.get(skeleton);\n\t\t\t}\n\n\t\t\tskinDef.joints = skin.listJoints().map((joint) => context.nodeIndexMap.get(joint)!);\n\n\t\t\tcontext.skinIndexMap.set(skin, index);\n\t\t\treturn skinDef;\n\t\t});\n\n\t\t/** Node attachments. */\n\n\t\troot.listNodes().forEach((node, index) => {\n\t\t\tconst nodeDef = json.nodes![index];\n\n\t\t\tconst mesh = node.getMesh();\n\t\t\tif (mesh) {\n\t\t\t\tnodeDef.mesh = context.meshIndexMap.get(mesh);\n\t\t\t}\n\n\t\t\tconst camera = node.getCamera();\n\t\t\tif (camera) {\n\t\t\t\tnodeDef.camera = context.cameraIndexMap.get(camera);\n\t\t\t}\n\n\t\t\tconst skin = node.getSkin();\n\t\t\tif (skin) {\n\t\t\t\tnodeDef.skin = context.skinIndexMap.get(skin);\n\t\t\t}\n\n\t\t\tif (node.listChildren().length > 0) {\n\t\t\t\tnodeDef.children = node.listChildren().map((node) => context.nodeIndexMap.get(node)!);\n\t\t\t}\n\t\t});\n\n\t\t/** Animations. */\n\n\t\tjson.animations = root.listAnimations().map((animation, index) => {\n\t\t\tconst animationDef = context.createPropertyDef(animation) as GLTF.IAnimation;\n\n\t\t\tconst samplerIndexMap: Map<AnimationSampler, number> = new Map();\n\n\t\t\tanimationDef.samplers = animation.listSamplers().map((sampler, samplerIndex) => {\n\t\t\t\tconst samplerDef = context.createPropertyDef(sampler) as GLTF.IAnimationSampler;\n\t\t\t\tsamplerDef.input = context.accessorIndexMap.get(sampler.getInput()!)!;\n\t\t\t\tsamplerDef.output = context.accessorIndexMap.get(sampler.getOutput()!)!;\n\t\t\t\tsamplerDef.interpolation = sampler.getInterpolation();\n\t\t\t\tsamplerIndexMap.set(sampler, samplerIndex);\n\t\t\t\treturn samplerDef;\n\t\t\t});\n\n\t\t\tanimationDef.channels = animation.listChannels().map((channel) => {\n\t\t\t\tconst channelDef = context.createPropertyDef(channel) as GLTF.IAnimationChannel;\n\t\t\t\tchannelDef.sampler = samplerIndexMap.get(channel.getSampler()!)!;\n\t\t\t\tchannelDef.target = {\n\t\t\t\t\tnode: context.nodeIndexMap.get(channel.getTargetNode()!)!,\n\t\t\t\t\tpath: channel.getTargetPath()!,\n\t\t\t\t};\n\t\t\t\treturn channelDef;\n\t\t\t});\n\n\t\t\tcontext.animationIndexMap.set(animation, index);\n\t\t\treturn animationDef;\n\t\t});\n\n\t\t/* Scenes. */\n\n\t\tjson.scenes = root.listScenes().map((scene, index) => {\n\t\t\tconst sceneDef = context.createPropertyDef(scene) as GLTF.IScene;\n\t\t\tsceneDef.nodes = scene.listChildren().map((node) => context.nodeIndexMap.get(node)!);\n\t\t\tcontext.sceneIndexMap.set(scene, index);\n\t\t\treturn sceneDef;\n\t\t});\n\n\t\tconst defaultScene = root.getDefaultScene();\n\t\tif (defaultScene) {\n\t\t\tjson.scene = root.listScenes().indexOf(defaultScene);\n\t\t}\n\n\t\t/* Extensions (2/2). */\n\n\t\tjson.extensionsUsed = extensionsUsed.map((ext) => ext.extensionName);\n\t\tjson.extensionsRequired = extensionsRequired.map((ext) => ext.extensionName);\n\t\textensionsUsed.forEach((extension) => extension.write(context));\n\n\t\t//\n\n\t\tclean(json as unknown as Record<string, unknown>);\n\n\t\treturn jsonDoc;\n\t}\n}\n\n/**\n * Removes empty and null values from an object.\n * @param object\n * @internal\n */\nfunction clean(object: Record<string, unknown>): void {\n\tconst unused: string[] = [];\n\n\tfor (const key in object) {\n\t\tconst value = object[key];\n\t\tif (Array.isArray(value) && value.length === 0) {\n\t\t\tunused.push(key);\n\t\t} else if (value === null || value === '') {\n\t\t\tunused.push(key);\n\t\t} else if (value && typeof value === 'object' && Object.keys(value).length === 0) {\n\t\t\tunused.push(key);\n\t\t}\n\t}\n\n\tfor (const key of unused) {\n\t\tdelete object[key];\n\t}\n}\n","import { Format, GLB_BUFFER, VertexLayout } from '../constants.js';\nimport type { Document } from '../document.js';\nimport type { Extension } from '../extension.js';\nimport type { JSONDocument } from '../json-document.js';\nimport type { GLTF } from '../types/gltf.js';\nimport { BufferUtils, FileUtils, ILogger, Logger, uuid } from '../utils/index.js';\nimport { GLTFReader } from './reader.js';\nimport { GLTFWriter, WriterOptions } from './writer.js';\n\nenum ChunkType {\n\tJSON = 0x4e4f534a,\n\tBIN = 0x004e4942,\n}\n\ntype PublicWriterOptions = Partial<Pick<WriterOptions, 'format' | 'basename'>>;\n\n/**\n * *Abstract I/O service.*\n *\n * The most common use of the I/O service is to read/write a {@link Document} with a given path.\n * Methods are also available for converting in-memory representations of raw glTF files, both\n * binary (*Uint8Array*) and JSON ({@link JSONDocument}).\n *\n * For platform-specific implementations, see {@link NodeIO}, {@link WebIO}, and {@link DenoIO}.\n *\n * @category I/O\n */\nexport abstract class PlatformIO {\n\tprotected _logger: ILogger = Logger.DEFAULT_INSTANCE;\n\tprivate _extensions = new Set<typeof Extension>();\n\tprivate _dependencies: { [key: string]: unknown } = {};\n\tprivate _vertexLayout = VertexLayout.INTERLEAVED;\n\n\t/** @hidden */\n\tpublic lastReadBytes = 0;\n\n\t/** @hidden */\n\tpublic lastWriteBytes = 0;\n\n\t/** Sets the {@link Logger} used by this I/O instance. Defaults to Logger.DEFAULT_INSTANCE. */\n\tpublic setLogger(logger: ILogger): this {\n\t\tthis._logger = logger;\n\t\treturn this;\n\t}\n\n\t/** Registers extensions, enabling I/O class to read and write glTF assets requiring them. */\n\tpublic registerExtensions(extensions: (typeof Extension)[]): this {\n\t\tfor (const extension of extensions) {\n\t\t\tthis._extensions.add(extension);\n\t\t\textension.register();\n\t\t}\n\t\treturn this;\n\t}\n\n\t/** Registers dependencies used (e.g. by extensions) in the I/O process. */\n\tpublic registerDependencies(dependencies: { [key: string]: unknown }): this {\n\t\tObject.assign(this._dependencies, dependencies);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the vertex layout method used by this I/O instance. Defaults to\n\t * VertexLayout.INTERLEAVED.\n\t */\n\tpublic setVertexLayout(layout: VertexLayout): this {\n\t\tthis._vertexLayout = layout;\n\t\treturn this;\n\t}\n\n\t/**********************************************************************************************\n\t * Abstract.\n\t */\n\n\tprotected abstract readURI(uri: string, type: 'view'): Promise<Uint8Array>;\n\tprotected abstract readURI(uri: string, type: 'text'): Promise<string>;\n\tprotected abstract readURI(uri: string, type: 'view' | 'text'): Promise<Uint8Array | string>;\n\n\tprotected abstract resolve(base: string, path: string): string;\n\tprotected abstract dirname(uri: string): string;\n\n\t/**********************************************************************************************\n\t * Public Read API.\n\t */\n\n\t/** Reads a {@link Document} from the given URI. */\n\tpublic async read(uri: string): Promise<Document> {\n\t\treturn await this.readJSON(await this.readAsJSON(uri));\n\t}\n\n\t/** Loads a URI and returns a {@link JSONDocument} struct, without parsing. */\n\tpublic async readAsJSON(uri: string): Promise<JSONDocument> {\n\t\tconst view = await this.readURI(uri, 'view');\n\t\tthis.lastReadBytes = view.byteLength;\n\t\tconst jsonDoc = isGLB(view)\n\t\t\t? this._binaryToJSON(view)\n\t\t\t: { json: JSON.parse(BufferUtils.decodeText(view)), resources: {} };\n\t\t// Read external resources first, before Data URIs are replaced.\n\t\tawait this._readResourcesExternal(jsonDoc, this.dirname(uri));\n\t\tthis._readResourcesInternal(jsonDoc);\n\t\treturn jsonDoc;\n\t}\n\n\t/** Converts glTF-formatted JSON and a resource map to a {@link Document}. */\n\tpublic async readJSON(jsonDoc: JSONDocument): Promise<Document> {\n\t\tjsonDoc = this._copyJSON(jsonDoc);\n\t\tthis._readResourcesInternal(jsonDoc);\n\t\treturn GLTFReader.read(jsonDoc, {\n\t\t\textensions: Array.from(this._extensions),\n\t\t\tdependencies: this._dependencies,\n\t\t\tlogger: this._logger,\n\t\t});\n\t}\n\n\t/** Converts a GLB-formatted Uint8Array to a {@link JSONDocument}. */\n\tpublic async binaryToJSON(glb: Uint8Array): Promise<JSONDocument> {\n\t\tconst jsonDoc = this._binaryToJSON(BufferUtils.assertView(glb));\n\t\tthis._readResourcesInternal(jsonDoc);\n\t\tconst json = jsonDoc.json;\n\n\t\t// Check for external references, which can't be resolved by this method.\n\t\tif (json.buffers && json.buffers.some((bufferDef) => isExternalBuffer(jsonDoc, bufferDef))) {\n\t\t\tthrow new Error('Cannot resolve external buffers with binaryToJSON().');\n\t\t} else if (json.images && json.images.some((imageDef) => isExternalImage(jsonDoc, imageDef))) {\n\t\t\tthrow new Error('Cannot resolve external images with binaryToJSON().');\n\t\t}\n\n\t\treturn jsonDoc;\n\t}\n\n\t/** Converts a GLB-formatted Uint8Array to a {@link Document}. */\n\tpublic async readBinary(glb: Uint8Array): Promise<Document> {\n\t\treturn this.readJSON(await this.binaryToJSON(BufferUtils.assertView(glb)));\n\t}\n\n\t/**********************************************************************************************\n\t * Public Write API.\n\t */\n\n\t/** Converts a {@link Document} to glTF-formatted JSON and a resource map. */\n\tpublic async writeJSON(doc: Document, _options: PublicWriterOptions = {}): Promise<JSONDocument> {\n\t\tif (_options.format === Format.GLB && doc.getRoot().listBuffers().length > 1) {\n\t\t\tthrow new Error('GLB must have 0–1 buffers.');\n\t\t}\n\t\treturn GLTFWriter.write(doc, {\n\t\t\tformat: _options.format || Format.GLTF,\n\t\t\tbasename: _options.basename || '',\n\t\t\tlogger: this._logger,\n\t\t\tvertexLayout: this._vertexLayout,\n\t\t\tdependencies: { ...this._dependencies },\n\t\t\textensions: Array.from(this._extensions),\n\t\t} as Required<WriterOptions>);\n\t}\n\n\t/** Converts a {@link Document} to a GLB-formatted Uint8Array. */\n\tpublic async writeBinary(doc: Document): Promise<Uint8Array> {\n\t\tconst { json, resources } = await this.writeJSON(doc, { format: Format.GLB });\n\n\t\tconst header = new Uint32Array([0x46546c67, 2, 12]);\n\n\t\tconst jsonText = JSON.stringify(json);\n\t\tconst jsonChunkData = BufferUtils.pad(BufferUtils.encodeText(jsonText), 0x20);\n\t\tconst jsonChunkHeader = BufferUtils.toView(new Uint32Array([jsonChunkData.byteLength, 0x4e4f534a]));\n\t\tconst jsonChunk = BufferUtils.concat([jsonChunkHeader, jsonChunkData]);\n\t\theader[header.length - 1] += jsonChunk.byteLength;\n\n\t\tconst binBuffer = Object.values(resources)[0];\n\t\tif (!binBuffer || !binBuffer.byteLength) {\n\t\t\treturn BufferUtils.concat([BufferUtils.toView(header), jsonChunk]);\n\t\t}\n\n\t\tconst binChunkData = BufferUtils.pad(binBuffer, 0x00);\n\t\tconst binChunkHeader = BufferUtils.toView(new Uint32Array([binChunkData.byteLength, 0x004e4942]));\n\t\tconst binChunk = BufferUtils.concat([binChunkHeader, binChunkData]);\n\t\theader[header.length - 1] += binChunk.byteLength;\n\n\t\treturn BufferUtils.concat([BufferUtils.toView(header), jsonChunk, binChunk]);\n\t}\n\n\t/**********************************************************************************************\n\t * Internal.\n\t */\n\n\tprivate async _readResourcesExternal(jsonDoc: JSONDocument, base: string): Promise<void> {\n\t\tconst images = jsonDoc.json.images || [];\n\t\tconst buffers = jsonDoc.json.buffers || [];\n\t\tconst pendingResources: Array<Promise<void>> = [...images, ...buffers].map(\n\t\t\tasync (resource: GLTF.IBuffer | GLTF.IImage): Promise<void> => {\n\t\t\t\tconst uri = resource.uri;\n\t\t\t\tif (!uri || uri.match(/data:/)) return Promise.resolve();\n\n\t\t\t\t// TODO(v4): Perhaps the resources dictionary could have been keyed by decoded URIs\n\t\t\t\t// like \"my image.png\" instead of \"my%20image.png\". But for now, we use the URIs\n\t\t\t\t// verbatim as found in resource definition. Consider revisiting in v4.\n\t\t\t\tjsonDoc.resources[uri] = await this.readURI(this.resolve(base, uri), 'view');\n\t\t\t\tthis.lastReadBytes += jsonDoc.resources[uri].byteLength;\n\t\t\t},\n\t\t);\n\t\tawait Promise.all(pendingResources);\n\t}\n\n\tprivate _readResourcesInternal(jsonDoc: JSONDocument): void {\n\t\t// NOTICE: This method may be called more than once during the loading\n\t\t// process (e.g. WebIO.read) and should handle that safely.\n\n\t\tfunction resolveResource(resource: GLTF.IBuffer | GLTF.IImage) {\n\t\t\tif (!resource.uri) return;\n\n\t\t\tif (resource.uri in jsonDoc.resources) {\n\t\t\t\tBufferUtils.assertView(jsonDoc.resources[resource.uri]);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (resource.uri.match(/data:/)) {\n\t\t\t\t// Rewrite Data URIs to something short and unique.\n\t\t\t\tconst resourceUUID = `__${uuid()}.${FileUtils.extension(resource.uri)}`;\n\t\t\t\tjsonDoc.resources[resourceUUID] = BufferUtils.createBufferFromDataURI(resource.uri);\n\t\t\t\tresource.uri = resourceUUID;\n\t\t\t}\n\t\t}\n\n\t\t// Unpack images.\n\t\tconst images = jsonDoc.json.images || [];\n\t\timages.forEach((image: GLTF.IImage) => {\n\t\t\tif (image.bufferView === undefined && image.uri === undefined) {\n\t\t\t\tthrow new Error('Missing resource URI or buffer view.');\n\t\t\t}\n\n\t\t\tresolveResource(image);\n\t\t});\n\n\t\t// Unpack buffers.\n\t\tconst buffers = jsonDoc.json.buffers || [];\n\t\tbuffers.forEach(resolveResource);\n\t}\n\n\t/**\n\t * Creates a shallow copy of glTF-formatted {@link JSONDocument}.\n\t *\n\t * Images, Buffers, and Resources objects are deep copies so that PlatformIO can safely\n\t * modify them during the parsing process. Other properties are shallow copies, and buffers\n\t * are passed by reference.\n\t */\n\tprivate _copyJSON(jsonDoc: JSONDocument): JSONDocument {\n\t\tconst { images, buffers } = jsonDoc.json;\n\n\t\tjsonDoc = { json: { ...jsonDoc.json }, resources: { ...jsonDoc.resources } };\n\n\t\tif (images) {\n\t\t\tjsonDoc.json.images = images.map((image) => ({ ...image }));\n\t\t}\n\t\tif (buffers) {\n\t\t\tjsonDoc.json.buffers = buffers.map((buffer) => ({ ...buffer }));\n\t\t}\n\n\t\treturn jsonDoc;\n\t}\n\n\t/** Internal version of binaryToJSON; does not warn about external resources. */\n\tprivate _binaryToJSON(glb: Uint8Array): JSONDocument {\n\t\t// Decode and verify GLB header.\n\t\tif (!isGLB(glb)) {\n\t\t\tthrow new Error('Invalid glTF 2.0 binary.');\n\t\t}\n\n\t\t// Decode JSON chunk.\n\n\t\tconst jsonChunkHeader = new Uint32Array(glb.buffer, glb.byteOffset + 12, 2);\n\t\tif (jsonChunkHeader[1] !== ChunkType.JSON) {\n\t\t\tthrow new Error('Missing required GLB JSON chunk.');\n\t\t}\n\n\t\tconst jsonByteOffset = 20;\n\t\tconst jsonByteLength = jsonChunkHeader[0];\n\t\tconst jsonText = BufferUtils.decodeText(BufferUtils.toView(glb, jsonByteOffset, jsonByteLength));\n\t\tconst json = JSON.parse(jsonText) as GLTF.IGLTF;\n\n\t\t// Decode BIN chunk.\n\n\t\tconst binByteOffset = jsonByteOffset + jsonByteLength;\n\t\tif (glb.byteLength <= binByteOffset) {\n\t\t\treturn { json, resources: {} };\n\t\t}\n\n\t\tconst binChunkHeader = new Uint32Array(glb.buffer, glb.byteOffset + binByteOffset, 2);\n\t\tif (binChunkHeader[1] !== ChunkType.BIN) {\n\t\t\tthrow new Error('Expected GLB BIN in second chunk.');\n\t\t}\n\n\t\tconst binByteLength = binChunkHeader[0];\n\t\tconst binBuffer = BufferUtils.toView(glb, binByteOffset + 8, binByteLength);\n\n\t\treturn { json, resources: { [GLB_BUFFER]: binBuffer } };\n\t}\n}\n\nfunction isExternalBuffer(jsonDocument: JSONDocument, bufferDef: GLTF.IBuffer): boolean {\n\treturn bufferDef.uri !== undefined && !(bufferDef.uri in jsonDocument.resources);\n}\n\nfunction isExternalImage(jsonDocument: JSONDocument, imageDef: GLTF.IImage): boolean {\n\treturn imageDef.uri !== undefined && !(imageDef.uri in jsonDocument.resources) && imageDef.bufferView === undefined;\n}\n\nfunction isGLB(view: Uint8Array): boolean {\n\tif (view.byteLength < 3 * Uint32Array.BYTES_PER_ELEMENT) return false;\n\tconst header = new Uint32Array(view.buffer, view.byteOffset, 3);\n\treturn header[0] === 0x46546c67 && header[1] === 2;\n}\n","import { Format } from '../constants.js';\nimport type { Document } from '../document.js';\nimport { FileUtils } from '../utils/index.js';\nimport { PlatformIO } from './platform-io.js';\nimport { HTTPUtils } from '../utils/index.js';\n\n/**\n * *I/O service for Node.js.*\n *\n * The most common use of the I/O service is to read/write a {@link Document} with a given path.\n * Methods are also available for converting in-memory representations of raw glTF files, both\n * binary (*Uint8Array*) and JSON ({@link JSONDocument}).\n *\n * Usage:\n *\n * ```typescript\n * import { NodeIO } from '@gltf-transform/core';\n *\n * const io = new NodeIO();\n *\n * // Read.\n * let document;\n * document = await io.read('model.glb'); // → Document\n * document = await io.readBinary(glb);   // Uint8Array → Document\n *\n * // Write.\n * await io.write('model.glb', document);      // → void\n * const glb = await io.writeBinary(document); // Document → Uint8Array\n * ```\n *\n * By default, NodeIO can only read/write paths on disk. To enable HTTP requests, provide a Fetch\n * API implementation (such as [`node-fetch`](https://www.npmjs.com/package/node-fetch)) and enable\n * {@link NodeIO.setAllowHTTP setAllowHTTP}. HTTP requests may optionally be configured with\n * [RequestInit](https://developer.mozilla.org/en-US/docs/Web/API/fetch#parameters) parameters.\n *\n * ```typescript\n * import fetch from 'node-fetch';\n *\n * const io = new NodeIO(fetch, {headers: {...}}).setAllowHTTP(true);\n *\n * const document = await io.read('https://example.com/path/to/model.glb');\n * ```\n *\n * @category I/O\n */\nexport class NodeIO extends PlatformIO {\n\tprivate declare _fs;\n\tprivate declare _path;\n\tprivate readonly _fetch: typeof fetch | null;\n\tprivate readonly _fetchConfig: RequestInit;\n\n\tprivate _init: Promise<void>;\n\tprivate _fetchEnabled = false;\n\n\t/**\n\t * Constructs a new NodeIO service. Instances are reusable. By default, only NodeIO can only\n\t * read/write paths on disk. To enable HTTP requests, provide a Fetch API implementation and\n\t * enable {@link NodeIO.setAllowHTTP setAllowHTTP}.\n\t *\n\t * @param fetch Implementation of Fetch API.\n\t * @param fetchConfig Configuration object for Fetch API.\n\t */\n\tconstructor(_fetch: unknown = null, _fetchConfig = HTTPUtils.DEFAULT_INIT) {\n\t\tsuper();\n\t\tthis._fetch = _fetch as typeof fetch | null;\n\t\tthis._fetchConfig = _fetchConfig;\n\t\tthis._init = this.init();\n\t}\n\n\tpublic async init(): Promise<void> {\n\t\tif (this._init) return this._init;\n\t\treturn Promise.all([import('fs'), import('path')]).then(([fs, path]) => {\n\t\t\tthis._fs = fs.promises;\n\t\t\tthis._path = path;\n\t\t});\n\t}\n\n\tpublic setAllowHTTP(allow: boolean): this {\n\t\tif (allow && !this._fetch) {\n\t\t\tthrow new Error('NodeIO requires a Fetch API implementation for HTTP requests.');\n\t\t}\n\t\tthis._fetchEnabled = allow;\n\t\treturn this;\n\t}\n\n\tprotected async readURI(uri: string, type: 'view'): Promise<Uint8Array>;\n\tprotected async readURI(uri: string, type: 'text'): Promise<string>;\n\tprotected async readURI(uri: string, type: 'view' | 'text'): Promise<Uint8Array | string> {\n\t\tawait this.init();\n\t\tif (HTTPUtils.isAbsoluteURL(uri)) {\n\t\t\tif (!this._fetchEnabled || !this._fetch) {\n\t\t\t\tthrow new Error('Network request blocked. Allow HTTP requests explicitly, if needed.');\n\t\t\t}\n\n\t\t\tconst response = await this._fetch(uri, this._fetchConfig);\n\t\t\tswitch (type) {\n\t\t\t\tcase 'view':\n\t\t\t\t\treturn new Uint8Array(await response.arrayBuffer());\n\t\t\t\tcase 'text':\n\t\t\t\t\treturn response.text();\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (type) {\n\t\t\t\tcase 'view':\n\t\t\t\t\treturn this._fs.readFile(uri);\n\t\t\t\tcase 'text':\n\t\t\t\t\treturn this._fs.readFile(uri, 'utf8');\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected resolve(base: string, path: string): string {\n\t\tif (HTTPUtils.isAbsoluteURL(base) || HTTPUtils.isAbsoluteURL(path)) {\n\t\t\treturn HTTPUtils.resolve(base, path);\n\t\t}\n\t\t// https://github.com/KhronosGroup/glTF/issues/1449\n\t\t// https://stackoverflow.com/a/27278490/1314762\n\t\treturn this._path.resolve(base, decodeURIComponent(path));\n\t}\n\n\tprotected dirname(uri: string): string {\n\t\tif (HTTPUtils.isAbsoluteURL(uri)) {\n\t\t\treturn HTTPUtils.dirname(uri);\n\t\t}\n\t\treturn this._path.dirname(uri);\n\t}\n\n\t/**********************************************************************************************\n\t * Public.\n\t */\n\n\t/** Writes a {@link Document} instance to a local path. */\n\tpublic async write(uri: string, doc: Document): Promise<void> {\n\t\tawait this.init();\n\t\tconst isGLB = !!uri.match(/\\.glb$/);\n\t\tawait (isGLB ? this._writeGLB(uri, doc) : this._writeGLTF(uri, doc));\n\t}\n\n\t/**********************************************************************************************\n\t * Private.\n\t */\n\n\t/** @internal */\n\tprivate async _writeGLTF(uri: string, doc: Document): Promise<void> {\n\t\tthis.lastWriteBytes = 0;\n\t\tconst { json, resources } = await this.writeJSON(doc, {\n\t\t\tformat: Format.GLTF,\n\t\t\tbasename: FileUtils.basename(uri),\n\t\t});\n\t\tconst { _fs: fs, _path: path } = this;\n\t\tconst dir = path.dirname(uri);\n\t\tconst jsonContent = JSON.stringify(json, null, 2);\n\t\tthis.lastWriteBytes += jsonContent.length;\n\t\tawait fs.writeFile(uri, jsonContent);\n\t\tconst pending = Object.keys(resources).map(async (resourceURI) => {\n\t\t\tif (HTTPUtils.isAbsoluteURL(resourceURI)) {\n\t\t\t\tif (HTTPUtils.extension(resourceURI) === 'bin') {\n\t\t\t\t\tthrow new Error(`Cannot write buffer to path \"${resourceURI}\".`);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// TODO(v4): Consider storing decoded URIs in memory, and avoid decoding here. However,\n\t\t\t// we'll need to think through implications for absolute URLs.\n\t\t\tconst resource = Buffer.from(resources[resourceURI]);\n\t\t\tconst resourcePath = path.join(dir, decodeURIComponent(resourceURI));\n\t\t\tawait fs.mkdir(path.dirname(resourcePath), { recursive: true });\n\t\t\tawait fs.writeFile(resourcePath, resource);\n\t\t\tthis.lastWriteBytes += resource.byteLength;\n\t\t});\n\t\tawait Promise.all(pending);\n\t}\n\n\t/** @internal */\n\tprivate async _writeGLB(uri: string, doc: Document): Promise<void> {\n\t\tconst buffer = Buffer.from(await this.writeBinary(doc));\n\t\tawait this._fs.writeFile(uri, buffer);\n\t\tthis.lastWriteBytes = buffer.byteLength;\n\t}\n}\n","import { PlatformIO } from './platform-io.js';\n\ninterface Path {\n\tresolve(base: string, path: string): string;\n\tdirname(uri: string): string;\n}\n\n/**\n * *I/O service for [Deno](https://deno.land/).*\n *\n * The most common use of the I/O service is to read/write a {@link Document} with a given path.\n * Methods are also available for converting in-memory representations of raw glTF files, both\n * binary (*Uint8Array*) and JSON ({@link JSONDocument}).\n *\n * _*NOTICE:* Support for the Deno environment is currently experimental. See\n * [glTF-Transform#457](https://github.com/donmccurdy/glTF-Transform/issues/457)._\n *\n * Usage:\n *\n * ```typescript\n * import { DenoIO } from 'https://esm.sh/@gltf-transform/core';\n * import * as path from 'https://deno.land/std/path/mod.ts';\n *\n * const io = new DenoIO(path);\n *\n * // Read.\n * let document;\n * document = io.read('model.glb');  // → Document\n * document = io.readBinary(glb);    // Uint8Array → Document\n *\n * // Write.\n * const glb = io.writeBinary(document);  // Document → Uint8Array\n * ```\n *\n * @category I/O\n */\nexport class DenoIO extends PlatformIO {\n\tprivate _path: Path;\n\n\tconstructor(path: unknown) {\n\t\tsuper();\n\t\tthis._path = path as Path;\n\t}\n\n\tprotected async readURI(uri: string, type: 'view'): Promise<Uint8Array>;\n\tprotected async readURI(uri: string, type: 'text'): Promise<string>;\n\tprotected async readURI(uri: string, type: 'view' | 'text'): Promise<Uint8Array | string> {\n\t\t// TODO(cleanup): The @ts-ignore rules below are necessary for typedoc, but not for normal\n\t\t// compilation with microbundle. Clean this up when possible.\n\t\tswitch (type) {\n\t\t\tcase 'view':\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn Deno.readFile(uri);\n\t\t\tcase 'text':\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn Deno.readTextFile(uri);\n\t\t}\n\t}\n\n\tprotected resolve(base: string, path: string): string {\n\t\t// https://github.com/KhronosGroup/glTF/issues/1449\n\t\t// https://stackoverflow.com/a/27278490/1314762\n\t\treturn this._path.resolve(base, decodeURIComponent(path));\n\t}\n\n\tprotected dirname(uri: string): string {\n\t\treturn this._path.dirname(uri);\n\t}\n}\n","import { PlatformIO } from './platform-io.js';\nimport { HTTPUtils } from '../utils/index.js';\n\n/**\n * *I/O service for Web.*\n *\n * The most common use of the I/O service is to read/write a {@link Document} with a given path.\n * Methods are also available for converting in-memory representations of raw glTF files, both\n * binary (*Uint8Array*) and JSON ({@link JSONDocument}).\n *\n * Usage:\n *\n * ```typescript\n * import { WebIO } from '@gltf-transform/core';\n *\n * const io = new WebIO({credentials: 'include'});\n *\n * // Read.\n * let document;\n * document = await io.read('model.glb');  // → Document\n * document = await io.readBinary(glb);    // Uint8Array → Document\n *\n * // Write.\n * const glb = await io.writeBinary(document); // Document → Uint8Array\n * ```\n *\n * @category I/O\n */\nexport class WebIO extends PlatformIO {\n\tprivate readonly _fetchConfig: RequestInit;\n\n\t/**\n\t * Constructs a new WebIO service. Instances are reusable.\n\t * @param fetchConfig Configuration object for Fetch API.\n\t */\n\tconstructor(fetchConfig = HTTPUtils.DEFAULT_INIT) {\n\t\tsuper();\n\t\tthis._fetchConfig = fetchConfig;\n\t}\n\n\tprotected async readURI(uri: string, type: 'view'): Promise<Uint8Array>;\n\tprotected async readURI(uri: string, type: 'text'): Promise<string>;\n\tprotected async readURI(uri: string, type: 'view' | 'text'): Promise<Uint8Array | string> {\n\t\tconst response = await fetch(uri, this._fetchConfig);\n\t\tswitch (type) {\n\t\t\tcase 'view':\n\t\t\t\treturn new Uint8Array(await response.arrayBuffer());\n\t\t\tcase 'text':\n\t\t\t\treturn response.text();\n\t\t}\n\t}\n\n\tprotected resolve(base: string, path: string): string {\n\t\treturn HTTPUtils.resolve(base, path);\n\t}\n\n\tprotected dirname(uri: string): string {\n\t\treturn HTTPUtils.dirname(uri);\n\t}\n}\n"],"names":["VERSION","GLB_BUFFER","PropertyType","VertexLayout","BufferViewUsage","TextureChannel","Format","ComponentTypeToTypedArray","Int8Array","Uint8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","glMatrix.ARRAY_TYPE","getBounds","node","resultBounds","createBounds","parents","propertyType","NODE","listChildren","parent","traverse","mesh","getMesh","meshBounds","getMeshBounds","getWorldMatrix","expandBounds","min","max","worldMatrix","prim","listPrimitives","position","getAttribute","localPos","worldPos","i","getCount","getElement","transformMat4","point","target","Math","Infinity","BufferUtils","createBufferFromDataURI","dataURI","Buffer","byteString","atob","split","ia","length","charCodeAt","data","isBase64","indexOf","from","encodeText","text","TextEncoder","encode","decodeText","array","TextDecoder","decode","toString","concat","arrays","totalByteLength","byteLength","result","byteOffset","set","pad","srcArray","paddingByte","paddedLength","padNumber","dstArray","v","ceil","equals","a","b","toView","buffer","assertView","view","ArrayBuffer","isView","Error","ColorUtils","hexToFactor","hex","floor","_target","convertSRGBToLinear","factorToHex","factor","r","g","convertLinearToSRGB","source","_source","pow","JPEGImageUtils","match","getSize","DataView","next","getUint16","validateJPEGBuffer","getUint8","TypeError","getChannels","_buffer","PNGImageUtils","magic","slice","PNG_FRIED_CHUNK_NAME","getUint32","ImageUtils","registerFormat","mimeType","impl","impls","getMimeType","getVRAMByteLength","uncompressedBytes","channels","resolution","mimeTypeToExtension","pop","extensionToMimeType","extension","FileUtils","basename","uri","fileName","substring","lastIndexOf","startsWith","isObject","o","Object","prototype","call","isPlainObject","ctor","constructor","undefined","prot","hasOwnProperty","Verbosity","Logger","verbosity","debug","DEBUG","console","info","INFO","warn","WARN","error","ERROR","DEFAULT_INSTANCE","MathUtils","identity","eq","tolerance","abs","decodeNormalizedInt","componentType","encodeNormalizedInt","f","round","decompose","srcMat","dstTranslation","dstRotation","dstScale","sx","sy","sz","det","determinant","_m1","invSX","invSY","invSZ","getRotation","compose","srcTranslation","srcRotation","srcScale","dstMat","te","x","y","z","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","equalsRef","refA","refB","getChild","equalsRefList","refListA","refListB","equalsRefMap","refMapA","refMapB","keysA","keys","keysB","key","equalsArray","equalsObject","_a","_b","numKeysA","numKeysB","valueA","valueB","isArray","value","Array","ALPHABET","UNIQUE_RETRIES","ID_LENGTH","previousIDs","Set","generateOne","rtn","charAt","random","uuid","retries","id","has","add","NULL_DOMAIN","HTTPUtils","dirname","path","index","URL","pathname","resolve","base","isRelativePath","stack","parts","push","join","isAbsoluteURL","PROTOCOL_REGEXP","test","DEFAULT_INIT","COPY_IDENTITY","t","EMPTY_SET","Property","GraphNode","graph","name","$attributes","init","dispatchEvent","type","getGraph","getDefaults","assign","extras","attribute","getName","get","setName","getExtras","setExtras","clone","PropertyClass","copy","other","GraphEdge","$immutableKeys","dispose","isRefList","ref","isRefMap","subkey","thisValue","otherValue","setRef","getAttributes","addRef","setRefMap","JSON","parse","stringify","skip","isRef","detach","disconnectParents","n","listParents","ExtensibleProperty","extensions","getExtension","getRefMap","setExtension","extensionProperty","_validateParent","listExtensions","listRefMapValues","Accessor","arguments","_in","_out","ACCESSOR","Type","SCALAR","ComponentType","FLOAT","normalized","sparse","getElementSize","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","getComponentSize","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","UNSIGNED_INT","getMinNormalized","elementSize","getMin","j","count","Number","isFinite","getMaxNormalized","getMax","getType","setType","BYTES_PER_ELEMENT","getComponentType","getNormalized","setNormalized","getScalar","setScalar","setElement","getSparse","setSparse","getBuffer","getRef","setBuffer","getArray","setArray","arrayToComponentType","getByteLength","Animation","ANIMATION","samplers","addChannel","channel","removeChannel","removeRef","listChannels","listRefs","addSampler","sampler","removeSampler","listSamplers","AnimationChannel","ANIMATION_CHANNEL","targetPath","targetNode","getTargetPath","setTargetPath","getTargetNode","setTargetNode","getSampler","setSampler","TargetPath","TRANSLATION","ROTATION","SCALE","WEIGHTS","AnimationSampler","ANIMATION_SAMPLER","getDefaultAttributes","interpolation","Interpolation","LINEAR","input","output","getInterpolation","setInterpolation","getInput","setInput","usage","OTHER","getOutput","setOutput","STEP","CUBICSPLINE","BUFFER","getURI","setURI","Camera","CAMERA","PERSPECTIVE","znear","zfar","aspectRatio","yfov","PI","xmag","ymag","getZNear","setZNear","getZFar","setZFar","getAspectRatio","setAspectRatio","getYFov","setYFov","getXMag","setXMag","getYMag","setYMag","ORTHOGRAPHIC","ExtensionProperty","parentTypes","includes","EXTENSION_NAME","TextureInfo","TEXTURE_INFO","texCoord","magFilter","minFilter","wrapS","WrapMode","REPEAT","wrapT","getTexCoord","setTexCoord","getMagFilter","setMagFilter","getMinFilter","setMinFilter","getWrapS","setWrapS","getWrapT","setWrapT","CLAMP_TO_EDGE","MIRRORED_REPEAT","MagFilter","NEAREST","MinFilter","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","R","G","B","A","Material","MATERIAL","alphaMode","AlphaMode","OPAQUE","alphaCutoff","doubleSided","baseColorFactor","baseColorTexture","baseColorTextureInfo","emissiveFactor","emissiveTexture","emissiveTextureInfo","normalScale","normalTexture","normalTextureInfo","occlusionStrength","occlusionTexture","occlusionTextureInfo","roughnessFactor","metallicFactor","metallicRoughnessTexture","metallicRoughnessTextureInfo","getDoubleSided","setDoubleSided","getAlpha","setAlpha","alpha","getAlphaMode","setAlphaMode","getAlphaCutoff","setAlphaCutoff","getBaseColorFactor","setBaseColorFactor","getBaseColorTexture","getBaseColorTextureInfo","setBaseColorTexture","texture","isColor","getEmissiveFactor","setEmissiveFactor","getEmissiveTexture","getEmissiveTextureInfo","setEmissiveTexture","getNormalScale","setNormalScale","scale","getNormalTexture","getNormalTextureInfo","setNormalTexture","getOcclusionStrength","setOcclusionStrength","strength","getOcclusionTexture","getOcclusionTextureInfo","setOcclusionTexture","getRoughnessFactor","setRoughnessFactor","getMetallicFactor","setMetallicFactor","getMetallicRoughnessTexture","getMetallicRoughnessTextureInfo","setMetallicRoughnessTexture","MASK","BLEND","Mesh","MESH","weights","primitives","addPrimitive","primitive","removePrimitive","getWeights","setWeights","Node","_parentNode","_parentScenes","translation","rotation","camera","skin","children","getTranslation","getScale","setTranslation","setRotation","setScale","getMatrix","setMatrix","matrix","getWorldTranslation","getWorldRotation","getWorldScale","s","ancestors","ancestor","multiply","addChild","child","removeChild","size","scene","childrenRefs","addEventListener","getParentNode","setMesh","getCamera","setCamera","getSkin","setSkin","fn","Primitive","PRIMITIVE","mode","Mode","TRIANGLES","material","indices","attributes","targets","getIndices","setIndices","ELEMENT_ARRAY_BUFFER","semantic","setAttribute","accessor","ARRAY_BUFFER","listAttributes","listSemantics","listRefMapKeys","getMaterial","setMaterial","getMode","setMode","listTargets","addTarget","removeTarget","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLE_STRIP","TRIANGLE_FAN","PrimitiveTarget","PRIMITIVE_TARGET","Scene","SCENE","delete","Skin","SKIN","skeleton","inverseBindMatrices","joints","getSkeleton","setSkeleton","getInverseBindMatrices","setInverseBindMatrices","INVERSE_BIND_MATRICES","addJoint","joint","removeJoint","listJoints","Texture","TEXTURE","image","setMimeType","getImage","setImage","Root","ROOT","asset","generator","version","defaultScene","accessors","animations","buffers","cameras","materials","meshes","nodes","scenes","skins","textures","_extensions","event","_addChildOfRoot","setDefaultScene","getDefaultScene","extensionName","otherExtension","getAsset","listExtensionsUsed","listExtensionsRequired","filter","isRequired","_enableExtension","_disableExtension","listScenes","listNodes","listCameras","listSkins","listMeshes","listMaterials","listTextures","listAnimations","listAccessors","listBuffers","then","_settle","bind","pact","state","observer","_Pact","onRejected","_isSettledPact","thenable","_forTo","body","check","reject","_cycle","e","step","iterator","done","return","_fixup","values","Document","fromGraph","_GRAPH_DOCUMENTS","_graph","Graph","_root","_logger","getRoot","getLogger","setLogger","logger","merge","thisExtension","createExtension","setRequired","visited","propertyMap","Map","edge","listEdges","otherProp","getParent","thisProp","p","resolved","transform","_arguments","_this","transforms","map","_temp","_forOf","Promise","prevExtension","find","ext","createScene","createNode","createCamera","createSkin","createMesh","createPrimitive","createPrimitiveTarget","createMaterial","createTexture","createAnimation","createAnimationChannel","createAnimationSampler","createAccessor","createBuffer","WeakMap","Extension","document","prereadTypes","prewriteTypes","readDependencies","writeDependencies","required","properties","_listener","_event","_addExtensionProperty","_removeExtensionProperty","removeEventListener","property","register","listProperties","install","dependency","preread","_readerContext","_propertyType","prewrite","_writerContext","ReaderContext","jsonDoc","bufferViews","bufferViewBuffers","textureInfos","setTextureInfo","textureInfo","textureInfoDef","textureDef","json","samplerDef","DEFAULT_OPTIONS","dependencies","GLTFReader","read","_options","options","validate","context","assetDef","copyright","extensionsUsed","extensionsRequired","bufferDefs","forEach","bufferDef","bufferViewDefs","bufferViewDef","resource","resources","accessorDefs","accessorDef","bufferView","getAccessorArray","imageDefs","images","textureDefs","imageDef","bufferData","imageData","materialDefs","materialDef","pbrDef","pbrMetallicRoughness","meshDefs","meshDef","primitiveDefs","primitiveDef","entries","targetNames","targetDefs","targetDef","targetIndex","targetName","accessorIndex","cameraDefs","cameraDef","perspectiveDef","perspective","orthoDef","orthographic","nodeDefs","nodeDef","skinDefs","skinDef","nodeIndex","childIndex","animationDefs","animationDef","animation","samplerDefs","channelDef","sceneDefs","sceneDef","hasSparseValues","isZeroFilled","getSparseArray","getInterleavedArray","TypedArray","componentSize","accessorByteOffset","byteStride","getFloat32","getInt16","getInt8","elementStride","sparseDef","indicesDef","valuesDef","BufferViewTarget","WriterContext","_doc","accessorIndexMap","animationIndexMap","bufferIndexMap","cameraIndexMap","skinIndexMap","materialIndexMap","meshIndexMap","nodeIndexMap","imageIndexMap","textureDefIndexMap","textureInfoDefMap","samplerDefIndexMap","sceneIndexMap","imageBufferViews","otherBufferViews","otherBufferViewsIndexMap","extensionData","bufferURIGenerator","imageURIGenerator","_accessorUsageMap","accessorUsageGroupedByParent","accessorParents","root","numBuffers","numImages","UniqueURIGenerator","getSlot","createTextureInfoDef","samplerKey","textureKey","createPropertyDef","def","createAccessorDef","needsBounds","listParentEdges","some","fround","createImageData","format","GLB","createURI","getAccessorUsage","cachedUsage","SPARSE","addAccessorToUsageGroup","prevUsage","listAccessorUsageGroups","USAGE_TO_TARGET","multiple","counter","object","replace","GLTFWriter","write","doc","extensionsRegistered","concatAccessors","bufferIndex","bufferByteOffset","bufferViewTarget","accessorArray","bufferViewData","interleaveAccessors","vertexCount","vertexByteOffset","viewByteOffset","setFloat32","setInt8","setInt16","setUint8","setUint16","setUint32","concatSparseAccessors","sparseData","maxIndex","el","fill","il","pct","toFixed","ValueArray","IndexArray","IndexComponentType","indicesBufferViewDef","indicesByteOffset","indicesBufferViewIndex","valuesBufferViewDef","valuesByteOffset","valuesBufferViewIndex","accessorRefs","uses","textureIndex","groupByParent","accessorEdges","parentAccessors","hasBinaryResources","bufferAccessors","bufferAccessorsSet","bufferByteLength","usageGroups","vertexLayout","INTERLEAVED","imagePadding","samplerIndexMap","samplerIndex","clean","unused","ChunkType","PlatformIO","_dependencies","_vertexLayout","lastReadBytes","lastWriteBytes","registerExtensions","registerDependencies","setVertexLayout","layout","_readJSON","readJSON","readAsJSON","_this$readAsJSON","_this2","readURI","isGLB","_binaryToJSON","_readResourcesExternal","_readResourcesInternal","_this3","_copyJSON","binaryToJSON","glb","_this4","isExternalBuffer","isExternalImage","readBinary","_this5","_readJSON2","_this5$binaryToJSON","writeJSON","_this6","GLTF","writeBinary","_this7","_ref","header","jsonText","jsonChunkData","jsonChunkHeader","jsonChunk","binBuffer","binChunkData","binChunkHeader","binChunk","_this8","pendingResources","_this8$readURI","all","resolveResource","resourceUUID","jsonByteOffset","jsonByteLength","binByteOffset","BIN","binByteLength","jsonDocument","NodeIO","_fetch","_fetchConfig","_init","_fetchEnabled","fs","_fs","promises","_path","setAllowHTTP","allow","response","_switch","arrayBuffer","_response$arrayBuffer","readFile","decodeURIComponent","_writeGLB","_writeGLTF","_ref2","dir","jsonContent","writeFile","pending","resourceURI","resourcePath","mkdir","recursive","_Buffer","_from","_this5$writeBinary","DenoIO","Deno","readTextFile","WebIO","fetchConfig","fetch"],"mappings":"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,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACrD,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACb,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACrD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACtD,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACb,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACb,EAAE,EAAE,GAAG,CAAC,C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"}